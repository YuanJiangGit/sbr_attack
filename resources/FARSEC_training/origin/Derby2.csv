,issue_id,type,status,resolution,component,priority,reporter,created,assigned,assignee,resolved,fixingTimeFromCreate,fixingTimeFromAssignment,summary,description,affectVersion,fixVersion,votes,watches,description_words,assingnee_count,comment_count,commentator_count,Surprising,Dormant,Blocker,Security,Performance,Breakage,commit_count,file_count,files
3,42.0,Improvement,Closed,Fixed,Services,Major,Sunitha Kambhampati,2004/10/15 01:26:43 +0100,2004/10/15 01:26:43 +0100,Sunitha Kambhampati,2005/06/05 02:48:28 +0100,233.0567708,233.0567708,When using encryption  do not store the length information about the external key in service.properties   ,When using derby database encryption there is a provision to provide the key to be used for encryption as an external key. In this case the key is not stored in the database for added security. There should not be any useful information about the external key that was used for encrypting the database in the service.properties.Right now  key length is stored in service.properties. This should not be stored in service.properties.   ,10.0.2.0,10.0.2.1,0.0,0.0,70.0,1.0,4.0,2.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,1,java/engine/org/apache/derby/impl/services/jce/JCECipherFactory.java;
25,198.0,Improvement,Closed,Fixed,Network Server,Minor,Kathey Marsden,2005/04/05 09:11:31 +0100,2005/04/05 09:11:31 +0100,Sunitha Kambhampati,2005/06/01 05:17:25 +0100,56.83743056,56.83743056,Add Support for network Server USRIDONL security   ,Currently Network Server supports only two security mechanisms.User ID and password (usridpwd)User ID and encrypted password (eusridpwd)It would be good to add support for User ID Only security so that it could more closely match the embedded driver and not always require a password.See details of security mechanism implementations in section 4.4.2.1 of DRDA V3 Vol. 1: Distributed Relational Database Architecture http://www.opengroup.org/dbiop/   ,10.1.1.0,10.1.1.0,0.0,0.0,65.0,1.0,3.0,2.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,16,java/drda/org/apache/derby/impl/drda/CodePoint.java;java/drda/org/apache/derby/impl/drda/DB2jServerImpl.java;java/drda/org/apache/derby/impl/drda/DRDAConnThread.java;java/drda/org/apache/derby/impl/drda/Database.java;java/testing/org/apache/derbyTesting/functionTests/master/DerbyNet/testSecMec.out;java/testing/org/apache/derbyTesting/functionTests/master/DerbyNetClient/testSecMec.out;java/testing/org/apache/derbyTesting/functionTests/master/DerbyNetClient/testij.out;java/testing/org/apache/derbyTesting/functionTests/master/testij.out;java/testing/org/apache/derbyTesting/functionTests/suites/derbynetmats.runall;java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/copyfiles.ant;java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/dataSourcePermissions_net.java;java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/protocol.tests;java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/testSecMec.java;java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/testSecMec_app.properties;java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/testclientij.sql;java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/testij.sql;
32,233.0,Improvement,Closed,Fixed,Demos/Scripts,Minor,Andrew McIntyre,2005/04/21 09:33:01 +0100,2005/04/21 09:51:43 +0100,Andrew McIntyre,2005/04/29 14:06:12 +0100,8.189710648,8.176724537,Fix copyright notices and other IBM/Cloudscape references in java/demo/*   ,Assigning this issue to 'Documentation' component  as there is not a Demos component.   ,10.0.2.2; 10.1.1.0,10.0.2.2; 10.1.1.0,0.0,0.0,13.0,2.0,2.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,12,java/demo/demo.html;java/demo/navbar.html;java/demo/nserverdemo/NetworkServerUtil.java;java/demo/nserverdemo/NsSample.java;java/demo/nserverdemo/NsSampleClientThread.java;java/demo/nserverdemo/SimpleNetworkClientSample.java;java/demo/nserverdemo/SimpleNetworkServerSample.java;java/demo/nserverdemo/nserverdemo.html;java/demo/nserverdemo/readme.html;java/demo/nserverdemo/simpleserversample.html;java/demo/simple/SimpleApp.java;java/demo/simple/example.html;
33,238.0,Bug,Closed,Fixed,Test,Minor,Sunitha Kambhampati,2005/04/27 03:12:15 +0100,2005/04/29 03:22:11 +0100,Myrna van Lunteren,2005/10/06 02:57:42 +0100,161.9898958,159.9829977,Testharness: testEncryptionAlgorithm property is not being picked up correctly for some encryption suites   ,It looks like the encryption.properties - testEncryptionAlgorithm=DESede/CBC/NoPadding is not being picked up for the encryption run of stress.multi test. But the test uses a database with the default encryption algorithm - DES/CBC/NoPadding   ,10.1.1.0,10.2.1.6,0.0,0.0,32.0,1.0,2.0,2.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,2,java/testing/org/apache/derbyTesting/functionTests/harness/RunList.java;java/testing/org/apache/derbyTesting/functionTests/harness/RunSuite.java;
43,324.0,Bug,Closed,Fixed,Test,Minor,Olav Sandstaa,2005/05/30 23:55:10 +0100,2005/06/02 22:42:35 +0100,Olav Sandstaa,2006/05/13 22:35:23 +0100,347.94459489999997,344.995,AES encryption test fails on Solaris 10   ,The store/aes.sql test on Solaris 10 produces the following diff report:     Start: aes jdk1.4.2_02 2005-05-30 12:13:17 ***206 del&lt; ERROR XJ001: Java exception: 'Wrong keysize: must be equal to 128  192 or 256: java.security.InvalidParameterException'.206a206&gt; ERROR XJ001: Java exception: 'AES key length must be 128  192  or 256 bits: java.security.InvalidParameterException'.Test Failed. End: aes jdk1.4.2_02 2005-05-30 12:14:06 ***    The cause of this problem is that on most OSs  the java.security.InvalidParameterException thrown by the JVM when an invalid encryption key length is requested contains a message with the following text: Wrong keysize: must be equal to 128  192 or 256while on Solaris 10 the message contained in the exception has been changed to: AES key length must be 128  192  or 256 bitsThe reason for this is most likely that a different encryption library is included in Solaris 10 comparedto the other OSs  either as part of the JVM or as a native library.The problem occurs on Solaris 10 running on both x86 and Sparc processors. It occurs both with jdk 1.4 and jdk 1.5.   ,10.1.1.0,10.1.3.1; 10.2.1.6,0.0,0.0,178.0,1.0,9.0,4.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,1,java/testing/org/apache/derbyTesting/functionTests/tests/store/aes_sed.properties;
52,385.0,Bug,Closed,Fixed,Network Server,Trivial,Myrna van Lunteren,2005/06/22 04:55:36 +0100,2005/07/01 15:07:32 +0100,Myrna van Lunteren,2005/10/06 08:07:30 +0100,106.1332639,96.70831019,servlet Back to Main Page link points to csnet instead of derbynet   ,The link at the top of the servlet java/drda/org/apache/derby/drda/NetServlet.java links to csnet (because of the static String SERVLET_ADDRESS). However  the servlet address is now derbynet.   ,10.1.1.0,10.1.2.1; 10.2.1.6,0.0,0.0,25.0,1.0,5.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,1,java/drda/org/apache/derby/drda/NetServlet.java;
63,485.0,Bug,Closed,Fixed,SQL,Minor,Daniel John Debrunner,2005/08/03 05:31:30 +0100,2005/08/03 05:31:30 +0100,Daniel John Debrunner,2005/09/30 03:26:59 +0100,57.91353009,57.91353009,SecurityException or LinkageException thrown during loading a class from a database jar incorrectly shuts the engine down.   ,In addiing test cases to lang/dcl.test for signed jar files stored in the database I found that if a jar is installed with a tampered class the resulting SecurityException shuts Derby down. Most likely the same would be true for an invalid class hacked into the jar.   ,10.1.2.1; 10.2.1.6,10.1.2.1; 10.2.1.6,0.0,0.0,47.0,1.0,3.0,2.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,17,java/engine/org/apache/derby/iapi/services/loader/ClassFactory.java;java/engine/org/apache/derby/iapi/services/loader/ClassInspector.java;java/engine/org/apache/derby/iapi/types/TypeId.java;java/engine/org/apache/derby/impl/services/reflect/DatabaseClasses.java;java/engine/org/apache/derby/impl/services/reflect/ReflectClassesJava2.java;java/engine/org/apache/derby/impl/sql/compile/ColumnDefinitionNode.java;java/engine/org/apache/derby/impl/sql/compile/QueryTreeNode.java;java/engine/org/apache/derby/impl/sql/execute/CreateAliasConstantAction.java;java/testing/org/apache/derbyTesting/functionTests/master/dcl.out;java/testing/org/apache/derbyTesting/functionTests/master/jdk15/dcl.out;java/testing/org/apache/derbyTesting/functionTests/tests/lang/copyfiles.ant;java/testing/org/apache/derbyTesting/functionTests/tests/lang/dcl.sql;java/testing/org/apache/derbyTesting/functionTests/tests/lang/dcl_app.properties;java/testing/org/apache/derbyTesting/functionTests/tests/lang/dcl_emc2.jar;java/testing/org/apache/derbyTesting/functionTests/tests/lang/dcl_emc2l.jar;java/testing/org/apache/derbyTesting/functionTests/tests/lang/dcl_emc2s.jar;java/testing/org/apache/derbyTesting/functionTests/tests/lang/dcl_emc2sm.jar;
79,622.0,Bug,Closed,Fixed,Tools,Minor,Daniel John Debrunner,2005/10/13 23:36:44 +0100,,Unassigned,2006/08/01 06:22:50 +0100,291.2820139,,sysinfo incorrectly requires permission on Derby jar files   ,Running the test derbynet/sysinfo.java requires this permission in derby_tests.policy  in order to read the jar files.permission java.io.FilePermission '${csinfo.codedir}${/}*'  'read'But according to the Java security specs:'Note: code can always read a file from the same directory it's in (or a subdirectory of that directory); it does not need explicit permission to do so.'Probably means a privileged block is required when accessing the contents of the jar files in sysinfo   ,10.2.1.6,10.2.1.6,0.0,0.0,68.0,0.0,11.0,4.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,1,java/tools/org/apache/derby/impl/tools/sysinfo/Main.java;
80,623.0,Bug,Closed,Fixed,Services,Minor,Daniel John Debrunner,2005/10/13 23:41:33 +0100,2006/03/06 21:50:58 +0100,Kristian Waagan,2006/03/17 16:59:26 +0100,154.72075230000002,10.7975463,Derby monitor accesses two system properties without using a privileged block when built sane=true   ,When built with sane=true and testing with the jars these permissions are required to be granted all the way up the stack  currently this means for the tests granting them to the network server jar. permission java.util.PropertyPermission 'derby.monitor.verbose'  'read'; permission java.util.PropertyPermission 'derby.debug.*'  'read';The engine contains code to read system properties using privileged blocks  this should be used by the monitor.   ,10.2.1.6,10.2.1.6,0.0,0.0,60.0,1.0,13.0,2.0,0.0,0.0,0.0,1.0,0.0,0.0,2.0,5,java/engine/org/apache/derby/impl/services/monitor/BaseMonitor.java;java/testing/org/apache/derbyTesting/functionTests/util/derby_tests.policy;java/engine/org/apache/derby/iapi/services/monitor/ModuleFactory.java;java/engine/org/apache/derby/iapi/services/property/PropertyUtil.java;java/engine/org/apache/derby/impl/services/monitor/FileMonitor.java;
86,656.0,Bug,Closed,Fixed,,Major,Daniel John Debrunner,2005/10/28 03:08:40 +0100,2005/10/28 03:08:40 +0100,Daniel John Debrunner,2005/11/02 08:29:48 +0100,5.2230092589999995,5.223009259,SecurityException with accessDeclaredMembers on DatabaseMetaData.getTables.   ,The code to determine the size of a class is using getDeclaredMembers which requires the permission accessDeclaredMembers. Ideally should not require to grant this permission to derby.jar. Need to see whichclass's size was being calculated. The code is not in a priv block which would require granting the permission all the way up the stack.Maybe if the class's declared memebrs can not be accessed and the value can not be pre-calculkated then some estimate could be made. (using public fields?).java.security.AccessControlException: Access denied (java.lang.RuntimePermission accessDeclaredMembers) at java.security.AccessController.checkPermission(AccessController.java:107) at java.lang.SecurityManager.checkPermission(SecurityManager.java:547) at com.ibm.ws.security.core.SecurityManager.checkPermission(SecurityManager.java:188) at java.lang.SecurityManager.checkMemberAccess(SecurityManager.java:1677) at java.lang.Class.checkMemberAccess(Class.java:104) at java.lang.Class.getDeclaredFields(Class.java:508) at org.apache.derby.iapi.services.cache.ClassSize.getSizeCoefficients(Unknown Source) at org.apache.derby.iapi.services.cache.ClassSize.estimateBase(Unknown Source) at org.apache.derby.iapi.store.access.BackingStoreHashtable.&lt;clinit&gt;(Unknown Source) at java.lang.J9VMInternals.initializeImpl(Native Method) at java.lang.J9VMInternals.initialize(J9VMInternals.java:148) at org.apache.derby.impl.sql.execute.HashTableResultSet.openCore(Unknown Source) at org.apache.derby.impl.sql.execute.JoinResultSet.openRight(Unknown Source) at org.apache.derby.impl.sql.execute.JoinResultSet.openCore(Unknown Source) at org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.openCore(Unknown Source) at org.apache.derby.impl.sql.execute.SortResultSet.openCore(Unknown Source) at org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.open(Unknown Source) at org.apache.derby.impl.sql.GenericPreparedStatement.execute(Unknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(Unknown Source) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatement(Unknown Source) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeQuery(Unknown Source) at org.apache.derby.impl.jdbc.EmbedDatabaseMetaData.getTables(Unknown Source)   ,10.1.1.0,10.1.2.1; 10.2.1.6,0.0,0.0,143.0,1.0,1.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,1,java/engine/org/apache/derby/iapi/store/access/BackingStoreHashtable.java;
106,857.0,Bug,Closed,Fixed,Services,Major,Daniel John Debrunner,2006/01/24 05:22:24 +0100,2007/10/16 01:32:27 +0100,Kathey Marsden,2007/10/19 22:01:03 +0100,633.6935069,3.853194444,LDAP user authentication fails under a security manager   ,Running the test jdbcapi/secureUsers1.sql with a security manager results in:&gt; ERROR 08004: Connection refused : javax.naming.CommunicationException: noSuchMachine:389 &#91;Root exception is java.security.AccessControlException: access denied (java.net.SocketPermission noSuchMachine resolve)&#93;Adding this permission to the policy file has no effect. which means a priv block is required around the LDAP call.permission java.net.SocketPermission 'noSuchMachine'  'resolve';   ,10.0.2.0; 10.0.2.1; 10.1.1.0; 10.1.2.1; 10.2.1.6,10.3.2.1; 10.4.1.3,1.0,0.0,50.0,1.0,18.0,5.0,0.0,1.0,0.0,1.0,0.0,0.0,2.0,2,java/engine/org/apache/derby/impl/jdbc/authentication/LDAPAuthenticationSchemeImpl.java;java/engine/org/apache/derby/impl/jdbc/authentication/LDAPAuthenticationSchemeImpl.java;
111,918.0,Improvement,Closed,Fixed,Test,Major,Andreas Korneliussen,2006/02/03 22:12:15 +0100,2006/02/03 22:12:15 +0100,Andreas Korneliussen,2006/04/11 18:05:12 +0100,66.8284375,66.8284375,introduce a new test type to run junit tests from the current harness   ,It seems to me that for including a new JUnit test into i.e derby-all we need to make a new java class with a main() method  which parses a command line and set up the testsuite and run it  just like any java program. Basically we are running the junit tests as test type 'java'.Instead of having to do this for every junit test going into a derby test suite  I would propose a different strategy.I propose to introduce a new test type called 'junit' (current test types are: sql sql2 unit java multi demo - unit is not junit)Then you can use:java org.apache.derbyTesting.functionTests.harness.RunTest &lt;TestCaseClassName&gt;.junitto run a Junit test - instead of:java org.apache.derbyTesting.functionTests.harness.RunTest &lt;AnotherClassWithMainMethod&gt;.javaWhen starting a test of type junit  the RunTest class may simply use thejunit.textui.TestRunner class  which has a main method which takes a TestCase class name as parameter. The junit.textui.TestRunner runs the tests defined by the suite() method of the TestCase class.I think this strategy will make it easier to integrate new JUnit tests into the current test suites  since it save you the trouble of creating a java class with a main method for every test.   ,10.2.1.6,10.2.1.6,0.0,1.0,185.0,1.0,7.0,4.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,17,java/engine/org/apache/derby/impl/sql/execute/ScrollInsensitiveResultSet.java;java/testing/org/apache/derbyTesting/functionTests/harness/RunTest.java;java/testing/org/apache/derbyTesting/functionTests/harness/testtypes.properties;java/testing/org/apache/derbyTesting/functionTests/master/DerbyNetClient/SURTest.out;java/testing/org/apache/derbyTesting/functionTests/master/SURTest.out;java/testing/org/apache/derbyTesting/functionTests/suites/DerbyNet.exclude;java/testing/org/apache/derbyTesting/functionTests/suites/derbynetclientmats.runall;java/testing/org/apache/derbyTesting/functionTests/suites/jdbcapi.runall;java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/ConcurrencyTest.java;java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/ConcurrencyTest_app.properties;java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/SURBaseTest.java;java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/SURDataModelSetup.java;java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/SURQueryMixTest.java;java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/SURQueryMixTest_app.properties;java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/SURTest.java;java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/SURTest_app.properties;java/testing/org/apache/derbyTesting/functionTests/util/TestUtil.java;
127,1055.0,Bug,Closed,Fixed,Network Client,Minor,Sunitha Kambhampati,2006/02/26 11:48:47 +0100,2006/02/26 11:48:47 +0100,Sunitha Kambhampati,2006/05/05 06:23:30 +0100,67.7741088,67.7741088,Security.AccessControlException in client under SecurityManager when trying to connect using EUSRIDPWD security mechanism   ,When using EUSRIDPWD security mechanism  the JCE provider is added and since this is not in a privileged block  an accesscontrol exception is raised when trying to connect using EUSRIDPWD security mechanism  when client is run under security manager.Enabled test (T5) in testSecMec.java &gt; T5: jdbc:derby://xxxFILTERED_HOSTNAMExxx:xxxFILTEREDPORTxxx/wombat;user=neelima;password=lee;securityMechanism=9 - EXCEPTION Unexpected throwable caught java.security.AccessControlException: access denied (java.security.SecurityPermission insertProvider.SunJCE)   ,10.0.2.0; 10.0.2.1; 10.1.1.0; 10.1.2.1; 10.1.3.1,10.1.3.1; 10.2.1.6,0.0,0.0,56.0,1.0,13.0,4.0,0.0,1.0,0.0,1.0,0.0,0.0,1.0,6,java/client/org/apache/derby/client/am/EncryptionManager.java;java/testing/org/apache/derbyTesting/functionTests/master/DerbyNet/ibm14/testSecMec.out;java/testing/org/apache/derbyTesting/functionTests/master/DerbyNet/testSecMec.out;java/testing/org/apache/derbyTesting/functionTests/master/DerbyNetClient/ibm14/testSecMec.out;java/testing/org/apache/derbyTesting/functionTests/master/DerbyNetClient/testSecMec.out;java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/testSecMec.java;
138,1129.0,Bug,Closed,Fixed,Test,Major,Ole Solberg,2006/03/20 18:08:34 +0100,2006/04/29 03:28:58 +0100,Rick Hillegas,2007/05/15 22:18:00 +0100,421.1732176,381.7840509,compatibility tests fail with security related errors.   ,A * few* cases:                 Begin: serverVM-1.3_serverTrunk_clientVM-1.3_clientTrunkException in thread 'main' java.lang.NoClassDefFoundError: javax/crypto/IllegalBlockSizeException             End: serverVM-1.3_serverTrunk_clientVM-1.3_clientTrunk                     Begin: serverVM-1.3_server10.0.2.1_clientVM-1.3_clientDB2JCCcom.ibm.db2.jcc.c.SqlException: java.net.ConnectException : Error opening socket to server localhost on port 1527 with message : Connection refused at org.apache.derbyTesting.functionTests.tests.junitTests.compatibility.CompatibilitySuite.main(CompatibilitySuite.java:129)Exception in thread 'main' java.lang.Exception: Error lookup up server info: java.net.ConnectException : Error opening socket to server localhost on port 1527 with message : Connection refused             End: serverVM-1.3_server10.0.2.1_clientVM-1.3_clientDB2JCC                     Begin: serverVM-1.3_server10.0.2.1_clientVM-1.3_clientDerby10.1.1.0org.apache.derby.client.am.DisconnectException: java.security.PrivilegedActionException : Error opening socket to server localhost on port 1527 with message : nullException in thread 'main' java.lang.Exception: Error lookup up server info: java.security.PrivilegedActionException : Error opening socket to server localhost on port 1527 with message : null             End: serverVM-1.3_server10.0.2.1_clientVM-1.3_clientDerby10.1.1.0                     Begin: serverVM-1.3_server10.0.2.1_clientVM-1.3_clientDerby10.1.2.0org.apache.derby.client.am.DisconnectException: java.security.PrivilegedActionException : Error opening socket to server localhost on port 1527 with message : nullException in thread 'main' java.lang.Exception: Error lookup up server info: java.security.PrivilegedActionException : Error opening socket to server localhost on port 1527 with message : null             End: serverVM-1.3_server10.0.2.1_clientVM-1.3_clientDerby10.1.2.0                     Begin: serverVM-1.3_server10.0.2.1_clientVM-1.3_clientTrunkException in thread 'main' java.lang.NoClassDefFoundError: javax/crypto/IllegalBlockSizeException             End: serverVM-1.3_server10.0.2.1_clientVM-1.3_clientTrunk                     Begin: serverVM-1.3_server10.0.2.1_clientVM-1.4_clientDB2JCCcom.ibm.db2.jcc.c.SqlException: java.net.ConnectException : Error opening socket to server localhost on port 1527 with message : Connection refused at org.apache.derbyTesting.functionTests.tests.junitTests.compatibility.CompatibilitySuite.main(CompatibilitySuite.java:129)Exception in thread 'main' java.lang.Exception: Error lookup up server info: java.net.ConnectException : Error opening socket to server localhost on port 1527 with message : Connection refused             End: serverVM-1.3_server10.0.2.1_clientVM-1.4_clientDB2JCC    See e.g.http://www.multinet.no/~solberg/public/Apache/Derby/testlog/SunOS-5.10_i86pc-i386/386871-compatibility_diff.txt inhttp://www.multinet.no/~solberg/public/Apache/Derby/Limited/testSummary-386871.htmlhttp://www.multinet.no/~solberg/public/Apache/DerbyJDK16/testlog/JDK16Jvm1.6SunOS-5.10_i86pc-i386/387016-compatibility_diff.txt inhttp://www.multinet.no/~solberg/public/Apache/DerbyJDK16/Limited/testSummary-current.htmlFirst occurence in svn 386687 &#91;2006-03-17 19:45:55 CET&#93;Changes in http://www.multinet.no/~solberg/public/Apache/Derby/UpdateInfo/386687.txt   ,10.2.1.6,10.2.2.1,0.0,0.0,422.0,1.0,4.0,4.0,0.0,0.0,0.0,1.0,0.0,1.0,1.0,1,java/testing/org/apache/derbyTesting/functionTests/tests/junitTests/compatibility/testScript.xml;
144,1156.0,Improvement,Closed,Fixed,Store,Minor,Mike Matrigali,2006/03/28 20:18:24 +0100,2006/03/30 04:58:25 +0100,Suresh Thalamati,2006/08/30 00:04:49 +0100,154.15723380000003,152.7961111,allow the encrypting of an existing unencrypted db and allow the re-encrypting of an existing encrypted db   ,encrypted database to be re-encrypted with a new password.Here are some ideas for an initial implementation.The easiest way to do this is to make sure we have exclusive access to thedata and that no log is required in the new copy of the db. I want to avoidthe log as it also is encrypted. Here is my VERY high level plan:1) Force exclusive access by putting all the work in the low level store  offline boot method. We will do redo recovery as usual  but at the end there will be an entry point to do the copy/encrypt operation.copy/encrypt process:0) The request to encrypt/re-encrypt the db will be handled with a new set of url flags passed into store at boot time. The new flags will provide the same inputs as the current encrypt flags. So at high level the request will be 'connect db old_encrypt_url_flags; new_encrypt_url_flags'. TODO - provide exact new flag syntax.1) Open a transaction do all logged work to do the encryption. All logging will be done with existing encryption.2) Copy and encrypt every db file in the database. The target files will be in the data directory. There will be a new suffix to track the new files  similar to the current process used for handling drop table in a transaction consistent manner without logging the entire table to the log. Entire encrypted destination file is guaranteed synced to disk before transaction commits. I don't think this part needs to be logged. Files will be read from the cache using existing mechanism and written directly into new encrypted files (new encrypted data does not end up in the cache).3) Switch encrypted files for old files. Do this under a new log operation so the process can be correctly rolled back if the encrypt db operation transaction fails. Rollback will do file at a time switches  no reading of encrypted data is necessary.4) log a 'change encryption of db' log record  but do not update system.properties with the change.5) commit transaction.6) update system.properties and sync changes.7) TODO - need someway to handle crash between steps 5 and 6.6) checkpoint all data  at this point guaranteed that there is no outstanding transaction  so after checkpoint is done there is no need for the log.ISSUES:o there probably should be something that catches a request to encrypt to whatever db was already encrypted with.   ,10.1.3.1,10.2.1.6,0.0,0.0,394.0,1.0,19.0,5.0,0.0,0.0,0.0,1.0,0.0,0.0,9.0,87,java/testing/org/apache/derbyTesting/functionTests/master/encryptDatabaseTest1.out;java/testing/org/apache/derbyTesting/functionTests/tests/store/encryptDatabaseTest1.sql;java/engine/org/apache/derby/iapi/services/io/FileUtil.java;java/engine/org/apache/derby/iapi/store/raw/RawStoreFactory.java;java/engine/org/apache/derby/iapi/store/raw/data/DataFactory.java;java/engine/org/apache/derby/iapi/store/raw/log/LogFactory.java;java/engine/org/apache/derby/impl/store/raw/RawStore.java;java/engine/org/apache/derby/impl/store/raw/data/BaseDataFileFactory.java;java/engine/org/apache/derby/impl/store/raw/data/EncryptData.java;java/engine/org/apache/derby/impl/store/raw/log/LogToFile.java;java/engine/org/apache/derby/impl/store/raw/log/ReadOnly.java;java/testing/org/apache/derbyTesting/functionTests/tests/store/ReEncryptCrashRecovery.java;java/engine/org/apache/derby/iapi/store/raw/RawStoreFactory.java;java/engine/org/apache/derby/iapi/store/raw/log/LogFactory.java;java/engine/org/apache/derby/iapi/store/raw/xact/TransactionFactory.java;java/engine/org/apache/derby/impl/store/raw/RawStore.java;java/engine/org/apache/derby/impl/store/raw/log/LogToFile.java;java/engine/org/apache/derby/impl/store/raw/log/ReadOnly.java;java/engine/org/apache/derby/impl/store/raw/xact/TransactionTable.java;java/engine/org/apache/derby/impl/store/raw/xact/XactFactory.java;java/engine/org/apache/derby/loc/messages_en.properties;java/shared/org/apache/derby/shared/common/reference/SQLState.java;java/testing/org/apache/derbyTesting/functionTests/master/encryptDatabaseTest2.out;java/testing/org/apache/derbyTesting/functionTests/suites/encryptionAll.runall;java/testing/org/apache/derbyTesting/functionTests/tests/store/copyfiles.ant;java/testing/org/apache/derbyTesting/functionTests/tests/store/encryptDatabaseTest2.sql;java/testing/org/apache/derbyTesting/functionTests/tests/store/encryptDatabaseTest2_app.properties;java/engine/org/apache/derby/impl/store/raw/RawStore.java;java/testing/org/apache/derbyTesting/functionTests/master/ReEncryptCrashRecovery.out;java/testing/org/apache/derbyTesting/functionTests/suites/encryptionAll.runall;java/testing/org/apache/derbyTesting/functionTests/tests/store/ReEncryptCrashRecovery.java;java/engine/org/apache/derby/impl/store/raw/RawStore.java;java/engine/org/apache/derby/impl/store/raw/data/RAFContainer.java;java/engine/org/apache/derby/loc/messages_en.properties;java/shared/org/apache/derby/shared/common/reference/SQLState.java;java/testing/org/apache/derbyTesting/functionTests/master/encryptDatabaseTest3.out;java/testing/org/apache/derbyTesting/functionTests/suites/encryptionAll.runall;java/testing/org/apache/derbyTesting/functionTests/tests/store/encryptDatabaseTest3.sql;java/testing/org/apache/derbyTesting/functionTests/tests/store/encryptDatabaseTest3_app.properties;java/engine/org/apache/derby/iapi/reference/Attribute.java;java/engine/org/apache/derby/iapi/reference/Module.java;java/engine/org/apache/derby/iapi/services/crypto/CipherFactoryBuilder.java;java/engine/org/apache/derby/impl/services/jce/JCECipherFactory.java;java/engine/org/apache/derby/impl/services/jce/JCECipherFactoryBuilder.java;java/engine/org/apache/derby/impl/store/raw/RawStore.java;java/engine/org/apache/derby/modules.properties;java/testing/org/apache/derbyTesting/functionTests/master/encryptDatabaseTest1.out;java/testing/org/apache/derbyTesting/functionTests/tests/store/encryptDatabaseTest1.sql;java/testing/org/apache/derbyTesting/unitTests/crypto/T_Cipher.java;java/engine/org/apache/derby/impl/jdbc/EmbedConnection.java;java/engine/org/apache/derby/impl/store/raw/RawStore.java;java/testing/org/apache/derbyTesting/functionTests/master/encryptDatabaseTest3.out;java/testing/org/apache/derbyTesting/functionTests/master/encryptionKey.out;java/testing/org/apache/derbyTesting/functionTests/tests/store/ReEncryptCrashRecovery.java;java/testing/org/apache/derbyTesting/functionTests/tests/store/encryptDatabaseTest3.sql;java/testing/org/apache/derbyTesting/functionTests/tests/store/encryptionKey.sql;java/engine/org/apache/derby/iapi/services/crypto/CipherFactory.java;java/engine/org/apache/derby/iapi/services/io/RegisteredFormatIds.java;java/engine/org/apache/derby/iapi/services/io/StoredFormatIds.java;java/engine/org/apache/derby/iapi/store/raw/RawStoreFactory.java;java/engine/org/apache/derby/iapi/store/raw/data/DataFactory.java;java/engine/org/apache/derby/iapi/store/raw/data/RawContainerHandle.java;java/engine/org/apache/derby/iapi/store/raw/log/LogFactory.java;java/engine/org/apache/derby/impl/services/jce/JCECipherFactory.java;java/engine/org/apache/derby/impl/store/raw/RawStore.java;java/engine/org/apache/derby/impl/store/raw/data/BaseContainer.java;java/engine/org/apache/derby/impl/store/raw/data/BaseContainerHandle.java;java/engine/org/apache/derby/impl/store/raw/data/BaseDataFileFactory.java;java/engine/org/apache/derby/impl/store/raw/data/EncryptContainerOperation.java;java/engine/org/apache/derby/impl/store/raw/data/EncryptContainerUndoOperation.java;java/engine/org/apache/derby/impl/store/raw/data/EncryptData.java;java/engine/org/apache/derby/impl/store/raw/data/FileContainer.java;java/engine/org/apache/derby/impl/store/raw/data/InputStreamContainer.java;java/engine/org/apache/derby/impl/store/raw/data/RAFContainer.java;java/engine/org/apache/derby/impl/store/raw/data/StreamFileContainer.java;java/engine/org/apache/derby/impl/store/raw/log/LogToFile.java;java/engine/org/apache/derby/impl/store/raw/log/ReadOnly.java;java/testing/org/apache/derbyTesting/functionTests/master/encryptDatabaseTest1.out;java/testing/org/apache/derbyTesting/functionTests/suites/encryptionAll.runall;java/testing/org/apache/derbyTesting/functionTests/tests/store/copyfiles.ant;java/testing/org/apache/derbyTesting/functionTests/tests/store/encryptDatabaseTest1.sql;java/testing/org/apache/derbyTesting/functionTests/tests/store/encryptDatabaseTest1_app.properties;java/engine/org/apache/derby/impl/store/raw/RawStore.java;java/engine/org/apache/derby/impl/store/raw/data/EncryptData.java;java/engine/org/apache/derby/impl/store/raw/data/RAFContainer.java;java/testing/org/apache/derbyTesting/functionTests/tests/store/encryptDatabaseTest1_app.properties;java/testing/org/apache/derbyTesting/functionTests/tests/store/encryptDatabaseTest2_app.properties;
145,1157.0,Improvement,Closed,Fixed,Test,Minor,Knut Anders Hatlen,2006/03/29 00:12:59 +0100,2006/03/29 00:12:59 +0100,Knut Anders Hatlen,2006/03/29 22:41:19 +0100,0.936342593,0.936342593,Helper methods in BaseJDBCTestCase for creating data sources   ,BaseJDBCTestCase should be extended with methods that create DataSource  ConnectionPoolDataSource and XADataSource objects.   ,10.2.1.6,10.2.1.6,0.0,0.0,13.0,1.0,3.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,3,java/testing/org/apache/derbyTesting/functionTests/util/BaseJDBCTestCase.java;java/testing/org/apache/derbyTesting/functionTests/util/TestConfiguration.java;java/testing/org/apache/derbyTesting/functionTests/util/TestUtil.java;
147,1174.0,Bug,Closed,Fixed,Network Server,Minor,Anders Morken,2006/04/02 06:23:05 +0100,2006/04/02 06:23:05 +0100,Anders Morken,2006/04/27 13:19:47 +0100,25.289375,25.289375,NullPointerException in network server with LDAP authentication   ,While trying to fix DERBY-1000 I tried to set up Derby's network server to use LDAP authentication  but I ran into something that looks like a bug  but could just as well be my own configuration mistake. I would appreciate any help in figuring this out. =)The problem is a NullPointerException in the Network Server when it tries to initialize the LDAP authentication service. The attached derby.log shows the exception and its stacktrace. The attached derby.properties is what I put in the derby home directory.I'm seeing this problem in the trunk as well as my own build of the 10.1 branch and the 10.1.2.1 release build available from the Derby web site. ( http://db.apache.org/derby/releases/release-10.1.2.1.cgi )The problem is cause by the setInitDirContextEnv method in JNDIAuthenticationSchemeBase receiving a null dbProps argument  which it obviously doesn't expect. Adding a check for a null dbProps argument and returning immediately after creating the initDirContextEnv object fixes the NullPointerException and makes LDAP authentication work for me. This is a reasonable enough robustness fix and shouldn't have any negative impact  but if the source of the problem is that JNDIAuthenticationSchemeBase should never receive that null pointer in the first place  more patching is needed. I'm not sure about this  so I'm leaving it up to the experts to decide this. =)   ,10.1.2.1; 10.2.1.6,10.1.3.1; 10.2.1.6,0.0,0.0,233.0,1.0,11.0,3.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,1,java/engine/org/apache/derby/impl/jdbc/authentication/JNDIAuthenticationSchemeBase.java;
151,1216.0,Improvement,Closed,Fixed,Tools,Minor,Andrew McIntyre,2006/04/14 11:04:22 +0100,,Unassigned,2006/04/19 07:55:51 +0100,4.869085648,,ij should have a --help option to print command line syntax   ,ij should accept a --help option to print command line syntax for reference and friendliness.   ,10.1.3.1; 10.2.1.6,10.2.1.6,0.0,0.0,15.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,2,java/tools/org/apache/derby/impl/tools/ij/Main.java;java/tools/org/apache/derby/impl/tools/ij/util.java;
182,1431.0,Bug,Closed,Fixed,Demos/Scripts; Documentation,Trivial,Bryan Pendleton,2006/06/20 22:51:38 +0100,2006/08/05 02:24:50 +0100,Andrew McIntyre,2006/08/08 04:18:16 +0100,48.2268287,3.078773148,Typo in link to Simple Example from frameworks/readme.html   ,There is a small typo in frameworks/readme.html.The link 'see the simple example' links to  ../demo/programs/simple/example.htmlbut it should link to  ../demo/simple/example.htmlbecause there is no 'programs' folder in the 'demo' subtree.I'm attaching a patch for review.   ,10.1.2.1; 10.1.3.1; 10.2.1.6,10.2.1.6,0.0,0.0,36.0,1.0,11.0,3.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,2,build.xml;frameworks/readme.html;
190,1496.0,Improvement,Closed,Fixed,Test,Minor,Sunitha Kambhampati,2006/07/11 08:32:57 +0100,2006/07/12 00:22:44 +0100,Myrna van Lunteren,2007/05/08 19:40:47 +0100,301.4637731,300.8042014,testSecMec needs many masters - should convert to junit   ,derbynet/testSecMec.java fails with jcc2.8 with 131 vms. I have checked the diff and it is a master update with difference in the exception  message string.diff snippet:8 del&lt; T5: jdbc:derby:net://xxxFILTERED_HOSTNAMExxx:xxxFILTEREDPORTxxx/wombat:user=neelima;password=lee;securityMechanism=9; - EXCEPTION java.security.InvalidAlgorithmParameterException is caught when initializing EncryptionManager 'Prime size must be multiple of 64  and can only range from 512 to 1024 (inclusive)'8a8&gt; T5: jdbc:derby:net://xxxFILTERED_HOSTNAMExxx:xxxFILTEREDPORTxxx/wombat:user=neelima;password=lee;securityMechanism=9; - EXCEPTION java.security.NoSuchAlgorithmException is caught when initializing EncryptionManager 'DH KeyPairGenerator not available'14 del----------------There is difference in the exception message and will require lot of jvm specific master files which can become difficult to maintain. Myrna suggested that this might be a good test to convert to junit.   ,10.2.1.6,10.3.1.4,0.0,0.0,103.0,1.0,20.0,2.0,1.0,0.0,0.0,1.0,0.0,0.0,7.0,85,java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/NSSecurityMechanismTest.java;java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/build.xml;java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/NSSecurityMechanismTest.java;java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/_Suite.java;java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/AuthenticationTest.java;java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/DriverMgrAuthenticationTest.java;java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/PoolDSAuthenticationTest.java;java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/XADSAuthenticationTest.java;java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/_Suite.java;java/testing/org/apache/derbyTesting/junit/JDBCDataSource.java;java/testing/org/apache/derbyTesting/functionTests/master/DerbyNet/dataSourcePermissions_net.out;java/testing/org/apache/derbyTesting/functionTests/master/DerbyNet/ibm14/testSecMec.out;java/testing/org/apache/derbyTesting/functionTests/master/DerbyNet/ibm14/ver2.6/testSecMec.out;java/testing/org/apache/derbyTesting/functionTests/master/DerbyNet/jdk14/ver2.8/testSecMec.out;java/testing/org/apache/derbyTesting/functionTests/master/DerbyNet/secureUsers.out;java/testing/org/apache/derbyTesting/functionTests/master/DerbyNet/secureUsers1.out;java/testing/org/apache/derbyTesting/functionTests/master/DerbyNet/secureUsersldap.out;java/testing/org/apache/derbyTesting/functionTests/master/DerbyNet/testSecMec.out;java/testing/org/apache/derbyTesting/functionTests/master/DerbyNet/users.out;java/testing/org/apache/derbyTesting/functionTests/master/DerbyNet/users2.out;java/testing/org/apache/derbyTesting/functionTests/master/DerbyNet/ver2.6/testSecMec.out;java/testing/org/apache/derbyTesting/functionTests/master/DerbyNet/ver2.8/testSecMec.out;java/testing/org/apache/derbyTesting/functionTests/master/DerbyNetClient/dataSourcePermissions_net.out;java/testing/org/apache/derbyTesting/functionTests/master/DerbyNetClient/ibm14/testSecMec.out;java/testing/org/apache/derbyTesting/functionTests/master/DerbyNetClient/jdk14/testSecMec.out;java/testing/org/apache/derbyTesting/functionTests/master/DerbyNetClient/secureUsers.out;java/testing/org/apache/derbyTesting/functionTests/master/DerbyNetClient/secureUsers1.out;java/testing/org/apache/derbyTesting/functionTests/master/DerbyNetClient/secureUsersldap.out;java/testing/org/apache/derbyTesting/functionTests/master/DerbyNetClient/testSecMec.out;java/testing/org/apache/derbyTesting/functionTests/master/DerbyNetClient/users.out;java/testing/org/apache/derbyTesting/functionTests/master/DerbyNetClient/users2.out;java/testing/org/apache/derbyTesting/functionTests/master/dataSourcePermissions.out;java/testing/org/apache/derbyTesting/functionTests/master/j9_foundation/users.out;java/testing/org/apache/derbyTesting/functionTests/master/j9_foundation/users2.out;java/testing/org/apache/derbyTesting/functionTests/master/secureUsers.out;java/testing/org/apache/derbyTesting/functionTests/master/secureUsers1.out;java/testing/org/apache/derbyTesting/functionTests/master/users.out;java/testing/org/apache/derbyTesting/functionTests/master/users2.out;java/testing/org/apache/derbyTesting/functionTests/suites/DerbyNetClientRemote.exclude;java/testing/org/apache/derbyTesting/functionTests/suites/DerbyNetClientUseprocess.exclude;java/testing/org/apache/derbyTesting/functionTests/suites/DerbyNetRemote.exclude;java/testing/org/apache/derbyTesting/functionTests/suites/DerbyNetUseprocess.exclude;java/testing/org/apache/derbyTesting/functionTests/suites/derbynetmats.runall;java/testing/org/apache/derbyTesting/functionTests/suites/j9derbynetmats.runall;java/testing/org/apache/derbyTesting/functionTests/suites/jdbcapi.runall;java/testing/org/apache/derbyTesting/functionTests/suites/xa.runall;java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/dataSourcePermissions_net.java;java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/dataSourcePermissions_net.policy;java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/dataSourcePermissions_net_app.properties;java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/dataSourcePermissions_net_sed.properties;java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/testSecMec.java;java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/testSecMec.policy;java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/testSecMec_app.properties;java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/testSecMec_sed.properties;java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/JDBCHarnessJavaTest.java;java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/dataSourcePermissions.java;java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/secureUsers.sql;java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/secureUsers1.policy;java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/secureUsers1.sql;java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/secureUsers1_app.properties;java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/secureUsers1_derby.properties;java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/secureUsers1_sed.properties;java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/secureUsers_app.properties;java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/secureUsers_derby.properties;java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/secureUsers_sed.properties;java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/users.sql;java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/users2.sql;java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/users2_app.properties;java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/users2_derby.properties;java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/users2_sed.properties;java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/users_app.properties;java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/users_derby.properties;java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/users_sed.properties;java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/_Suite.java;java/testing/org/apache/derbyTesting/functionTests/master/DerbyNetClient/checkDataSource.out;java/testing/org/apache/derbyTesting/functionTests/master/DerbyNetClient/checkDataSource30.out;java/testing/org/apache/derbyTesting/functionTests/master/checkDataSource.out;java/testing/org/apache/derbyTesting/functionTests/master/checkDataSource30.out;java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/NSSecurityMechanismTest.java;java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/AuthenticationTest.java;java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/DriverMgrAuthenticationTest.java;java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/PoolDSAuthenticationTest.java;java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/XADSAuthenticationTest.java;java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/checkDataSource.java;java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/_Suite.java;
193,1521.0,Improvement,Closed,Fixed,Test,Major,Mamta A. Satoor,2006/07/17 18:04:41 +0100,2006/07/18 23:03:44 +0100,Deepa Remesh,2006/09/01 20:39:24 +0100,46.10744213,44.89976852,Upgrade test needs to be enhanced to test grant revoke   ,Grant Revoke is one of the features targeted for 10.2 Release. The upgrade test should be modified to test this feature with various upgrade scenarios to make sure everything works fine.   ,10.2.1.6,10.2.1.6,0.0,0.0,31.0,1.0,18.0,5.0,1.0,0.0,0.0,1.0,0.0,0.0,2.0,4,java/testing/org/apache/derbyTesting/functionTests/master/Upgrade_10_1_10_2.out;java/testing/org/apache/derbyTesting/functionTests/tests/upgradeTests/UpgradeTester.java;java/testing/org/apache/derbyTesting/functionTests/master/Upgrade_10_1_10_2.out;java/testing/org/apache/derbyTesting/functionTests/tests/upgradeTests/UpgradeTester.java;
196,1538.0,Bug,Closed,Fixed,SQL,Major,Yip Ng,2006/07/19 18:47:17 +0100,2006/07/24 08:03:20 +0100,Satheesh Bandaram,2006/08/26 08:10:08 +0100,37.55753472,33.00472222,Unexpected behavior on self privilege revocation   ,When revoking the owner's own privilege against the table he have created  Derby executes the revocation successfullybut the owner is able to select from the table later as if though the REVOKE statement has no effect. More importantly  I was expecting a SQLException with the appropriate SQLSTATE to be thrown when the owner attempts to revoke privilege from himself. i.e.:ij&gt; connect 'jdbc:derby:authtest' user 'yip' as conn1;ij&gt; create table t1 (c1 int);0 rows inserted/updated/deletedij&gt; insert into t1 values 1 2 3;3 rows inserted/updated/deletedij&gt; revoke select on t1 from yip;0 rows inserted/updated/deletedij&gt; select * from t1;C1-----------1233 rows selectedHere is the sysinfo:------------------ Java Information ------------------Java Version: 1.4.2_12Java Vendor: Sun Microsystems Inc.Java home: C:/jdk142/jreJava classpath: derby.jar;derbytools.jar;.OS name: Windows XPOS architecture: x86OS version: 5.1Java user name: yipJava user home: C:/Documents and Settings/AdministratorJava user dir: C:/derby/trunk/jars/sanejava.specification.name: Java Platform API Specificationjava.specification.version: 1.4--------- Derby Information --------JRE - JDBC: J2SE 1.4.2 - JDBC 3.0&#91;C:/derby/trunk/jars/sane/derby.jar&#93; 10.2.0.4 alpha - (423353)&#91;C:/derby/trunk/jars/sane/derbytools.jar&#93; 10.2.0.4 alpha - (423353)----------------------------------------------------------------------- Locale Information -----------------Current Locale : [English/United States &#91;en_US&#93;]Found support for locale: &#91;de_DE&#93; version: 10.2.0.4 alpha - (423353)Found support for locale: &#91;es&#93; version: 10.2.0.4 alpha - (423353)Found support for locale: &#91;fr&#93; version: 10.2.0.4 alpha - (423353)Found support for locale: &#91;it&#93; version: 10.2.0.4 alpha - (423353)Found support for locale: &#91;ja_JP&#93; version: 10.2.0.4 alpha - (423353)Found support for locale: &#91;ko_KR&#93; version: 10.2.0.4 alpha - (423353)Found support for locale: &#91;pt_BR&#93; version: 10.2.0.4 alpha - (423353)Found support for locale: &#91;zh_CN&#93; version: 10.2.0.4 alpha - (423353)Found support for locale: &#91;zh_TW&#93; version: 10.2.0.4 alpha - (423353)------------------------------------------------------   ,10.2.1.6,10.2.1.6; 10.3.1.4,0.0,0.0,252.0,1.0,6.0,4.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,5,java/engine/org/apache/derby/impl/sql/compile/GrantNode.java;java/engine/org/apache/derby/impl/sql/compile/PrivilegeNode.java;java/engine/org/apache/derby/impl/sql/compile/RevokeNode.java;java/testing/org/apache/derbyTesting/functionTests/master/grantRevokeDDL.out;java/testing/org/apache/derbyTesting/functionTests/tests/lang/grantRevokeDDL.sql;
197,1539.0,Improvement,Closed,Fixed,SQL,Major,Mamta A. Satoor,2006/07/19 22:48:44 +0100,2006/07/19 22:48:44 +0100,Mamta A. Satoor,2006/08/30 07:24:37 +0100,41.35825231,41.35825231,A  trigger should be dropped when a privilege required by the trigger is revoked.   ,A trigger tracks its privileges requirements using Derby's Dependency Manager. If any one of those required privileges are revoked  the trigger should be dropped automatically. I am just creating a new jira entry here so it is easier to track sub items of DERBY-1330. Will link this Jira entry to DERBY-1330.See the functional spec attached to DERBY-1330   ,10.2.1.6,10.2.1.6,0.0,0.0,87.0,1.0,27.0,3.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,12,java/engine/org/apache/derby/iapi/sql/depend/DependencyManager.java;java/engine/org/apache/derby/iapi/sql/dictionary/ConstraintDescriptor.java;java/engine/org/apache/derby/iapi/sql/dictionary/DataDictionary.java;java/engine/org/apache/derby/iapi/sql/dictionary/TriggerDescriptor.java;java/engine/org/apache/derby/iapi/sql/dictionary/ViewDescriptor.java;java/engine/org/apache/derby/impl/sql/catalog/DataDictionaryImpl.java;java/engine/org/apache/derby/impl/sql/depend/BasicDependencyManager.java;java/engine/org/apache/derby/impl/sql/execute/DropTriggerConstantAction.java;java/engine/org/apache/derby/impl/sql/execute/RoutinePrivilegeInfo.java;java/engine/org/apache/derby/impl/sql/execute/TablePrivilegeInfo.java;java/testing/org/apache/derbyTesting/functionTests/master/grantRevokeDDL.out;java/testing/org/apache/derbyTesting/functionTests/tests/lang/grantRevokeDDL.sql;
198,1541.0,Bug,Closed,Fixed,Test,Minor,Daniel John Debrunner,2006/07/20 01:27:20 +0100,2006/07/26 17:19:30 +0100,Rick Hillegas,2007/05/15 22:13:51 +0100,299.8656366,293.2044097,Make test jdbc4/TestPreparedStatement run under the security manager   ,See trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/TestPreparedStatement_app.properties which says: test fails trying to read blob content filesOther tests succesfully read files so it must be possible to enable this test under the security manager.Maybe the files need to be marked as support files and copied into the extin/extout/extinout foldersto use the existing permissions in the test policy files.   ,10.2.1.6,10.2.2.1,0.0,0.0,55.0,1.0,1.0,1.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,1,java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/TestPreparedStatement_app.properties;
199,1545.0,Bug,Closed,Fixed,Test,Major,Knut Anders Hatlen,2006/07/20 13:30:55 +0100,2006/07/26 11:09:18 +0100,Andreas Korneliussen,2006/07/26 14:40:36 +0100,6.048391204,0.146736111,derbynet/testProtocol.java fails with security manager enabled   ,The tinderbox test started failing after revision 423676 which enabled security manager for derbynet/testProtocol.java. See http://www.multinet.no/~solberg/public/Apache/TinderBox_Derby/testlog/SunOS-5.10_i86pc-i386/423706-derbyall_diff.txtException in thread 'main' java.security.AccessControlException: access denied (java.net.SocketPermission 127.0.0.1:1527 connect resolve) at java.security.AccessControlContext.checkPermission(AccessControlContext.java:264) at java.security.AccessController.checkPermission(AccessController.java:427) at java.lang.SecurityManager.checkPermission(SecurityManager.java:532) at java.lang.SecurityManager.checkConnect(SecurityManager.java:1034) at java.net.Socket.connect(Socket.java:501) at java.net.Socket.connect(Socket.java:457) at java.net.Socket.&lt;init&gt;(Socket.java:365) at java.net.Socket.&lt;init&gt;(Socket.java:178) at org.apache.derby.impl.drda.TestProto.getConnection(Unknown Source) at org.apache.derby.impl.drda.TestProto.&lt;init&gt;(Unknown Source) at org.apache.derbyTesting.functionTests.tests.derbynet.testProtocol.executeFile(Unknown Source) at org.apache.derbyTesting.functionTests.tests.derbynet.testProtocol.main(Unknown Source)   ,10.2.1.6,10.2.1.6,0.0,0.0,56.0,1.0,5.0,2.0,1.0,0.0,0.0,1.0,0.0,1.0,1.0,1,java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/testProtocol.policy;
214,1643.0,Improvement,Closed,Fixed,SQL,Major,Mamta A. Satoor,2006/08/04 03:51:52 +0100,2006/08/04 03:51:52 +0100,Mamta A. Satoor,2006/08/30 07:29:01 +0100,26.15079861,26.15079861,A  'revoke execute ... restrict' should fail if there are dependent objects on the execute privilege   ,As per the functional spec attached to DERBY-1330  a 'revoke execute ... restrict' should fail if there are dependent objects on the execute privilegeIn order to implement this  when revoke execute is executed  a special invalidation action should be sent and dependent objects will need to catch that invalidation and throw an exception. If there are no dependents  then no exception will be thrown and revoke execute will succeed.I am just creating a new jira entry here so it is easier to track sub items of DERBY-1330. Will link this Jira entry to DERBY-1330. See the functional spec attached to DERBY-1330   ,10.2.1.6,10.2.1.6,0.0,0.0,141.0,1.0,7.0,2.0,0.0,0.0,0.0,1.0,0.0,0.0,2.0,14,java/engine/org/apache/derby/iapi/sql/depend/DependencyManager.java;java/engine/org/apache/derby/iapi/sql/dictionary/ConstraintDescriptor.java;java/engine/org/apache/derby/iapi/sql/dictionary/TriggerDescriptor.java;java/engine/org/apache/derby/iapi/sql/dictionary/ViewDescriptor.java;java/engine/org/apache/derby/impl/sql/depend/BasicDependencyManager.java;java/engine/org/apache/derby/impl/sql/execute/RoutinePrivilegeInfo.java;java/engine/org/apache/derby/iapi/sql/depend/DependencyManager.java;java/engine/org/apache/derby/iapi/sql/dictionary/ConstraintDescriptor.java;java/engine/org/apache/derby/iapi/sql/dictionary/TriggerDescriptor.java;java/engine/org/apache/derby/iapi/sql/dictionary/ViewDescriptor.java;java/engine/org/apache/derby/impl/sql/depend/BasicDependencyManager.java;java/engine/org/apache/derby/impl/sql/execute/RoutinePrivilegeInfo.java;java/testing/org/apache/derbyTesting/functionTests/master/grantRevokeDDL.out;java/testing/org/apache/derbyTesting/functionTests/tests/lang/grantRevokeDDL.sql;
227,1729.0,Bug,Closed,Fixed,SQL,Major,Yip Ng,2006/08/18 22:41:11 +0100,2006/09/04 08:49:57 +0100,Yip Ng,2006/09/18 17:51:31 +0100,30.79884259,14.37608796,Invoking Java stored procedure that contains GRANT or REVOKE statement with CONTAINS SQL should fail.   ,In Derby SQL authorization mode  invoking Java stored procedure that contains GRANT or REVOKE statement with CONTAINS SQL from a trigger should fail but in the following test  it successfully executed the trigger action. Attaching repro patch for trunk.i.e.:ij&gt; connect 'triggerProcSQLAuth;create=true' user 'APP' as app;WARNING 01J14: SQL authorization is being used without first enabling authentication.ij&gt; &#8212; setup the environment&#8212; table used in the procedurescreate table t1 (i int primary key  b char(15));0 rows inserted/updated/deletedij&gt; insert into t1 values (1  'XYZ');1 row inserted/updated/deletedij&gt; insert into t1 values (2  'XYZ');1 row inserted/updated/deletedij&gt; &#8212; table used in this testcreate table t2 (x integer  y integer);0 rows inserted/updated/deletedij&gt; create procedure grant_select_proc()  parameter style java dynamic result sets 0 language java  contains sql external name 'org.apache.derbyTesting.functionTests.util.ProcedureTest.grantSelect';0 rows inserted/updated/deletedij&gt; create procedure revoke_select_proc()  parameter style java dynamic result sets 0 language java  contains sql external name 'org.apache.derbyTesting.functionTests.util.ProcedureTest.revokeSelect';0 rows inserted/updated/deletedij&gt; &#8212; testscreate trigger grant_select_trig AFTER delete on t1  for each STATEMENT mode db2sql call grant_select_proc();0 rows inserted/updated/deletedij&gt; &#8212; should faildelete from t1 where i = 1;1 row inserted/updated/deletedij&gt; &#8212; check delete failedselect * from t1;I |B ---------------------------2 |XYZ 1 row selectedij&gt; &#8212; check if there are rows in sys.systableperms  should be 0select count from SYS.SYSTABLEPERMS;1 -----------1 1 row selectedij&gt; drop trigger grant_select_trig;0 rows inserted/updated/deletedij&gt; create trigger revoke_select_trig AFTER delete on t1  for each STATEMENT mode db2sql call revoke_select_proc();0 rows inserted/updated/deletedij&gt; &#8212; should faildelete from t1 where i = 2;1 row inserted/updated/deletedij&gt; &#8212; check delete failedselect * from t1;I |B ---------------------------0 rows selectedij&gt; &#8212; check if there are rows in sys.systableperms  should be 0select count from SYS.SYSTABLEPERMS;1 -----------0 1 row selectedij&gt; drop trigger revoke_select_trig;0 rows inserted/updated/deletedij&gt; ------------------ Java Information ------------------Java Version: 1.4.2_12Java Vendor: Sun Microsystems Inc.Java home: C:/Program Files/Java/j2re1.4.2_12Java classpath: derby.jar;derbytools.jarOS name: Windows XPOS architecture: x86OS version: 5.1Java user name: YipJava user home: C:/Documents and Settings/YipJava user dir: C:/work3/derby/trunk/jars/sanejava.specification.name: Java Platform API Specificationjava.specification.version: 1.4--------- Derby Information --------JRE - JDBC: J2SE 1.4.2 - JDBC 3.0&#91;C:/work3/derby/trunk/jars/sane/derby.jar&#93; 10.3.0.0 alpha - (432670M)&#91;C:/work3/derby/trunk/jars/sane/derbytools.jar&#93; 10.3.0.0 alpha - (432670M)----------------------------------------------------------------------- Locale Information -----------------Current Locale : [English/United States &#91;en_US&#93;]Found support for locale: &#91;de_DE&#93; version: 10.3.0.0 alpha - (432670M)Found support for locale: &#91;es&#93; version: 10.3.0.0 alpha - (432670M)Found support for locale: &#91;fr&#93; version: 10.3.0.0 alpha - (432670M)Found support for locale: &#91;it&#93; version: 10.3.0.0 alpha - (432670M)Found support for locale: &#91;ja_JP&#93; version: 10.3.0.0 alpha - (432670M)Found support for locale: &#91;ko_KR&#93; version: 10.3.0.0 alpha - (432670M)Found support for locale: &#91;pt_BR&#93; version: 10.3.0.0 alpha - (432670M)Found support for locale: &#91;zh_CN&#93; version: 10.3.0.0 alpha - (432670M)Found support for locale: &#91;zh_TW&#93; version: 10.3.0.0 alpha - (432670M)------------------------------------------------------   ,10.2.1.6,10.2.1.6; 10.3.1.4,0.0,0.0,444.0,1.0,25.0,7.0,0.0,0.0,0.0,1.0,0.0,0.0,2.0,9,java/testing/org/apache/derbyTesting/functionTests/master/jdk16/grantRevokeDDL2.out;java/engine/org/apache/derby/impl/sql/compile/GrantNode.java;java/engine/org/apache/derby/impl/sql/compile/RevokeNode.java;java/testing/org/apache/derbyTesting/functionTests/master/grantRevokeDDL2.out;java/testing/org/apache/derbyTesting/functionTests/suites/derbylang.runall;java/testing/org/apache/derbyTesting/functionTests/tests/lang/grantRevokeDDL2.sql;java/testing/org/apache/derbyTesting/functionTests/tests/lang/grantRevokeDDL2_app.properties;java/testing/org/apache/derbyTesting/functionTests/tests/lang/grantRevokeDDL2_sed.properties;java/testing/org/apache/derbyTesting/functionTests/util/ProcedureTest.java;
234,1760.0,Bug,Closed,Fixed,Test,Minor,Myrna van Lunteren,2006/08/24 22:46:16 +0100,2006/08/24 22:46:16 +0100,Myrna van Lunteren,2007/01/29 08:05:59 +0100,157.3886921,157.3886921,remote server testing with 10.2 snapshot showed 8 failures   ,I ran derbynetclientmats between two IPV6 machines with the 10.2 snapshot and finally got to look at the results...There were 8 failures  4 of those because of other tests leaving stuff behind.2 tests complained about junit classes not being found (? one of those was checkDataSource!).2 tests seemed to have trouble connecting - those might be the more interesting ones.Will do further analysis  &amp; create test cleanup patches.The failing tests and some comments:suite derbynetclientmats with ibm142 &amp; IPV6 machines using -DhostName= (i.e. remote server test) and build: 10.2.0.4 alpha - (419130)derbynetclientmats/derbynetclientmats.fail:jdbcapi/checkDataSource.java ?? fails because of an error accessing junit. Not sure why  junit is in client classpath...and it's not even a junit test. Stack trace not helpful. (points to client.am  which makes little/no sense).derbynetclientmats/derbynetmats/derbynetmats.fail:derbynet/testconnection.java ?? no connectionderbynetclientmats/derbynetmats/derbynetmats.fail:derbynet/testij.java ?? no connectionderbynetclientmats/derbynetmats/derbynetmats.fail:jdbcapi/metadata.java extra tables/views: JIRA1454  Y.derbynetclientmats/derbynetmats/derbynetmats.fail:jdbcapi/odbc_metadata.java dittoderbynetclientmats/derbynetmats/derbynetmats.fail:lang/syscat.sql dittoderbynetclientmats/derbynetmats/derbynetmats.fail:jdbcapi/ProcedureTest.junit junit not available??derbynetclientmats/derbynetmats/derbynetmats.fail:jdbcapi/checkDataSource30.java Table/View 'Y' already exists.   ,10.2.1.6,10.2.2.1; 10.3.1.4,0.0,0.0,144.0,1.0,5.0,2.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,1,java/testing/org/apache/derbyTesting/functionTests/suites/DerbyNetClientRemote.exclude;
241,1832.0,Bug,Closed,Fixed,Test,Minor,Knut Anders Hatlen,2006/09/08 08:30:45 +0100,2006/09/11 12:19:07 +0100,Knut Anders Hatlen,2006/09/18 21:44:18 +0100,10.55107639,7.392488426,sysinfo test fails with 'access denied (java.util.PropertyPermission java.class.path read)' when derbyclient.jar is first in classpath   ,Seen on Linux and Solaris  with Sun JVM 1.4  1.5  1.6 when derbyclient.jar is first in classpath:                 Diff file derbyall/derbynetmats/DerbyNet/derbynetmats/sysinfo.diff             Start: sysinfo jdk1.4.2_02 DerbyNet derbynetmats:derbynetmats 2006-09-05 08:44:54 ***14a15&gt; Unable to analyze class path: access denied (java.util.PropertyPermission java.class.path read)17 26d17&lt; Current Locale : [English/United States &#91;en_US&#93;]&lt; Found support for locale: &#91;de_DE&#93;&lt; Found support for locale: &#91;es&#93;&lt; Found support for locale: &#91;fr&#93;&lt; Found support for locale: &#91;it&#93;&lt; Found support for locale: &#91;ja_JP&#93;&lt; Found support for locale: &#91;ko_KR&#93;&lt; Found support for locale: &#91;pt_BR&#93;&lt; Found support for locale: &#91;zh_CN&#93;&lt; Found support for locale: &#91;zh_TW&#93;41a33&gt; Unable to analyze class path: access denied (java.util.PropertyPermission java.class.path read)44 53d35&lt; Current Locale : [English/United States &#91;en_US&#93;]&lt; Found support for locale: &#91;de_DE&#93;&lt; Found support for locale: &#91;es&#93;&lt; Found support for locale: &#91;fr&#93;&lt; Found support for locale: &#91;it&#93;&lt; Found support for locale: &#91;ja_JP&#93;&lt; Found support for locale: &#91;ko_KR&#93;&lt; Found support for locale: &#91;pt_BR&#93;&lt; Found support for locale: &#91;zh_CN&#93;&lt; Found support for locale: &#91;zh_TW&#93;69a52&gt; Unable to analyze class path: access denied (java.util.PropertyPermission java.class.path read)72 81d54&lt; Current Locale : [English/United States &#91;en_US&#93;]&lt; Found support for locale: &#91;de_DE&#93;&lt; Found support for locale: &#91;es&#93;&lt; Found support for locale: &#91;fr&#93;&lt; Found support for locale: &#91;it&#93;&lt; Found support for locale: &#91;ja_JP&#93;&lt; Found support for locale: &#91;ko_KR&#93;&lt; Found support for locale: &#91;pt_BR&#93;&lt; Found support for locale: &#91;zh_CN&#93;&lt; Found support for locale: &#91;zh_TW&#93;Test Failed. End: sysinfo jdk1.4.2_02 DerbyNet derbynetmats:derbynetmats 2006-09-05 08:44:59 ***   ,10.2.1.6,10.2.1.6; 10.3.1.4,0.0,0.0,282.0,1.0,8.0,3.0,0.0,0.0,0.0,1.0,0.0,1.0,1.0,2,java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/sysinfo.policy;java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/sysinfo_withproperties.policy;
245,1849.0,Bug,Closed,Fixed,Test,Major,Rajesh Kartha,2006/09/14 02:09:33 +0100,2006/11/18 04:19:03 +0100,Myrna van Lunteren,2006/11/18 04:33:04 +0100,65.09966435,0.009733796,Tests lang/grantRevokeDDL.sql and lang/grantRevokeDDL2.sql fails on IBM WCTME 5.7 Foundation (jdkJ2ME Foundation Specification v1.0)   ,The diff for grantRevokeDDL.sql is big  hence attaching. For lang/grantRevokeDDL2.sql the diff is as follows:                 Diff file derbyall/derbylang/grantRevokeDDL2.diff             Start: grantRevokeDDL2 jdkJ2ME Foundation Specification v1.0 derbyall:derbylang 2006-09-10 11:42:23 ***0a1&gt; java.lang.reflect.InvocationTargetException: java.lang.NullPointerException99 del&lt; ERROR: Failed with SQLSTATE 3800199a100&gt; ERROR: Failed with SQLSTATE XJ001119 del&lt; ERROR: Failed with SQLSTATE 38002119a120&gt; ERROR: Failed with SQLSTATE XJ001139 del&lt; ERROR: Failed with SQLSTATE 38002139a140&gt; ERROR: Failed with SQLSTATE XJ001158 del&lt; 1 row inserted/updated/deleted158a159 160&gt; ERROR: Failed with SQLSTATE 38000&gt; ERROR: Failed with SQLSTATE XJ001163 del&lt; 0 rows selected163a165 166&gt; 4 |XYZ &gt; 1 row selected168a172 182&gt; ERROR: Failed with SQLSTATE 28508&gt; ij(USER2)&gt; set connection user1;&gt; ij(USER1)&gt; create trigger revoke_select_trig AFTER delete on t1 &gt; for each STATEMENT mode db2sql call revoke_select_proc1();&gt; 0 rows inserted/updated/deleted&gt; ij(USER1)&gt; &#8211; should fail&gt; delete from t1 where i = 5;&gt; ERROR: Failed with SQLSTATE 38000&gt; ERROR: Failed with SQLSTATE XJ001&gt; ij(USER1)&gt; &#8211; check delete failed&gt; select * from t1 where i = 5;171 184d184&lt; 1 |XYZ &lt; 1 row selected&lt; ij(USER2)&gt; set connection user1;&lt; ij(USER1)&gt; create trigger revoke_select_trig AFTER delete on t1 &lt; for each STATEMENT mode db2sql call revoke_select_proc1();&lt; 0 rows inserted/updated/deleted&lt; ij(USER1)&gt; &#8211; should fail&lt; delete from t1 where i = 5;&lt; ERROR: Failed with SQLSTATE 38000&lt; ERROR: Failed with SQLSTATE 38001&lt; ij(USER1)&gt; &#8211; check delete failed&lt; select * from t1 where i = 5;&lt; I |B &lt; ---------------------------191a192 202&gt; ERROR: Failed with SQLSTATE 28508&gt; ij(USER2)&gt; set connection user1;&gt; ij(USER1)&gt; create trigger revoke_select_trig AFTER delete on t1 &gt; for each STATEMENT mode db2sql call revoke_select_proc2();&gt; 0 rows inserted/updated/deleted&gt; ij(USER1)&gt; &#8211; should fail&gt; delete from t1 where i = 6;&gt; ERROR: Failed with SQLSTATE 38000&gt; ERROR: Failed with SQLSTATE XJ001&gt; ij(USER1)&gt; &#8211; check delete failed&gt; select * from t1 where i = 6;194 207d204&lt; 1 |XYZ &lt; 1 row selected&lt; ij(USER2)&gt; set connection user1;&lt; ij(USER1)&gt; create trigger revoke_select_trig AFTER delete on t1 &lt; for each STATEMENT mode db2sql call revoke_select_proc2();&lt; 0 rows inserted/updated/deleted&lt; ij(USER1)&gt; &#8211; should fail&lt; delete from t1 where i = 6;&lt; ERROR: Failed with SQLSTATE 38000&lt; ERROR: Failed with SQLSTATE 38002&lt; ij(USER1)&gt; &#8211; check delete failed&lt; select * from t1 where i = 6;&lt; I |B &lt; ---------------------------214a212 222&gt; ERROR: Failed with SQLSTATE 28508&gt; ij(USER2)&gt; set connection user1;&gt; ij(USER1)&gt; create trigger revoke_select_trig AFTER delete on t1 &gt; for each STATEMENT mode db2sql call revoke_select_proc3();&gt; 0 rows inserted/updated/deleted&gt; ij(USER1)&gt; &#8211; should fail&gt; delete from t1 where i = 7;&gt; ERROR: Failed with SQLSTATE 38000&gt; ERROR: Failed with SQLSTATE XJ001&gt; ij(USER1)&gt; &#8211; check delete failed&gt; select * from t1 where i = 7;217 230d224&lt; 1 |XYZ &lt; 1 row selected&lt; ij(USER2)&gt; set connection user1;&lt; ij(USER1)&gt; create trigger revoke_select_trig AFTER delete on t1 &lt; for each STATEMENT mode db2sql call revoke_select_proc3();&lt; 0 rows inserted/updated/deleted&lt; ij(USER1)&gt; &#8211; should fail&lt; delete from t1 where i = 7;&lt; ERROR: Failed with SQLSTATE 38000&lt; ERROR: Failed with SQLSTATE 38002&lt; ij(USER1)&gt; &#8211; check delete failed&lt; select * from t1 where i = 7;&lt; I |B &lt; ---------------------------237a232 242&gt; ERROR: Failed with SQLSTATE 28508&gt; ij(USER2)&gt; set connection user1;&gt; ij(USER1)&gt; create trigger revoke_select_trig AFTER delete on t1 &gt; for each STATEMENT mode db2sql call revoke_select_proc4();&gt; 0 rows inserted/updated/deleted&gt; ij(USER1)&gt; &#8211; ok&gt; delete from t1 where i = 8;&gt; ERROR: Failed with SQLSTATE 38000&gt; ERROR: Failed with SQLSTATE XJ001&gt; ij(USER1)&gt; &#8211; check delete &gt; select * from t1 where i = 8;240 del&lt; 1 |XYZ 240a245&gt; 8 |XYZ 241a247 252&gt; ij(USER1)&gt; drop trigger revoke_select_trig;&gt; 0 rows inserted/updated/deleted&gt; ij(USER1)&gt; set connection user2;&gt; ij(USER2)&gt; &#8211; should fail&gt; select * from user1.t1 where i = 1;&gt; ERROR: Failed with SQLSTATE 28508243 260d253&lt; ij(USER1)&gt; create trigger revoke_select_trig AFTER delete on t1 &lt; for each STATEMENT mode db2sql call revoke_select_proc4();&lt; 0 rows inserted/updated/deleted&lt; ij(USER1)&gt; &#8211; ok&lt; delete from t1 where i = 8;&lt; 1 row inserted/updated/deleted&lt; ij(USER1)&gt; &#8211; check delete &lt; select * from t1 where i = 8;&lt; I |B &lt; ---------------------------&lt; 0 rows selected&lt; ij(USER1)&gt; drop trigger revoke_select_trig;&lt; 0 rows inserted/updated/deleted&lt; ij(USER1)&gt; set connection user2;&lt; ij(USER2)&gt; &#8211; should fail&lt; select * from user1.t1 where i = 1;&lt; ERROR: Failed with SQLSTATE 28508&lt; ij(USER2)&gt; set connection user1;Test Failed. End: grantRevokeDDL2 jdkJ2ME Foundation Specification v1.0 derbyall:derbylang 2006-09-10 11:42:33 ***   ,10.3.1.4,10.2.2.0; 10.3.1.4,0.0,0.0,697.0,1.0,12.0,5.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,3,java/testing/org/apache/derbyTesting/functionTests/master/j9_foundation/grantRevokeDDL.out;java/testing/org/apache/derbyTesting/functionTests/master/j9_foundation/grantRevokeDDL2.out;java/testing/org/apache/derbyTesting/functionTests/tests/lang/grantRevokeDDL2_app.properties;
252,1900.0,Bug,Closed,Fixed,Demos/Scripts,Major,Rajesh Kartha,2006/09/29 03:21:15 +0100,2006/09/29 22:45:23 +0100,Andrew McIntyre,2006/09/29 22:49:04 +0100,0.8109837959999999,0.00255787,The scripts under the /bin of the distribution does not have the executable permission   ,The scripts under the /bin directory of the distribution does not have the execute permission. Here is the dir listing:rw-rr- 1 rajeshk RD 1153 2006-09-15 12:12 dblookrw-rr- 1 rajeshk RD 1353 2006-09-15 12:20 dblook.batrw-rr- 1 rajeshk RD 2348 2006-09-15 12:12 derby_common.batrw-rr- 1 rajeshk RD 4853 2006-09-15 12:56 derby_common.shrw-rr- 1 rajeshk RD 1241 2006-09-15 12:12 ijrw-rr- 1 rajeshk RD 1345 2006-09-15 12:20 ij.bat....The issue was raised in the list earlierhttp://www.nabble.com/Questions-on-the-scripts-in--bin--directory-of-Derby-install-p6271633.htmlbut looks it is not fully resolved.   ,10.2.1.6,10.2.1.6; 10.3.1.4,0.0,0.0,78.0,1.0,4.0,2.0,0.0,0.0,0.0,1.0,0.0,0.0,2.0,2,tools/release/build.xml;tools/release/build.xml;
253,1909.0,Bug,Closed,Fixed,SQL,Major,Bryan Pendleton,2006/09/30 21:54:16 +0100,2006/12/26 19:50:38 +0100,Bryan Pendleton,2007/02/05 05:59:40 +0100,127.33708329999999,40.42293981,ALTER TABLE DROP COLUMN needs to update GRANTed column privileges   ,When ALTER TABLE DROP COLUMN is used to drop a column from a table  it needs to update the GRANTed column privileges on that table.The following behaviors need to be provided: DROP COLUMN needs to automatically revoke any privileges which have been granted on this column Privileges which have been granted on other columns in this table need to be adjusted due to changed column position numbersWhen this problem is fixed  the following additional cleanup steps should occur: The check that disables DROP COLUMN in sqlAuthorization mode needs to be removed There is a comment in AlterTableConstantAction that needs to be revised The tests in lang/altertableDropColumn.sql should be moved into altertable.sql altertableDropColumn.sql and altertableDropColumn.out should be deletedSearch for this JIRA issue number in the code to find the relevant places to change.   ,10.3.1.4,10.3.1.4,0.0,1.0,136.0,2.0,8.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,9,java/engine/org/apache/derby/iapi/sql/dictionary/DataDictionary.java;java/engine/org/apache/derby/impl/sql/catalog/DataDictionaryImpl.java;java/engine/org/apache/derby/impl/sql/compile/sqlgrammar.jj;java/engine/org/apache/derby/impl/sql/execute/AlterTableConstantAction.java;java/storeless/org/apache/derby/impl/storeless/EmptyDictionary.java;java/testing/org/apache/derbyTesting/functionTests/master/altertable.out;java/testing/org/apache/derbyTesting/functionTests/master/altertableDropColumn.out;java/testing/org/apache/derbyTesting/functionTests/tests/lang/altertable.sql;java/testing/org/apache/derbyTesting/functionTests/tests/lang/altertableDropColumn.sql;
274,2040.0,Bug,Closed,Fixed,Services,Major,Daniel John Debrunner,2006/11/03 19:51:28 +0100,2006/11/03 19:51:28 +0100,Daniel John Debrunner,2007/07/26 14:01:08 +0100,264.756713,264.756713,Setting derby.database.classpath to contain installed jars causes the database to be unbootable when a Securitymanager is installed.   ,If the jars are sucessfully installed (without a security manager see DERBY-537) and the class path set then subsequent boots with a security manager fail with a SecurityException due to trying to install a class loader.Related to DERBY-537 but not the same.   ,10.2.1.6,10.1.3.2; 10.2.2.1; 10.3.1.4,0.0,0.0,68.0,1.0,5.0,2.0,0.0,0.0,0.0,1.0,0.0,0.0,4.0,11,java/engine/org/apache/derby/iapi/services/loader/JarReader.java;java/engine/org/apache/derby/impl/db/BasicDatabase.java;java/engine/org/apache/derby/impl/services/reflect/JarLoader.java;java/engine/org/apache/derby/impl/services/reflect/UpdateLoader.java;java/engine/org/apache/derby/impl/services/reflect/JarLoader.java;java/testing/org/apache/derbyTesting/functionTests/tests/lang/DatabaseClassLoadingTest.java;java/testing/org/apache/derbyTesting/functionTests/tests/store/BackupPathTests_app.properties;java/testing/org/apache/derbyTesting/functionTests/tests/store/OnlineBackupTest3_app.properties;java/engine/org/apache/derby/iapi/store/access/FileResource.java;java/engine/org/apache/derby/impl/db/BasicDatabase.java;java/engine/org/apache/derby/impl/store/raw/data/RFResource.java;
283,2108.0,Improvement,Closed,Fixed,Network Client; Network Server,Major,Bernt M. Johnsen,2006/11/22 14:44:29 +0100,2006/11/22 14:44:29 +0100,Bernt M. Johnsen,2007/02/14 12:16:33 +0100,83.89726852,83.89726852,Implement SSL/TLS communication between client and server   ,Implement SSL/TLS communication between client and server   ,,10.3.1.4,1.0,0.0,7.0,1.0,37.0,8.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,34,BUILDING.txt;java/client/org/apache/derby/client/am/Connection.java;java/client/org/apache/derby/client/net/NetAgent.java;java/client/org/apache/derby/client/net/NetConnection.java;java/client/org/apache/derby/client/net/OpenSocketAction.java;java/client/org/apache/derby/jdbc/ClientBaseDataSource.java;java/client/org/apache/derby/jdbc/ClientDriver.java;java/drda/org/apache/derby/impl/drda/ClientThread.java;java/drda/org/apache/derby/impl/drda/NetworkServerControlImpl.java;java/drda/org/apache/derby/loc/drda/messages_cs.properties;java/drda/org/apache/derby/loc/drda/messages_de_DE.properties;java/drda/org/apache/derby/loc/drda/messages_en.properties;java/drda/org/apache/derby/loc/drda/messages_es.properties;java/drda/org/apache/derby/loc/drda/messages_fr.properties;java/drda/org/apache/derby/loc/drda/messages_hu.properties;java/drda/org/apache/derby/loc/drda/messages_it.properties;java/drda/org/apache/derby/loc/drda/messages_ja_JP.properties;java/drda/org/apache/derby/loc/drda/messages_ko_KR.properties;java/drda/org/apache/derby/loc/drda/messages_pl.properties;java/drda/org/apache/derby/loc/drda/messages_pt_BR.properties;java/drda/org/apache/derby/loc/drda/messages_ru.properties;java/drda/org/apache/derby/loc/drda/messages_zh_CN.properties;java/drda/org/apache/derby/loc/drda/messages_zh_TW.properties;java/engine/org/apache/derby/iapi/reference/Property.java;java/shared/org/apache/derby/shared/common/reference/Attribute.java;java/testing/org/apache/derbyTesting/functionTests/master/DerbyNet/sysinfo.out;java/testing/org/apache/derbyTesting/functionTests/master/DerbyNetClient/sysinfo.out;java/testing/org/apache/derbyTesting/functionTests/master/derbyrunjartest.out;java/testing/org/apache/derbyTesting/functionTests/master/getCurrentProperties.out;java/testing/org/apache/derbyTesting/functionTests/master/maxthreads.out;java/testing/org/apache/derbyTesting/functionTests/master/sysinfo_withproperties.out;java/testing/org/apache/derbyTesting/functionTests/master/testProperties.out;java/testing/org/apache/derbyTesting/functionTests/master/timeslice.out;tools/ant/properties/compilepath.properties;
303,2254.0,Bug,Closed,Fixed,Store,Major,Olav Sandstaa,2007/01/18 21:21:18 +0100,2012/03/21 00:59:43 +0100,Rick Hillegas,2012/03/21 01:03:36 +0100,1888.154375,0.002696759,Assert during log file switch: log file position exceeded max log file size   ,When running simple tpc-b like transactions against a embedded Derby based on a SANE build of trunk the following assertion occurs for the background thread and all user threads: org.apache.derby.shared.common.sanity.AssertFailure: ASSERT FAILED log file position exceeded max log file sizeThis seems to occur during a switch to a new log file.derby.log contains the following call stack for the background thread:Exception trace: org.apache.derby.shared.common.sanity.AssertFailure: ASSERT FAILED log file position exceeded max log file size at org.apache.derby.shared.common.sanity.SanityManager.ASSERT(SanityManager.java:120) at org.apache.derby.impl.store.raw.log.LogCounter.makeLogInstantAsLong(LogCounter.java:120) at org.apache.derby.impl.store.raw.log.LogToFile.switchLogFile(LogToFile.java:1900) at org.apache.derby.impl.store.raw.log.LogToFile.appendLogRecord(LogToFile.java:3530) at org.apache.derby.impl.store.raw.log.FileLogger.logAndDo(FileLogger.java:345) at org.apache.derby.impl.store.raw.xact.Xact.logAndDo(Xact.java:1185) at org.apache.derby.impl.store.raw.log.LogToFile.checkpointWithTran(LogToFile.java:1540) at org.apache.derby.impl.store.raw.log.LogToFile.checkpoint(LogToFile.java:1357) at org.apache.derby.impl.store.raw.RawStore.checkpoint(RawStore.java:439) at org.apache.derby.impl.store.raw.log.LogToFile.performWork(LogToFile.java:3416) at org.apache.derby.impl.services.daemon.BasicDaemon.serviceClient(BasicDaemon.java:331) at org.apache.derby.impl.services.daemon.BasicDaemon.work(BasicDaemon.java:668) at org.apache.derby.impl.services.daemon.BasicDaemon.run(BasicDaemon.java:394) at java.lang.Thread.run(Thread.java:619)2007-01-17 23:09:48.638 GMT Thread&#91;derby.rawStoreDaemon 5 derby.daemons&#93; Cleanup action startingorg.apache.derby.shared.common.sanity.AssertFailure: ASSERT FAILED log file position exceeded max log file size at org.apache.derby.shared.common.sanity.SanityManager.ASSERT(SanityManager.java:120) at org.apache.derby.impl.store.raw.log.LogCounter.makeLogInstantAsLong(LogCounter.java:120) at org.apache.derby.impl.store.raw.log.LogToFile.switchLogFile(LogToFile.java:1900) at org.apache.derby.impl.store.raw.log.LogToFile.appendLogRecord(LogToFile.java:3530) at org.apache.derby.impl.store.raw.log.FileLogger.logAndDo(FileLogger.java:345) at org.apache.derby.impl.store.raw.xact.Xact.logAndDo(Xact.java:1185) at org.apache.derby.impl.store.raw.log.LogToFile.checkpointWithTran(LogToFile.java:1540) at org.apache.derby.impl.store.raw.log.LogToFile.checkpoint(LogToFile.java:1357) at org.apache.derby.impl.store.raw.RawStore.checkpoint(RawStore.java:439) at org.apache.derby.impl.store.raw.log.LogToFile.performWork(LogToFile.java:3416) at org.apache.derby.impl.services.daemon.BasicDaemon.serviceClient(BasicDaemon.java:331) at org.apache.derby.impl.services.daemon.BasicDaemon.work(BasicDaemon.java:668) at org.apache.derby.impl.services.daemon.BasicDaemon.run(BasicDaemon.java:394) at java.lang.Thread.run(Thread.java:619)Cleanup action completedFor my user threads the call stack is similar:Database Class Loader started - derby.database.classpath=''2007-01-17 23:09:36.401 GMT Thread&#91;Thread-51 5 main&#93; (XID = 12632406)  (SESSIONID = 51)  (DATABASE = /export/home/tmp/derby-db)  (DRDAID = null)  Cleanup action starting2007-01-17 23:09:36.401 GMT Thread&#91;Thread-51 5 main&#93; (XID = 12632406)  (SESSIONID = 51)  (DATABASE = /export/home/tmp/derby-db)  (DRDAID = null)  Failed Statement is: UPDATE accounts SET abal = abal + ? WHERE aid = ? AND bid = ?org.apache.derby.shared.common.sanity.AssertFailure: ASSERT FAILED log file position exceeded max log file size at org.apache.derby.shared.common.sanity.SanityManager.ASSERT(SanityManager.java:120) at org.apache.derby.impl.store.raw.log.LogCounter.makeLogInstantAsLong(LogCounter.java:120) at org.apache.derby.impl.store.raw.log.LogToFile.switchLogFile(LogToFile.java:1900) at org.apache.derby.impl.store.raw.log.LogToFile.appendLogRecord(LogToFile.java:3530) at org.apache.derby.impl.store.raw.log.FileLogger.logAndDo(FileLogger.java:345) at org.apache.derby.impl.store.raw.xact.Xact.logAndDo(Xact.java:1185) at org.apache.derby.impl.store.raw.data.LoggableActions.doAction(LoggableActions.java:221) at org.apache.derby.impl.store.raw.data.LoggableActions.actionUpdate(LoggableActions.java:85) at org.apache.derby.impl.store.raw.data.StoredPage.doUpdateAtSlot(StoredPage.java:8521) at org.apache.derby.impl.store.raw.data.BasePage.updateAtSlot(BasePage.java:1108) at org.apache.derby.impl.store.access.conglomerate.GenericConglomerateController.replace(GenericConglomerateController.java:479) at org.apache.derby.impl.sql.execute.RowChangerImpl.updateRow(RowChangerImpl.java:523) at org.apache.derby.impl.sql.execute.UpdateResultSet.collectAffectedRows(UpdateResultSet.java:566) at org.apache.derby.impl.sql.execute.UpdateResultSet.open(UpdateResultSet.java:260) at org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:358) at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1182) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatement(EmbedPreparedStatement.java:1652) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeUpdate(EmbedPreparedStatement.java:299) at com.sun.derby.perf.clients.tpcb.DBConnection.performTransaction(DBConnection.java:595) at com.sun.derby.perf.clients.tpcb.Client.run(Client.java:218)After this it seems like no user threads are able to connect to the database (not surpricing).This happend using a SANE build and I am unsure by just looking at the assertion in the code whether this situation would have been fatal also if I had been using an INSANE build.   ,10.5.3.0,10.5.3.2; 10.6.2.4; 10.7.1.4; 10.8.2.2; 10.9.1.0,2.0,5.0,314.0,1.0,26.0,8.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,3,java/engine/org/apache/derby/impl/store/raw/log/LogAccessFile.java;java/engine/org/apache/derby/impl/store/raw/log/LogCounter.java;java/engine/org/apache/derby/impl/store/raw/log/LogToFile.java;
305,2262.0,Bug,Closed,Fixed,JDBC,Minor,Daniel John Debrunner,2007/01/22 18:16:08 +0100,2007/02/05 10:55:56 +0100,Saurabh Vyas,2007/03/12 09:50:33 +0100,48.64890046,34.95459491,DatabaseMetaData.getTypeInfo returns incorrect MAXIMUM_SCALE value for DECIMAL and NUMERIC types   ,Maximum scale is returned as 32767 but maximum scale for numerics is 31.   ,10.1.1.0; 10.1.2.1; 10.1.3.1; 10.2.1.6; 10.2.2.0; 10.3.1.4,10.3.1.4,0.0,0.0,13.0,1.0,5.0,2.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,2,java/engine/org/apache/derby/impl/jdbc/metadata.properties;java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java;
306,2265.0,Bug,Closed,Fixed,Test,Minor,Myrna van Lunteren,2007/01/23 20:10:17 +0100,2007/01/23 20:10:17 +0100,Myrna van Lunteren,2007/05/14 18:45:36 +0100,110.94119209999998,110.9411921,bad logic in jvm:guessWSHome() in old test harness affects j9 runs   ,Running derbyall using either wcmte5.7_foundation or weme6.1 results in the following stack trace.Exception in thread 'main' java.lang.StringIndexOutOfBoundsException at java.lang.String.substring(String.java:1043) at org.apache.derbyTesting.functionTests.harness.jvm.guessWSHome(jvm.java:301) at org.apache.derbyTesting.functionTests.harness.jvm.getSecurityProps(jvm.java:356) at org.apache.derbyTesting.functionTests.harness.jvm.setSecurityProps(jvm.java:336) at org.apache.derbyTesting.functionTests.harness.RunTest.buildTestCommand(RunTest.java:2350) at org.apache.derbyTesting.functionTests.harness.RunTest.testRun(RunTest.java:498) at org.apache.derbyTesting.functionTests.harness.RunTest.main(RunTest.java:368)I think this code was not reached until various security related changes recently  but the code is just bad.I think this code was used at one point to attempt to kick off another jvm to run a server with  but that is now defunct.Rather than try to make the code work  or try to clean it up  I'd rather spend time converting tests to the junit framework  so I will just fix this up so we don't hit the error.The bad code is:  wshome = jhome.substring(0 jhome.indexOf(sep + 'jre')); wshome = wshome.substring(0 wshome.lastIndexOf(sep));If the jhome ( System.getProperty('java.home')) does not contain 'jre'  we will get -1 as the 2nd parameter in jhome.substring  and thus cause the ArrayIndexOutOfBounds.I propose to fix this piece of code as follows: int havejre=jhome.indexOf(sep + 'jre'); if (havejre &gt; 0) { wshome = jhome.substring(0 jhome.indexOf(sep + 'jre')); wshome = wshome.substring(0 wshome.lastIndexOf(sep)); } else wshome = jhome.substring(0 jhome.lastIndexOf(sep));   ,10.3.1.4,10.3.1.4,0.0,0.0,177.0,1.0,2.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,1,java/testing/org/apache/derbyTesting/functionTests/harness/jvm.java;
307,2268.0,Improvement,Closed,Fixed,Test,Minor,Knut Anders Hatlen,2007/01/24 10:20:42 +0100,2007/01/24 10:20:42 +0100,Knut Anders Hatlen,2007/01/26 08:51:45 +0100,1.9382291669999998,1.938229167,AccessControlException when exiting junit.swingui.TestRunner   ,When the JUnit tests are run with junit.swingui.TestRunner  one gets the following exception when the test runner window is closed:Exception in thread 'AWT-EventQueue-0' java.security.AccessControlException: access denied (java.io.FilePermission /home/kh160127/.junitsession write)   ,10.3.1.4,10.3.1.4,0.0,0.0,29.0,1.0,3.0,2.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,1,java/testing/org/apache/derbyTesting/functionTests/util/derby_tests.policy;
310,2315.0,Bug,Closed,Fixed,Test,Minor,Ole Solberg,2007/02/09 14:43:33 +0100,2007/02/09 14:43:33 +0100,Ole Solberg,2007/02/16 14:06:25 +0100,6.974212962999999,6.974212963,compatibility/testScript.xml should include 10.2.2 in the server/client combinations   ,Add SERVER_10.2.2.0 and CLIENT_10.2.2.0 in the combinations to be tested.   ,10.3.1.4,10.3.1.4,0.0,0.0,10.0,1.0,3.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,1,java/testing/org/apache/derbyTesting/functionTests/tests/junitTests/compatibility/testScript.xml;
325,2450.0,Bug,Closed,Fixed,JDBC,Major,Anurag Shekhar,2007/03/14 14:40:14 +0100,2007/03/22 10:11:29 +0100,Anurag Shekhar,2007/03/26 09:21:54 +0100,11.77893519,3.96556713,Clob.Position returning wrong value when operating on Reader   ,   ,10.3.1.4,10.3.1.4,0.0,0.0,1.0,1.0,11.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,2.0,2,java/engine/org/apache/derby/impl/jdbc/EmbedClob.java;java/engine/org/apache/derby/impl/jdbc/EmbedClob.java;
339,2556.0,Bug,Closed,Fixed,Services,Major,Kristian Waagan,2007/04/17 13:10:15 +0100,2008/08/04 20:07:39 +0100,Kristian Waagan,2008/10/31 10:40:09 +0100,562.8957638999999,87.60590278,Code paths for db restore do not use doPrivileged-calls  causing SecurityException   ,When using 'createFrom' or 'restoreFrom' in the JDBC url to restore a database from a backup image  a SecurityException is thrown even though the policyfile for codebase derby.jar is correctly configured (giving Derby access to the backup image).A few comments on this issue can be found here (and in subsequent comments): https://issues.apache.org/jira/browse/DERBY-1001#action_12439811A workaround is wrapping the connection call in doPrivileged at the 'application-level code'  or granting the required permissions to the application codebase as well.   ,10.2.2.0; 10.3.1.4,10.3.1.4,0.0,0.0,78.0,1.0,27.0,4.0,0.0,0.0,1.0,1.0,0.0,0.0,4.0,14,java/engine/org/apache/derby/impl/services/monitor/StorageFactoryService.java;java/engine/org/apache/derby/impl/services/monitor/StorageFactoryService.java;java/engine/org/apache/derby/iapi/util/PrivilegedFileOps.java;java/engine/org/apache/derby/impl/services/monitor/StorageFactoryService.java;java/engine/org/apache/derby/impl/store/raw/data/BaseDataFileFactory.java;java/drda/org/apache/derby/impl/drda/DssTrace.java;java/engine/org/apache/derby/iapi/util/PrivilegedFileOps.java;java/engine/org/apache/derby/impl/load/Export.java;java/engine/org/apache/derby/impl/services/monitor/StorageFactoryService.java;java/engine/org/apache/derby/impl/store/raw/data/BaseDataFileFactory.java;java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/GetCurrentPropertiesTest.policy;java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/NetworkServerControlApiTest.policy;java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/ServerPropertiesTest.policy;java/testing/org/apache/derbyTesting/functionTests/util/derby_tests.policy;
341,2564.0,Bug,Closed,Fixed,Network Server; Services,Major,Rick Hillegas,2007/04/18 17:24:43 +0100,2007/11/16 00:32:22 +0100,Kathey Marsden,2007/11/19 20:41:50 +0100,215.1368866,3.839907407,ContextService.notifyAllActiveThreads()  and network server code need a privileged block around the calls to Thread.interrupt()   ,It looks to me as though the call to interrupt() can raise a SecurityException. I think this may give rise to another permission that we need to add to our template policy file and to our security documentation.   ,10.0.2.0; 10.0.2.1; 10.1.1.0; 10.1.2.1; 10.1.3.1; 10.2.1.6; 10.2.2.0,10.3.2.1; 10.4.1.3,0.0,0.0,38.0,1.0,7.0,2.0,0.0,1.0,0.0,1.0,0.0,0.0,1.0,3,java/drda/org/apache/derby/impl/drda/NetworkServerControlImpl.java;java/engine/org/apache/derby/iapi/jdbc/DRDAServerStarter.java;java/engine/org/apache/derby/iapi/services/context/ContextService.java;
347,2606.0,Improvement,Closed,Fixed,Services,Minor,Kathey Marsden,2007/05/03 22:35:57 +0100,2007/05/03 22:35:57 +0100,Kathey Marsden,2007/05/04 21:56:50 +0100,0.972835648,0.972835648,Derby should print the parameters to failed statements to the derby.log when it logs the error   ,It would be good if when derby dumped an error to derby.log it printed the parameters for the failed statement. Currently the default behaviour is that only the statement text will print. Users have to set derby.language.logStatementText=true if they want to see the parameters. It would be useful if any errors included the parameters as well as the statement text.To reproduce put derby.stream.error.logSeverityLevel=0 in your derby.properties and run this script: connect 'jdbc:derby:wombat;create=true';create table t (i int);prepare p as 'insert into t values'; execute p using 'values(1)';execute p using 'values(10000000000000000000000000000000000000000000)';   ,10.3.1.4,10.1.3.2; 10.2.2.1; 10.3.1.4,0.0,0.0,96.0,1.0,6.0,4.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,1,java/engine/org/apache/derby/impl/sql/conn/GenericStatementContext.java;
366,2754.0,Bug,Closed,Fixed,Network Client,Major,Kathey Marsden,2007/06/04 17:45:45 +0100,2007/06/06 21:01:02 +0100,Kathey Marsden,2007/06/07 18:58:23 +0100,3.050439815,0.914826389,Client connections should not fail if permission is not granted to read derby.client.traceLevel  and derby.client.traceDirectory   ,Running the 10.2 network server tests with the 10.3 server  most tests fail with:AccessControlException: Access denied java.util.Property derby.client.traceLevel readdue to DERBY-1275. This can break existing applications that don't have this permission and should be a non-fatal warning if permission is not granted.   ,10.3.1.4,10.3.1.4,0.0,0.0,56.0,1.0,6.0,2.0,0.0,0.0,0.0,1.0,0.0,1.0,1.0,1,java/client/org/apache/derby/jdbc/ClientBaseDataSource.java;
371,2796.0,Bug,Closed,Fixed,,Major,Rick Hillegas,2007/06/08 22:03:53 +0100,2007/06/14 08:57:37 +0100,Bernt M. Johnsen,2007/06/20 10:00:35 +0100,11.49770833,6.043726852,Obscure error messages when using SSL in various combinations   ,I ran clients with various ssl configurations on their urls and startup options against servers with various ssl configurations. I will attach an html file recording my results. I feel that many of the error conditions raised diagnostics which were too obscure to be helpful. I think this will be burdensome to tech support.   ,10.3.1.4,10.3.1.4; 10.4.1.3,0.0,0.0,54.0,1.0,16.0,4.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,30,java/drda/org/apache/derby/impl/drda/DRDAProtocolException.java;java/drda/org/apache/derby/impl/drda/NetworkServerControlImpl.java;java/drda/org/apache/derby/loc/drda/messages_cs.properties;java/drda/org/apache/derby/loc/drda/messages_de_DE.properties;java/drda/org/apache/derby/loc/drda/messages_en.properties;java/drda/org/apache/derby/loc/drda/messages_es.properties;java/drda/org/apache/derby/loc/drda/messages_fr.properties;java/drda/org/apache/derby/loc/drda/messages_hu.properties;java/drda/org/apache/derby/loc/drda/messages_it.properties;java/drda/org/apache/derby/loc/drda/messages_ja_JP.properties;java/drda/org/apache/derby/loc/drda/messages_ko_KR.properties;java/drda/org/apache/derby/loc/drda/messages_pl.properties;java/drda/org/apache/derby/loc/drda/messages_pt_BR.properties;java/drda/org/apache/derby/loc/drda/messages_ru.properties;java/drda/org/apache/derby/loc/drda/messages_zh_CN.properties;java/drda/org/apache/derby/loc/drda/messages_zh_TW.properties;java/engine/org/apache/derby/loc/messages.xml;java/engine/org/apache/derby/loc/messages_cs.properties;java/engine/org/apache/derby/loc/messages_de_DE.properties;java/engine/org/apache/derby/loc/messages_es.properties;java/engine/org/apache/derby/loc/messages_fr.properties;java/engine/org/apache/derby/loc/messages_hu.properties;java/engine/org/apache/derby/loc/messages_it.properties;java/engine/org/apache/derby/loc/messages_ja_JP.properties;java/engine/org/apache/derby/loc/messages_ko_KR.properties;java/engine/org/apache/derby/loc/messages_pl.properties;java/engine/org/apache/derby/loc/messages_pt_BR.properties;java/engine/org/apache/derby/loc/messages_ru.properties;java/engine/org/apache/derby/loc/messages_zh_TW.properties;java/testing/org/apache/derbyTesting/functionTests/master/testconnection.out;
383,2874.0,Bug,Closed,Fixed,Network Server,Major,Manjula Kutty,2007/06/26 19:16:29 +0100,2007/06/26 19:32:37 +0100,Rick Hillegas,2007/07/03 23:04:21 +0100,7.158240741,7.147037037,NetworkServer not accepting connections with default security manager on Ipv6 machines   ,While running tests on Ipv6 machines using the 10.3 jars with the default security manager  I had the following findings/questionsI started the server like this java org.apache.derby.drda.NetworkServerControl start -h 2002:92a:8f7a:13:9:42:74:19and the server started with the following commandSecurity manager installed using the Basic server security policy.Apache Derby Network Server - 10.3.1.0 beta - (548006) started and ready to accept connections on port 1527 at 2007-06-25 23:44: 36.835 GMTSo I think the server is using the default security manager. Then when I tried to get conenction though ijgot the following error messageAccess denied (java.net.SocketPermission &#91;2002:92a:8f7a:13:9:42:73:218&#93;:34016 accept resolve)java.security.AccessControlException: Access denied (java.net.SocketPermission &#91;2002:92a:8f7a:13:9:42:73:218&#93;:34016 accept resolve)  at java.security.AccessController.checkPermission(AccessController.java:104) at java.lang.SecurityManager.checkPermission(SecurityManager.java:547) at java.lang.SecurityManager.checkAccept (SecurityManager.java:1172) at java.net.ServerSocket.implAccept(ServerSocket.java:466) at java.net.ServerSocket.accept(ServerSocket.java:433) at org.apache.derby.impl.drda.ClientThread$1.run (Unknown Source) at java.security.AccessController.doPrivileged(AccessController.java:242) at org.apache.derby.impl.drda.ClientThread.run(Unknown Source)I had the derby.properties file like thisderby.database.sqlAuthorization=truederby.connection.requireAuthentication=truederby.infolog.append=truederby.authentication.provider=BUILTINderby.stream.error.logSeverityLevel=0#derby.language.logStatementText=true User's Definitionsderby.user.user2=pass2   ,10.3.1.4,10.3.1.4; 10.4.1.3,0.0,0.0,130.0,1.0,30.0,3.0,0.0,0.0,0.0,1.0,0.0,1.0,1.0,3,java/drda/org/apache/derby/drda/NetworkServerControl.java;java/drda/org/apache/derby/drda/server.policy;java/drda/org/apache/derby/drda/template.policy;
387,2893.0,Bug,Closed,Fixed,Test,Major,Daniel John Debrunner,2007/07/03 18:37:14 +0100,2007/07/11 14:17:21 +0100,Kathey Marsden,2007/07/11 14:17:21 +0100,7.819525463,0,INSERT and UPDATES succeed when permission has not been granted.   ,GrantRevokeTest had assert methods (assertInsertPrivilege etc.) of the formtry { s.execute(command)} catch (SQLException sqle){ if (!hasPrivilege)  assertSQLState('42502'  e); else fail(...);}Note that no fail() assert was in the try portion after the SQL execution. The statement should not work if hasPrivilege is false  but the test will incorrectly pass if the statement succeeds. I added fail asserts with revision 552922 like:if (!hasPrivilege) fail('expected no INSERT permission on table');but these two for INSERT and UPDATE caused the test to fail (about 6 fixtures fail) indicating that the statement succeeds even if the permission is not granted.It could be a test problem but needs some investigation.The asserts for assertInsertPrivilege and asserUpdatePrivilege are commented out to stop the test failing.   ,10.3.1.4; 10.4.1.3,10.3.1.4,0.0,0.0,117.0,1.0,12.0,2.0,0.0,0.0,0.0,1.0,0.0,0.0,3.0,3,java/testing/org/apache/derbyTesting/functionTests/tests/lang/GrantRevokeTest.java;java/testing/org/apache/derbyTesting/functionTests/tests/lang/GrantRevokeTest.java;java/testing/org/apache/derbyTesting/functionTests/tests/lang/GrantRevokeTest.java;
425,3153.0,Bug,Closed,Fixed,Test,Major,Rick Hillegas,2007/10/26 15:31:08 +0100,2007/10/26 15:31:08 +0100,Vemund ?stgaard,2008/03/05 15:28:09 +0100,130.99792820000002,130.9979282,AccessControlException when running junit tests under the ant harness in ant 1.7.0   ,The following AccessControlException occurs on junit tests run under the ant harness if the ant version is 1.7.0: &#91;junit&#93; Running org.apache.derbyTesting.functionTests.tests.jdbcapi.AutoloadTest &#91;junit&#93; Tests run: 3  Failures: 0  Errors: 1  Time elapsed: 1.029 sec &#91;junit&#93; Exception in thread 'main' java.security.AccessControlException: access denied (java.io.FilePermission /Users/rh161140/derby/mainline/trunk/junitvmwatcher520156310.properties write) &#91;junit&#93; at java.security.AccessControlContext.checkPermission(AccessControlContext.java:264) &#91;junit&#93; at java.security.AccessController.checkPermission(AccessController.java:427) &#91;junit&#93; at java.lang.SecurityManager.checkPermission(SecurityManager.java:532) &#91;junit&#93; at java.lang.SecurityManager.checkWrite(SecurityManager.java:962) &#91;junit&#93; at java.io.FileOutputStream.&lt;init&gt;(FileOutputStream.java:169) &#91;junit&#93; at java.io.FileOutputStream.&lt;init&gt;(FileOutputStream.java:70) &#91;junit&#93; at java.io.FileWriter.&lt;init&gt;(FileWriter.java:46) &#91;junit&#93; at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.registerNonCrash(JUnitTestRunner.java:924) &#91;junit&#93; at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:772) &#91;junit&#93; Running org.apache.derbyTesting.functionTests.tests.jdbcapi.AutoloadTest &#91;junit&#93; Tests run: 1  Failures: 0  Errors: 1  Time elapsed: 0 secI haven't looked at the ant source  but here is my theory about what is going on:1) Ant 1.7.0 is trying to write a file to the directory where the ant script lives2) The write is not wrapped in a privileged block3) So all code domains above it on the stack need to be granted write permission on the directory where the ant script livesI will attach a modified version of derby_tests.policy which allows me to start up the tests without tripping across this security exception.   ,10.4.1.3,10.4.1.3,0.0,0.0,185.0,3.0,6.0,4.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,1,build.xml;
426,3160.0,Bug,Closed,Fixed,SQL,Minor,Daniel John Debrunner,2007/10/30 01:12:27 +0100,2007/10/30 01:12:27 +0100,Daniel John Debrunner,2007/10/31 16:58:47 +0100,1.6571759259999999,1.657175926,SYSCS_GET_USER_ACCESS incorrectly treats the passed in user name as a SQL identifier and thus can reports the wrong user information   ,VALUES SYSCS_GET_USER_ACCESS(CURRENT_USER) will report the wrong user information if the user name needs to be a delimited identifier when used in a SQL statement such as GRANT. E.g. user fred@derby.com  123 etc.Passing the user name as a VARCHAR also returns the wrong user for such user names.   ,10.3.1.4; 10.4.1.3,10.4.1.3,0.0,0.0,47.0,1.0,2.0,2.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,2,java/engine/org/apache/derby/catalog/SystemProcedures.java;java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/AuthenticationTest.java;
428,3174.0,Bug,Closed,Fixed,Test,Minor,Kathey Marsden,2007/11/06 00:59:21 +0100,2007/11/09 23:07:33 +0100,Kathey Marsden,2007/11/10 02:03:28 +0100,4.044525463,0.122164352,NetworkServerControlApiTest fails with java.security.AccessControlException if not run as first test   ,There appears to be a problem loading the test specific policy file for NetworkServerControlApiTest if it is not run as the first test in the suite.Failure in the derby.log is:Trace directory changed to C:/test/system.access denied (java.io.FilePermission C:/test/system/Server3.trace write)java.security.AccessControlException: access denied (java.io.FilePermission C:/test/system/Server3.trace write) at java.security.AccessControlContext.checkPermission(AccessControlContext.java:323) at java.security.AccessController.checkPermission(AccessController.java:546) at java.lang.SecurityManager.checkPermission(SecurityManager.java:532) at java.lang.SecurityManager.checkWrite(SecurityManager.java:962) at java.io.FileOutputStream.&lt;init&gt;(FileOutputStream.java:169) at java.io.FileOutputStream.&lt;init&gt;(FileOutputStream.java:70) at java.io.FileWriter.&lt;init&gt;(FileWriter.java:46) at org.apache.derby.impl.drda.DssTrace$1.run(DssTrace.java:181) at java.security.AccessController.doPrivileged(Native Method) at org.apache.derby.impl.drda.DssTrace.startComBufferTrace(DssTrace.java:178) at org.apache.derby.impl.drda.Session.initTrace(Session.java:138) at org.apache.derby.impl.drda.Session.setTraceOn(Session.java:152) at org.apache.derby.impl.drda.NetworkServerControlImpl.setTrace(NetworkServerControlImpl.java:3372) at org.apache.derby.impl.drda.NetworkServerControlImpl.processCommands(NetworkServerControlImpl.java:1422) at org.apache.derby.impl.drda.DRDAConnThread.sessionInitialState(DRDAConnThread.java:630) at org.apache.derby.impl.drda.DRDAConnThread.run(DRDAConnThread.java:264)   ,10.3.2.1; 10.4.1.3,10.3.2.1; 10.4.1.3,0.0,0.0,76.0,1.0,1.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,1,java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/_Suite.java;
432,3194.0,Bug,Closed,Fixed,Localization; Tools,Trivial,Stan Bradbury,2007/11/09 19:39:07 +0100,2007/11/16 01:37:53 +0100,Dag H. Wanvik,2007/11/19 19:26:38 +0100,9.991331019,3.7421875,LOCALIZEDDISPLAY of CURRENT_TIMESTAMP returns only the TIME   ,In IJ - LOCALIZEDDISPLAY ON causes VALUES CURRENT_TIMESTAMP to display on the TIMEij&gt; values current_timestamp;1--------------------------2007-11-09 10:37:58.8281 row selectedij&gt; localizeddisplay on;ij&gt; values current_timestamp;1---------------10:38:10 AM PST1 row selected   ,10.3.1.4,10.3.3.0; 10.4.1.3,0.0,0.0,26.0,1.0,5.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,1,java/tools/org/apache/derby/iapi/tools/i18n/LocalizedResource.java;
434,3202.0,Bug,Closed,Fixed,Test,Major,Ole Solberg,2007/11/13 08:43:23 +0100,2007/11/13 11:52:22 +0100,Vemund ?stgaard,2007/11/27 14:01:29 +0100,14.22090278,14.08966435,'AccessControlException: access denied (java.io.FilePermission C:/..../file-2.log read)' in ErrorStreamTest.   ,Seen on Windows only.See e.g. http://dbtg.thresher.com/derby/test/Daily/jvm1.6/testing/Limited/testSummary-594211.html : vista  w2003.suitesAll fail *************************************************************1) testFile(org.apache.derbyTesting.functionTests.tests.engine.ErrorStreamTest)java.security.AccessControlException: access denied (java.io.FilePermission C:/cludev/jagtmp/autoderbyN_regression/suitesAll_30/log/system/file-2.log read)2) testWrongFile(org.apache.derbyTesting.functionTests.tests.engine.ErrorStreamTest)java.security.AccessControlException: access denied (java.io.FilePermission C:/cludev/jagtmp/autoderbyN_regression/suitesAll_30/log/system/foo/file-3.log read)3) testFileOverMethod(org.apache.derbyTesting.functionTests.tests.engine.ErrorStreamTest)java.security.AccessControlException: access denied (java.io.FilePermission C:/cludev/jagtmp/autoderbyN_regression/suitesAll_30/log/system/file-8.log read)4) testFileOverField(org.apache.derbyTesting.functionTests.tests.engine.ErrorStreamTest)java.security.AccessControlException: access denied (java.io.FilePermission C:/cludev/jagtmp/autoderbyN_regression/suitesAll_30/log/system/file-9.log read)5) testFileOverMethodAndField(org.apache.derbyTesting.functionTests.tests.engine.ErrorStreamTest)java.security.AccessControlException: access denied (java.io.FilePermission C:/cludev/jagtmp/autoderbyN_regression/suitesAll_30/log/system/file-10.log read)1) testDefault(org.apache.derbyTesting.functionTests.tests.engine.ErrorStreamTest)junit.framework.AssertionFailedError: File C:/cludev/jagtmp/autoderbyN_regression/suitesAll_30/log/system/derby.log could not be deleted2) testMethod(org.apache.derbyTesting.functionTests.tests.engine.ErrorStreamTest)junit.framework.AssertionFailedError: assertNotEmpty failed:C:/cludev/jagtmp/autoderbyN_regression/suitesAll_30/log/system/method-4.logsuitesAll fail *************************************************************1) testFile(org.apache.derbyTesting.functionTests.tests.engine.ErrorStreamTest)java.security.AccessControlException: access denied (java.io.FilePermission C:/cludev/jagtmp/autoderbyN_regression/suitesAll_30/log/system/file-2.log read) at java.security.AccessControlContext.checkPermission(AccessControlContext.java:323) at java.security.AccessController.checkPermission(AccessController.java:546) at java.lang.SecurityManager.checkPermission(SecurityManager.java:532) at java.lang.SecurityManager.checkRead(SecurityManager.java:871) at java.io.File.exists(File.java:731) at java.io.Win32FileSystem.canonicalize(Win32FileSystem.java:402) at java.io.File.getCanonicalPath(File.java:559) at org.apache.derbyTesting.functionTests.tests.engine.ErrorStreamTest.testFile(ErrorStreamTest.java:140) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:95)++   ,10.4.1.3,10.4.1.3,0.0,1.0,87.0,2.0,14.0,4.0,0.0,0.0,0.0,1.0,0.0,1.0,2.0,2,java/testing/org/apache/derbyTesting/functionTests/tests/engine/ErrorStreamTest.java;java/testing/org/apache/derbyTesting/functionTests/tests/engine/ErrorStreamTest.java;
446,3266.0,Bug,Closed,Fixed,SQL,Major,adam jvok,2007/12/10 04:44:55 +0100,2008/10/08 03:33:24 +0100,Dag H. Wanvik,2008/10/15 02:34:21 +0100,309.9093287,6.958993056,Not possible for non-db-owner to create a temporary table. 'Get ERROR 42507: User 'USERB' can not perform the operation in schema 'SESSION'.'   ,It seems that only the owner of a database may create tempoary tables in that db.This is not helpful as many other users may want to run a query on that db that relies upon the creation of temporary tables.I would expect non-db-owners to be able create temporay tables.The problem is demonstrated with:derby.properties like this:derby.connection.requireAuthentication=truederby.authentication.provider=BUILTINderby.database.sqlAuthorization=TRUEderby.user.usera=pwdderby.fullAccessUsers=useraderby.drda.host=192.168.1.50Start the network server and run up 'ij'.ij&gt;connect 'jdbc:derby://192.168.1.50:1527/TEST1;user=usera;password=pwd;create=true;';ij&gt; declare global temporary table t11(a int) on commit preserve rowsnot logged;0 rows inserted/updated/deletedAll good so far.Now try this (while still connected as usera):ij&gt; call SYSCS_UTIL.SYSCS_SET_DATABASE_PROPERTY('derby.user.userb' 'pwd');Statement executed.ij&gt; call SYSCS_UTIL.SYSCS_SET_USER_ACCESS('userb' 'FULLACCESS');Statement executed.ij&gt; disconnect;ij&gt; connect 'jdbc:derby://192.168.1.50:1527/TEST1;user=userb;password=pwd;';ij&gt; declare global temporary table t1(a int) on commit preserve rows not logged;ERROR 42507: User 'USERB' can not perform the operation in schema 'SESSION'.SYSINFO:========------------------ Java Information ------------------Java Version: 1.6.0_02-eaJava Vendor: Sun Microsystems Inc.Java home: /usr/java/jdk1.6.0_02/jreJava classpath: /home/ajvok/derby/db-derby-10.3.1.4-bin/lib/derby.jar:/home/ajvok/derby/db-derby-10.3.1.4-bin/lib/derbynet.jar:/home/ajvok/derby/db-derby-10.3.1.4-bin/lib/derbytools.jar:/home/ajvok/derby/db-derby-10.3.1.4-bin/lib/derbyclient.jar:/home/ajvok/derby/local/sp1.jarOS name: LinuxOS architecture: i386OS version: 2.6.17-5mdvJava user name: ajvokJava user home: /home/ajvokJava user dir: /home/ajvok/derby/localjava.specification.name: Java Platform API Specificationjava.specification.version: 1.6--------- Derby Information --------JRE - JDBC: Java SE 6 - JDBC 4.0&#91;/home/ajvok/derby/db-derby-10.3.1.4-bin/lib/derby.jar&#93; 10.3.1.4 - (561794)&#91;/home/ajvok/derby/db-derby-10.3.1.4-bin/lib/derbytools.jar&#93; 10.3.1.4 - (561794)&#91;/home/ajvok/derby/db-derby-10.3.1.4-bin/lib/derbynet.jar&#93; 10.3.1.4 - (561794)&#91;/home/ajvok/derby/db-derby-10.3.1.4-bin/lib/derbyclient.jar&#93; 10.3.1.4 - (561794)----------------------------------------------------------------------- Locale Information -----------------Current Locale : [English/United Kingdom &#91;en_GB&#93;]Found support for locale: &#91;cs&#93; version: 10.3.1.4 - (561794)Found support for locale: &#91;de_DE&#93; version: 10.3.1.4 - (561794)Found support for locale: &#91;es&#93; version: 10.3.1.4 - (561794)Found support for locale: &#91;fr&#93; version: 10.3.1.4 - (561794)Found support for locale: &#91;hu&#93; version: 10.3.1.4 - (561794)Found support for locale: &#91;it&#93; version: 10.3.1.4 - (561794)Found support for locale: &#91;ja_JP&#93; version: 10.3.1.4 - (561794)Found support for locale: &#91;ko_KR&#93; version: 10.3.1.4 - (561794)Found support for locale: &#91;pl&#93; version: 10.3.1.4 - (561794)Found support for locale: &#91;pt_BR&#93; version: 10.3.1.4 - (561794)Found support for locale: &#91;ru&#93; version: 10.3.1.4 - (561794)Found support for locale: &#91;zh_CN&#93; version: 10.3.1.4 - (561794)Found support for locale: &#91;zh_TW&#93; version: 10.3.1.4 - (561794)------------------------------------------------------   ,10.3.1.4,10.5.1.1,0.0,0.0,304.0,1.0,12.0,5.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,4,java/engine/org/apache/derby/impl/sql/compile/CompilerContextImpl.java;java/engine/org/apache/derby/impl/sql/compile/CreateTableNode.java;java/engine/org/apache/derby/impl/sql/compile/DropTableNode.java;java/testing/org/apache/derbyTesting/functionTests/tests/lang/GrantRevokeDDLTest.java;
473,3455.0,Bug,Closed,Fixed,Replication,Major,V.Narayanan,2008/02/23 12:28:14 +0100,2008/02/23 12:28:35 +0100,V.Narayanan,2008/04/07 10:25:13 +0100,43.91457176,43.9143287,Move replication methods from org.apache.derby.database.Database to org.apache.derby.iapi.db.Database   ,   ,10.4.1.3,10.4.1.3,0.0,0.0,1.0,1.0,7.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,2,java/engine/org/apache/derby/database/Database.java;java/engine/org/apache/derby/iapi/db/Database.java;
477,3492.0,Bug,Closed,Fixed,Replication,Major,J?rgen L?land,2008/03/04 13:19:52 +0100,2008/03/04 13:19:52 +0100,J?rgen L?land,2008/03/05 11:26:02 +0100,0.920949074,0.920949074,When the replication log buffer becomes full  the chunk of log that should be appended is to the buffer is discarded   ,In MasterController#appendLog  log is force-sent to the slave if the replication log buffer becomes full. However  the log chunk that should have been appended is discarded:try { logBuffer.appendLog(greatestInstant  log  logOffset  logLength);} catch (LogBufferFullException lbfe) { try { logShipper.forceFlush(); } catch (IOException ioe) {...}The log chunk must be added after freeing a log buffer by calling forceFlush   ,10.4.1.3,10.4.1.3,0.0,0.0,56.0,1.0,3.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,1,java/engine/org/apache/derby/impl/services/replication/master/MasterController.java;
486,3549.0,Bug,Closed,Fixed,Replication,Major,V.Narayanan,2008/03/16 15:59:11 +0100,2008/03/17 15:06:34 +0100,J?rgen L?land,2008/04/02 11:13:08 +0100,16.80135417,15.83789352,Unable to start slave mode after authentication failure on a previous startSlave attempt   ,Trying a startSlave after an initial startSlave fails due to an authentication failure throws an errorsaying that the database has already been bootedvn@vn-laptop:~/work/workspaces/freshworkspace/slave$ java org.apache.derby.tools.ijij version 10.5ij&gt; connect 'jdbc:derby:mydb;startSlave=true;slaveHost=localhost;slavePort=8001';ERROR 08004: Connection authentication failure occurred. Reason: Invalid authentication..ij&gt; connect 'jdbc:derby:mydb;startSlave=true;user=oystein;password=pass;slaveHost=localhost;slavePort=8001';ERROR XRE09: Cannot start replication slave mode for database 'mydb'. The database has already been booted. ij&gt;   ,10.4.1.3; 10.5.1.1,10.4.1.3; 10.5.1.1,0.0,0.0,55.0,2.0,7.0,2.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,2,java/engine/org/apache/derby/impl/jdbc/EmbedConnection.java;java/testing/org/apache/derbyTesting/functionTests/tests/replicationTests/ReplicationRun_Local_StateTest_part1.java;
488,3558.0,Bug,Closed,Fixed,Test,Major,Mike Matrigali,2008/03/20 01:16:26 +0100,2008/03/21 18:25:22 +0100,Mike Matrigali,2008/03/21 18:27:58 +0100,1.716342593,0.001805556,regression test failure in testDerbyJarAttributeAlpha - Security Exception   ,I am getting 41 errors in this test of the following form  all security exceptions from the management test suite. I can post othersif necessary.2) testDerbyJarAttributeAlpha(org.apache.derbyTesting.functionTests.tests.management.VersionMBeanTest)javax.management.RuntimeMBeanException: java.lang.SecurityException: Access denied (org.apache.derby.security.SystemPermission engine monitor) at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.rethrow(DefaultMBeanServerInterceptor.java:856) at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.rethrowMaybeMBeanException(DefaultMBeanServerInterceptor.java:869) at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getAttribute(DefaultMBeanServerInterceptor.java:670) at com.sun.jmx.mbeanserver.JmxMBeanServer.getAttribute(JmxMBeanServer.java:638) at org.apache.derbyTesting.functionTests.tests.management.MBeanTest$4.run(MBeanTest.java:382) at java.security.AccessController.doPrivileged(AccessController.java:251) at org.apache.derbyTesting.functionTests.tests.management.MBeanTest.getAttribute(MBeanTest.java:379) at org.apache.derbyTesting.functionTests.tests.management.MBeanTest.checkBooleanAttributeValue(MBeanTest.java:431) at org.apache.derbyTesting.functionTests.tests.management.VersionMBeanTest.testDerbyJarAttributeAlpha(VersionMBeanTest.java:120) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:45) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:101) at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22) at junit.extensions.TestSetup$1.protect(TestSetup.java:19) at junit.extensions.TestSetup.run(TestSetup.java:23) at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57) at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22) at junit.extensions.TestSetup$1.protect(TestSetup.java:19) at junit.extensions.TestSetup.run(TestSetup.java:23) at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22) at junit.extensions.TestSetup$1.protect(TestSetup.java:19) at junit.extensions.TestSetup.run(TestSetup.java:23) at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)Caused by: java.lang.SecurityException: Access denied (org.apache.derby.security.SystemPermission engine monitor) at org.apache.derby.iapi.services.info.Version.checkMonitor(Version.java:70) at org.apache.derby.iapi.services.info.Version.isAlpha(Version.java:121) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:45) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) at com.sun.jmx.mbeanserver.StandardMBeanIntrospector.invokeM2(StandardMBeanIntrospector.java:93) at com.sun.jmx.mbeanserver.StandardMBeanIntrospector.invokeM2(StandardMBeanIntrospector.java:27) at com.sun.jmx.mbeanserver.MBeanIntrospector.invokeM(MBeanIntrospector.java:208) at com.sun.jmx.mbeanserver.PerInterface.getAttribute(PerInterface.java:65) at com.sun.jmx.mbeanserver.MBeanSupport.getAttribute(MBeanSupport.java:216) at javax.management.StandardMBean.getAttribute(StandardMBean.java:358) at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getAttribute(DefaultMBeanServerInterceptor.java:666) ... 40 more   ,10.5.1.1,10.5.1.1,0.0,0.0,116.0,1.0,2.0,1.0,0.0,0.0,0.0,1.0,0.0,1.0,1.0,1,java/testing/org/apache/derbyTesting/functionTests/util/derby_tests.policy;
493,3586.0,Improvement,Closed,Fixed,Network Client,Trivial,Kristian Waagan,2008/4/2  0:57:44 +0100,2008/4/2  0:57:44 +0100,Kristian Waagan,2008/4/2  9:31:23 +0100,0.356701389,0.356701389,"Remove am.Connection.reset(LogWriter,ClientBaseDataSource,boolean) and called methods","am.Connection.reset(LogWriter,ClientBaseDataSource,boolean) isn't called and can be removed.",10.2.2.0;?10.3.2.1;10.4.1.3;?10.5.1.1,10.4.1.3;?10.5.1.1,0.0,0.0,39.0,1.0,2.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,2.0,java/client/org/apache/derby/client/net/NetConnection.java;java/client/org/apache/derby/client/am/Connection.java,
498,3613.0,Bug,Closed,Fixed,<;????????????ç´??????<;????????????ç´?????????????????????????????????????????????????????????????????????????????????????????????????????????????????,Major,Artur Ku?,2008/04/11 14:28:30 +0100,2008/04/21 22:47:17 +0100,Bryan Pendleton,2008/04/25 15:09:47 +0100,14.02866898,3.682291667,SELECT DISTINCT field FROM TABLE_NAME GROUP BY field   field2   ,???????ä¼?æ¶??????æº?????å­?,10.3.2.1,10.4.2.0; 10.5.1.1,0.0,0.0,17.0,1.0,18.0,5.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,2,java/engine/org/apache/derby/impl/sql/compile/GroupByList.java;java/testing/org/apache/derbyTesting/functionTests/tests/lang/GroupByTest.java;
