,issue_id,type,status,resolution,component,priority,reporter,created,assigned,assignee,resolved,created.1,assigned.1,summary,description,affected_version,fixed_version,votes,watches,description_words,assingnee_count,comment_count,commenter,Surprising,Dormant,Blocker,Security,Performance,Breakage,commit_count,file_count,files
1,84,Improvement,Closed,Fixed,camel-core,Major,Brian McCallister,2007/08/03 00:41:31 +0100,2008/05/21 18:50:34 +0100,Hadrian Zbarcea,2008/09/25 16:30:09 +0100,419.6587731000001,126.90248840000001,Throw Useful Exception on No TypeConverter Available   ,When there is no type converter available an NPE is thrown that requires tracing through sources to find root of problem   ,1.0.0,1.5.0,0,0,21,1,9,3,0,0,0,0,0.0,0.0,2.0,2.0,camel-core/src/main/java/org/apache/camel/NoTypeConversionAvailableException.java;camel-core/src/main/java/org/apache/camel/processor/ConvertBodyProcessor.java;
2,100,Improvement,Closed,Fixed,camel-activemq,Minor,Aaron Crickenberger,2007/08/13 20:28:46 +0100,,Unassigned,2007/09/04 11:05:01 +0100,21.60850694,,Most recent snapshot requires ActiveMQ   ,This may be moot given the projects' relationship  but it's a recently introduced side effect. Before the most recent snapshot  I was able to use Camel without any ActiveMQ jar's floating around so long as I never tried to use any 'activemq:queue:foo' URI's. Now with the most recent snapshot  the first time I do something that uses AnnotationTypeCoverterLoader  ActiveMQConverter gets loaded  and then causes a NoClassDefFoundError for ActiveMQDestination.   ,1.1.0,1.2.0,0,0,69,0,7,2,0,0,0,0,0.0,1.0,3.0,11.0,tests/camel-partial-classpath-test/pom.xml;tests/camel-partial-classpath-test/src/test/java/org/apache/camel/tests/partialclasspath/RouteTest.java;tests/camel-partial-classpath-test/src/test/resources/log4j.properties;tests/pom.xml;tests/camel-partial-classpath-test/src/test/java/org/apache/camel/tests/partialclasspath/MyBean.java;tests/camel-partial-classpath-test/src/test/java/org/apache/camel/tests/partialclasspath/MyConverter.java;tests/camel-partial-classpath-test/src/test/java/org/apache/camel/tests/partialclasspath/RouteTest.java;tests/camel-partial-classpath-test/src/test/resources/META-INF/services/org/apache/camel/TypeConverter;camel-core/src/main/java/org/apache/camel/impl/DefaultComponentResolver.java;camel-core/src/main/java/org/apache/camel/impl/converter/AnnotationTypeConverterLoader.java;tests/camel-partial-classpath-test/src/test/resources/log4j.properties;
4,132,Improvement,Closed,Fixed,camel-http,Major,james strachan,2007/08/31 12:12:02 +0100,,Unassigned,2007/08/31 12:43:21 +0100,0.021747685,,enable polling via the http component   ,   ,1.1.0,1.2.0,0,0,1,0,1,1,1,0,0,0,0.0,0.0,1.0,4.0,components/camel-http/src/main/java/org/apache/camel/component/http/HttpComponent.java;components/camel-http/src/main/java/org/apache/camel/component/http/HttpEndpoint.java;components/camel-http/src/main/java/org/apache/camel/component/http/HttpPollingConsumer.java;components/camel-http/src/test/java/org/apache/camel/component/http/HttpPollingGetTest.java;
5,143,Improvement,Closed,Fixed,camel-core,Major,Dejan Predovic,2007/09/11 10:56:38 +0100,,Unassigned,2007/10/12 10:55:16 +0100,30.99905093,,XPath namespaces configuration not possible through xml   ,Xpath xml element offers no way to define namespace mappings.   ,1.1.0,1.3.0,0,0,10,0,1,1,1,0,0,0,0.0,0.0,2.0,12.0,camel-core/src/main/java/org/apache/camel/builder/xml/XPathBuilder.java;camel-core/src/main/java/org/apache/camel/model/language/ElementAwareExpression.java;camel-core/src/main/java/org/apache/camel/model/language/XPathExpression.java;camel-core/src/main/java/org/apache/camel/spi/ElementAware.java;camel-core/src/test/java/org/apache/camel/builder/xml/XPathWithNamespacesFromDomTest.java;components/camel-spring/src/main/java/org/apache/camel/spring/handler/CamelNamespaceHandler.java;components/camel-spring/src/test/java/org/apache/camel/spring/processor/SpringXPathFilterWithNamespaceTest.java;components/camel-spring/src/test/resources/org/apache/camel/spring/processor/xpathFilterWithNamespace.xml;camel-core/src/main/java/org/apache/camel/model/language/ExpressionType.java;camel-core/src/main/java/org/apache/camel/model/language/XPathExpression.java;camel-core/src/test/java/org/apache/camel/processor/XPathFilterTest.java;components/camel-spring/src/main/java/org/apache/camel/spring/handler/CamelNamespaceHandler.java;
6,161,Bug,Closed,Fixed,,Trivial,Bozhong Lin,2007/09/28 05:04:46 +0100,2007/09/28 05:04:46 +0100,james strachan,2007/10/01 16:17:52 +0100,3.467430556,3.467430556,URL link broken in org.apache.camel.Processor API doc   ,'Message Transformer' link is broken.   ,1.1.0,1.2.0,0,0,5,1,1,1,0,0,0,0,0.0,0.0,1.0,1.0,camel-core/src/main/java/org/apache/camel/Processor.java;
7,166,Bug,Closed,Fixed,camel-core,Blocker,Bozhong Lin,2007/10/09 06:24:42 +0100,,Unassigned,2007/10/10 18:40:18 +0100,1.5108333330000001,,org.apache.camel.processor.UnitOfWorkWithAsyncFlowTest failure   ,Running org.apache.camel.processor.UnitOfWorkWithAsyncFlowTestTests run: 3  Failures: 1  Errors: 0  Skipped: 0  Time elapsed: 20.345 sec &lt;&lt;&lt; FAILURE!This prevents developer from building camel under Linux platform. Thanks!   ,1.1.0,1.2.0,0,0,25,0,3,2,0,0,0,0,0.0,0.0,2.0,3.0,camel-core/pom.xml;camel-core/pom.xml;camel-core/src/test/java/org/apache/camel/processor/UnitOfWorkTest.java;
8,199,Improvement,Closed,Fixed,camel-core,Minor,Gert Vanthienen,2007/11/02 08:11:47 +0100,,Unassigned,2007/11/16 18:38:25 +0100,14.43516204,,New converter : Node -> Source   ,Currently  there is no converter from Node -&gt; Source.It is required when using Camel's splitter() functionality inside ServiceMix:from('jbi:service:urn:eu:java:smx:fleetintegrator:camel') .splitter(xpath('/traces/trace')) .to('jbi:endpoint:urn:eu:java:smx:fleetintegrator:jms:mq');   ,1.2.0,1.3.0,0,0,30,0,1,1,0,0,0,0,0.0,0.0,1.0,2.0,camel-core/src/main/java/org/apache/camel/converter/jaxp/XmlConverter.java;camel-core/src/test/java/org/apache/camel/converter/JaxpTest.java;
9,210,Bug,Closed,Fixed,camel-core,Major,Roman Kalukiewicz,2007/11/06 12:46:53 +0100,2007/11/06 12:46:53 +0100,Hadrian Zbarcea,2007/11/14 13:16:01 +0100,8.020231481,8.020231481,exception clause doesn't proceed with pipeline   ,Problem is very similar to CAMEL-191 but this time with exception clause.As exceptions are not cleared pipeline doesn't proceed.   ,1.3.0,1.3.0,0,0,29,1,4,3,1,0,0,0,0.0,0.0,2.0,5.0,camel-core/src/main/java/org/apache/camel/processor/Pipeline.java;camel-core/src/test/java/org/apache/camel/processor/PipelineTest.java;camel-core/src/main/java/org/apache/camel/processor/DeadLetterChannel.java;camel-core/src/main/java/org/apache/camel/util/ExchangeHelper.java;camel-core/src/test/java/org/apache/camel/issues/ExceptionTest.java;
10,214,Bug,Closed,Fixed,,Major,james strachan,2007/11/13 13:20:42 +0100,2007/11/13 13:20:42 +0100,Hadrian Zbarcea,2008/03/31 22:26:54 +0100,139.37930559999998,139.37930559999998,the 1.2.0 release didnt' seem to include the javadocs or doc directory (or manual)!   ,I wondered if this was due to your machine Hiram having some dodgy maven plugin around or something?   ,1.2.0,1.3.0,0,0,18,1,4,3,1,0,0,0,0.0,0.0,0.0,0.0,
12,232,Bug,Closed,Fixed,camel-core,Major,Hadrian Zbarcea,2007/11/18 16:42:14 +0100,2007/11/18 16:42:14 +0100,Hadrian Zbarcea,2007/11/19 12:43:27 +0100,0.8341782409999999,0.8341782409999999,Fix performance counters   ,   ,1.2.0,1.3.0,0,0,1,1,1,1,1,0,0,0,0.0,0.0,2.0,17.0,components/camel-osgi/src/main/java/org/apache/camel/osgi/OsgiComponentResolver.java;camel-core/src/main/java/org/apache/camel/Route.java;camel-core/src/main/java/org/apache/camel/impl/DefaultCamelContext.java;camel-core/src/main/java/org/apache/camel/impl/DefaultLifecycleStrategy.java;camel-core/src/main/java/org/apache/camel/impl/RouteContext.java;camel-core/src/main/java/org/apache/camel/management/CamelNamingStrategy.java;camel-core/src/main/java/org/apache/camel/management/InstrumentationLifecycleStrategy.java;camel-core/src/main/java/org/apache/camel/management/ManagedEndpoint.java;camel-core/src/main/java/org/apache/camel/management/ManagedRoute.java;camel-core/src/main/java/org/apache/camel/management/ObjectNameEncoder.java;camel-core/src/main/java/org/apache/camel/model/FromType.java;camel-core/src/main/java/org/apache/camel/model/ResequencerType.java;camel-core/src/main/java/org/apache/camel/model/RouteType.java;camel-core/src/main/java/org/apache/camel/model/RoutesType.java;camel-core/src/main/java/org/apache/camel/spi/LifecycleStrategy.java;camel-core/src/test/java/org/apache/camel/management/JmxInstrumentationUsingDefaultsTest.java;examples/camel-example-spring/src/main/resources/META-INF/spring/camel-context.xml;
13,237,Improvement,Closed,Fixed,camel-core,Major,Hadrian Zbarcea,2007/11/19 21:25:35 +0100,2007/11/19 21:25:35 +0100,Hadrian Zbarcea,2007/11/19 21:37:04 +0100,0.007974537,0.007974537,Upgrade geronimo-specs version to 1.1   ,from 1.0   ,1.2.0,1.3.0,0,0,2,1,1,1,0,0,0,0,0.0,0.0,1.0,1.0,pom.xml;
16,277,Bug,Closed,Fixed,camel-core,Major,J?r?me Delagnes,2007/12/26 14:16:52 +0100,2007/12/26 14:16:52 +0100,Hadrian Zbarcea,2008/01/18 13:49:46 +0100,22.98118056,22.98118056,[Spring integration] TheadType is missing in org/apache/camel/model/jaxb.index   ,TheadType is missing in org/apache/camel/model/jaxb.index =&gt; JAXB don't know how to unmarshall thread.Bug description found in Camel Users forum : http://www.nabble.com/Processor-thread-pool-td13212513s22882.html   ,1.2.0,1.3.0,0,0,24,1,3,3,0,0,0,0,0.0,0.0,1.0,1.0,camel-core/src/main/resources/org/apache/camel/model/jaxb.index;
17,278,Bug,Closed,Fixed,camel-spring,Major,J?r?me Delagnes,2007/12/26 14:30:52 +0100,,Unassigned,2008/01/18 13:53:28 +0100,22.97402778,,[Spring integration] Bad urls in META-INF/spring.schemas   ,http/://activemq.apache.org/camel/schema/spring/camel-spring-1.1.xsd becomes http/://activemq.apache.org/camel/schema/spring/camel-spring-1.1.0.xsdhttp/://activemq.apache.org/camel/schema/spring/camel-spring-1.2.xsd becomes http/://activemq.apache.org/camel/schema/spring/camel-spring-1.2.0.xsdThere's no camel-spring-1.1.xsd and camel-spring-1.2.xsd under http://activemq.apache.org/camel/schema/spring/   ,1.2.0,1.3.0,0,0,14,0,2,2,0,0,0,0,0.0,0.0,1.0,1.0,components/camel-spring/src/main/resources/META-INF/spring.schemas;
23,304,Bug,Closed,Fixed,camel-http,Major,Roman Kalukiewicz,2008/01/22 01:39:44 +0100,2008/01/22 01:39:44 +0100,Roman Kalukiewicz,2008/01/22 01:48:16 +0100,0.005925926,0.005925926,Multithreaded HTTP invocations doesn't work   ,Description of the bug:http://www.nabble.com/Multithreaded-http-endpoint-to13646722s22882.html#a13646722   ,1.3.0,1.3.0,0,0,7,1,2,2,0,0,0,0,0.0,0.0,2.0,5.0,components/camel-http/src/main/java/org/apache/camel/component/http/HttpComponent.java;components/camel-http/src/main/java/org/apache/camel/component/http/HttpEndpoint.java;components/camel-http/src/test/java/org/apache/camel/component/http/MultiThreadedHttpGetTest.java;components/camel-jetty/src/main/java/org/apache/camel/component/jetty/JettyHttpComponent.java;components/camel-jetty/src/main/java/org/apache/camel/component/jetty/JettyHttpEndpoint.java;
24,320,Bug,Closed,Fixed,camel-core,Major,Aaron Crickenberger,2008/02/05 14:10:17 +0100,2008/02/05 14:10:17 +0100,Hadrian Zbarcea,2008/02/06 21:56:00 +0100,1.3234143520000001,1.3234143520000001,DefaultParameterMappingStrategy doesn't load its defaults   ,This is preventing BeanProcessor from using bean methods with a Message parameter  or bean methods not named 'process' that have an Exchange as their parameter. For example  to map to a Message the it tries using the ParameterExpression bodyAs(Message.class) instead of inmessageExpression().   ,1.2.0,1.3.0,0,0,42,1,2,2,0,0,0,0,0.0,0.0,0.0,0.0,
25,323,Bug,Closed,Fixed,,Trivial,Claus Ibsen,2008/02/10 11:21:45 +0100,,Unassigned,2008/02/16 18:47:02 +0100,6.309224537,,spring-2.5.1.jar is twice in the camel distro   ,I downloaded the latest snapshot apache-camel-1.3-20080210.022044-67.zip fromhttp://people.apache.org/repo/m2-snapshot-repository/org/apache/camel/apache-camel/1.3-SNAPSHOT/The .zip file contains spring-2.5.1.jar twice/camel/lib/camel/lib/optionalIs Spring both mandatory and optional?And btw it includes an old version of commons-logging-1.0.4.jar. v1.1 of commons logging is out.   ,1.3.0,1.3.0,0,0,34,0,2,2,0,0,0,0,0.0,0.0,0.0,0.0,
27,335,Improvement,Closed,Fixed,camel-mail,Major,Lars Heinemann,2008/02/15 14:09:12 +0100,2008/04/22 05:46:20 +0100,Claus Ibsen,2008/05/10 13:45:34 +0100,84.98358796,18.33280093,Mail component is missing some configuration possibilities   ,It should be possible to configure the behaviour of the mail component. see thread: http://www.nabble.com/Problem-with-Camel-Mail-Component-in-Route-td15497818s12049.html#a15497818   ,1.2.0; 1.3.0,1.4.0,0,0,18,1,20,3,0,0,0,0,0.0,0.0,16.0,70.0,components/camel-mail/src/main/java/org/apache/camel/component/mail/MailBinding.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailConfiguration.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailEndpoint.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailUtils.java;components/camel-mail/src/main/resources/META-INF/services/org/apache/camel/component/imaps;components/camel-mail/src/test/java/org/apache/camel/component/mail/MailComponentTest.java;components/camel-mail/pom.xml;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailConfiguration.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailConsumer.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailUtils.java;components/camel-mail/pom.xml;components/camel-mail/src/test/java/org/apache/camel/component/mail/MailComponentTest.java;components/camel-mail/src/test/java/org/apache/camel/component/mail/MailMessageTest.java;components/camel-mail/src/test/java/org/apache/camel/component/mail/MailRouteTest.java;components/camel-mail/src/test/java/org/apache/camel/component/mail/MimeMessageConsumeTest.java;components/camel-mail/src/test/java/org/apache/camel/component/mail/MultipleDestinationConsumeTest.java;components/camel-mail/src/test/resources/log4j.properties;components/camel-mail/src/test/java/org/apache/camel/component/mail/MailSubjectTest.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailConfiguration.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailConsumer.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/JavaMailConnection.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailBinding.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailConfiguration.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailConsumer.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailEndpoint.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailMessage.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailProducer.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailUtils.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MessageHeaderAccessException.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MessageHeaderNamesAccessException.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/RuntimeMailException.java;components/camel-mail/src/test/java/org/apache/camel/component/mail/InvalidConfigurationTest.java;components/camel-mail/src/test/java/org/apache/camel/component/mail/MailProcessOnlyUnseenMessagesTest.java;components/camel-mail/src/test/java/org/apache/camel/component/mail/MailRouteTest.java;components/camel-mail/src/test/java/org/apache/camel/component/mail/MailSubjectTest.java;components/camel-mail/src/test/java/org/apache/camel/component/mail/MimeMessageConsumeTest.java;components/camel-mail/src/test/java/org/apache/camel/component/mail/MultipleDestinationConsumeTest.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailConfiguration.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailConsumer.java;components/camel-mail/src/test/java/org/apache/camel/component/mail/MailComponentTest.java;components/camel-mail/src/test/java/org/apache/camel/component/mail/MailFetchSizeTest.java;components/camel-mail/src/test/java/org/apache/camel/component/mail/MailFetchSizeZeroTest.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailConverters.java;components/camel-mail/src/test/java/org/apache/camel/component/mail/MailProcessOnlyUnseenMessagesTest.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailConfiguration.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailConsumer.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailMessage.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailUtils.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailConsumer.java;components/camel-mail/src/test/java/org/apache/camel/component/mail/MailProcessOnlyUnseenMessagesTest.java;components/camel-mail/src/test/java/org/apache/camel/component/mail/MimeMessageConsumeTest.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailConfiguration.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailBinding.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailMessage.java;components/camel-mail/src/test/data/logo.jpeg;components/camel-mail/src/test/java/org/apache/camel/component/mail/MailAttachmentTest.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailBinding.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailConfiguration.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailEndpoint.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailProducer.java;components/camel-mail/src/test/java/org/apache/camel/component/mail/MailComponentTest.java;components/camel-mail/src/test/java/org/apache/camel/component/mail/MailSubjectTest.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/JavaMailConnection.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MessageHeaderAccessException.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MessageHeaderNamesAccessException.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/RuntimeMailException.java;components/camel-mail/src/test/java/org/apache/camel/component/mail/InvalidConfigurationTest.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailConfiguration.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailConsumer.java;components/camel-mail/src/test/java/org/apache/camel/component/mail/MailComponentTest.java;
33,371,Improvement,Closed,Fixed,camel-mina,Minor,Claus Ibsen,2008/03/07 06:11:45 +0100,,Unassigned,2008/03/09 11:19:44 +0100,2.213877315,,Mina Producer should have configurable timeout   ,Currently the camel mina producer (MinaProducer) defaults to have a 10 sec timeout.This is currently not possible to configured eg from the URL parameters etc.Also we should documented on the wiki that 10 sec. is default.   ,1.3.0,1.3.0,0,0,36,0,5,2,0,0,1,0,0.0,0.0,1.0,5.0,components/camel-mina/src/main/java/org/apache/camel/component/mina/MinaComponent.java;components/camel-mina/src/main/java/org/apache/camel/component/mina/MinaEndpoint.java;components/camel-mina/src/main/java/org/apache/camel/component/mina/MinaProducer.java;components/camel-mina/src/test/java/org/apache/camel/component/mina/MinaComponentTest.java;components/camel-mina/src/test/java/org/apache/camel/component/mina/MinaExchangeTimeOutTest.java;
35,375,Improvement,Closed,Fixed,camel-mina,Minor,Claus Ibsen,2008/03/08 14:41:52 +0100,,Unassigned,2008/03/09 11:19:09 +0100,0.859224537,,camel-mina improvements   ,This ticket holds reference to the various camel-mina improvments and bugfixes lately.   ,1.3.0,1.3.0,0,0,12,0,4,1,0,0,0,0,0.0,0.0,1.0,8.0,components/camel-mina/src/main/java/org/apache/camel/component/mina/MinaComponent.java;components/camel-mina/src/main/java/org/apache/camel/component/mina/MinaConsumer.java;components/camel-mina/src/main/java/org/apache/camel/component/mina/MinaEndpoint.java;components/camel-mina/src/main/java/org/apache/camel/component/mina/MinaExchange.java;components/camel-mina/src/main/java/org/apache/camel/component/mina/MinaProducer.java;components/camel-mina/src/test/java/org/apache/camel/component/mina/MinaExchangeTest.java;components/camel-mina/src/test/java/org/apache/camel/component/mina/MinaTcpWithIoOutProcessorExceptionTest.java;components/camel-mina/src/test/java/org/apache/camel/component/mina/MinaUdpWithInOutUsingPlainSocketTest.java;
36,384,Bug,Closed,Fixed,camel-cxf,Major,Marc Giger,2008/03/12 19:48:11 +0100,2008/03/14 02:34:56 +0100,Willem Jiang,2008/03/14 03:21:07 +0100,1.314537037,0.032071759,Support for a full customized soap-fault incl. fault-code and detail   ,Don't wrap a Fault in a Fault.   ,1.3.0,1.3.0,0,0,7,1,2,2,0,0,0,0,0.0,0.0,1.0,5.0,components/camel-cxf/src/main/java/org/apache/camel/component/cxf/CamelInvoker.java;components/camel-cxf/src/main/java/org/apache/camel/component/cxf/interceptors/PayloadContentRedirectInterceptor.java;components/camel-cxf/src/main/java/org/apache/camel/component/cxf/interceptors/RawMessageContentRedirectInterceptor.java;components/camel-cxf/src/test/java/org/apache/camel/component/cxf/CxfCustmerizedExceptionTest.java;components/camel-cxf/src/test/java/org/apache/camel/component/cxf/CxfPayLoadCustomizedExceptionTest.java;
38,394,Improvement,Closed,Fixed,camel-mina,Minor,Claus Ibsen,2008/03/24 09:34:42 +0100,2008/03/25 20:40:11 +0100,Claus Ibsen,2008/03/26 06:15:08 +0100,1.8614120369999998,0.399270833,Improve logging for camel-mina   ,Currently camel-mina does not log using similar log classnames for a MinaProducer and MinaConsumer. This can be a bit misleading in the log files.MinaConsumer uses an anonymous inner class to do the IoHandler where as MinaProducer does not. This renders the loglines such asMinaConsumer$1 - XXXMinaProducer$RecieveHandler - XXXMinaConsumer should use a non anonymous inner classes so logging is the same:MinaConsumer$RecieveHandler - XXXMinaProducer$ResponseHandler - XXX   ,1.3.0,1.3.0,0,0,78,1,5,1,0,0,0,0,0.0,0.0,1.0,14.0,components/camel-mina/pom.xml;components/camel-mina/src/main/java/org/apache/camel/component/mina/MinaComponent.java;components/camel-mina/src/main/java/org/apache/camel/component/mina/MinaConsumer.java;components/camel-mina/src/main/java/org/apache/camel/component/mina/MinaEndpoint.java;components/camel-mina/src/main/java/org/apache/camel/component/mina/MinaHelper.java;components/camel-mina/src/main/java/org/apache/camel/component/mina/MinaProducer.java;components/camel-mina/src/test/java/org/apache/camel/component/mina/MinaLoggerOptionTest.java;components/camel-mina/src/test/java/org/apache/camel/component/mina/MinaProducerShutdownMockTest.java;components/camel-mina/src/test/java/org/apache/camel/component/mina/MinaProducerShutdownTest.java;components/camel-mina/src/test/java/org/apache/camel/component/mina/MinaTcpWithInOutTest.java;components/camel-mina/src/test/java/org/apache/camel/component/mina/MinaTcpWithInOutUsingPlainSocketTest.java;components/camel-mina/src/test/java/org/apache/camel/component/mina/MinaTransferExchangeOptionTest.java;components/camel-mina/src/test/java/org/apache/camel/component/mina/ReverseProtocolHandler.java;components/camel-mina/src/test/java/org/apache/camel/component/mina/ReverserServer.java;
40,404,Bug,Closed,Fixed,,Trivial,Claus Ibsen,2008/03/28 06:51:11 +0100,2008/03/28 06:51:11 +0100,Claus Ibsen,2008/03/30 18:15:46 +0100,2.475405093,2.475405093,Javadoc warnings   ,Get the javadoc warnings reported by the javadoc generator fixed.   ,1.3.0,1.3.0,0,0,10,1,3,1,0,0,0,0,0.0,0.0,5.0,59.0,components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsBinding.java;components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsConfiguration.java;components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsExchange.java;components/camel-jms/src/main/java/org/apache/camel/component/jms/requestor/FailedToProcessResponse.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailBinding.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailConsumer.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailExchange.java;components/camel-rmi/src/main/java/org/apache/camel/component/rmi/RmiConsumer.java;components/camel-script/src/main/java/org/apache/camel/builder/script/ScriptBuilder.java;components/camel-http/src/main/java/org/apache/camel/component/http/HttpEndpoint.java;components/camel-spring/src/main/java/org/apache/camel/spring/CamelBeanPostProcessor.java;components/camel-spring/src/main/java/org/apache/camel/spring/SpringRouteBuilder.java;components/camel-xmpp/src/main/java/org/apache/camel/component/xmpp/XmppBinding.java;components/camel-xmpp/src/main/java/org/apache/camel/component/xmpp/XmppConsumer.java;components/camel-xmpp/src/main/java/org/apache/camel/component/xmpp/XmppExchange.java;camel-core/src/main/java/org/apache/camel/AsyncCallback.java;camel-core/src/main/java/org/apache/camel/AsyncProcessor.java;camel-core/src/main/java/org/apache/camel/CamelContext.java;camel-core/src/main/java/org/apache/camel/CamelExchangeException.java;camel-core/src/main/java/org/apache/camel/CamelTemplate.java;camel-core/src/main/java/org/apache/camel/Exchange.java;camel-core/src/main/java/org/apache/camel/Message.java;camel-core/src/main/java/org/apache/camel/NoSuchEndpointException.java;camel-core/src/main/java/org/apache/camel/ProducerTemplate.java;camel-core/src/main/java/org/apache/camel/Route.java;camel-core/src/main/java/org/apache/camel/RuntimeExchangeException.java;camel-core/src/main/java/org/apache/camel/builder/RouteBuilder.java;camel-core/src/main/java/org/apache/camel/component/jmx/JMXMessage.java;camel-core/src/main/java/org/apache/camel/converter/jaxp/BytesSource.java;camel-core/src/main/java/org/apache/camel/converter/jaxp/StringSource.java;camel-core/src/main/java/org/apache/camel/converter/jaxp/XmlConverter.java;camel-core/src/main/java/org/apache/camel/impl/DefaultCamelContext.java;camel-core/src/main/java/org/apache/camel/impl/DefaultConsumer.java;camel-core/src/main/java/org/apache/camel/impl/LoggingExceptionHandler.java;camel-core/src/main/java/org/apache/camel/impl/MessageSupport.java;camel-core/src/main/java/org/apache/camel/impl/converter/AnnotationTypeConverterLoader.java;camel-core/src/main/java/org/apache/camel/management/CamelNamingStrategy.java;camel-core/src/main/java/org/apache/camel/model/ProcessorType.java;camel-core/src/main/java/org/apache/camel/model/RouteContainer.java;camel-core/src/main/java/org/apache/camel/model/config/StreamResequencerConfig.java;camel-core/src/main/java/org/apache/camel/model/language/ExpressionType.java;camel-core/src/main/java/org/apache/camel/processor/Aggregator.java;camel-core/src/main/java/org/apache/camel/processor/ErrorHandlerSupport.java;camel-core/src/main/java/org/apache/camel/processor/loadbalancer/TopicLoadBalancer.java;camel-core/src/main/java/org/apache/camel/spi/LifecycleStrategy.java;camel-core/src/main/java/org/apache/camel/spi/TypeConverterAware.java;camel-core/src/main/java/org/apache/camel/util/CamelContextHelper.java;camel-core/src/main/java/org/apache/camel/util/DefaultTimeoutMap.java;camel-core/src/main/java/org/apache/camel/util/ExchangeHelper.java;camel-core/src/main/java/org/apache/camel/util/ObjectHelper.java;camel-core/src/main/java/org/apache/camel/util/ProducerCache.java;camel-core/src/main/java/org/apache/camel/util/jndi/JndiContext.java;camel-core/src/main/java/org/apache/camel/view/NodeData.java;components/camel-cxf/src/main/java/org/apache/camel/component/cxf/CamelInvoker.java;components/camel-cxf/src/main/java/org/apache/camel/component/cxf/MessageInvoker.java;components/camel-cxf/src/main/java/org/apache/camel/component/cxf/interceptors/AbstractMessageInInterceptor.java;components/camel-cxf/src/main/java/org/apache/camel/component/cxf/invoker/InvokingContext.java;components/camel-cxf/src/main/java/org/apache/camel/component/cxf/transport/CamelDestination.java;components/camel-cxf/src/test/java/org/apache/camel/component/cxf/transport/CamelDestinationTest.java;
45,448,Improvement,Closed,Fixed,camel-jpa,Minor,Claus Ibsen,2008/04/07 19:52:18 +0100,2008/04/07 19:52:18 +0100,Claus Ibsen,2008/04/12 12:51:51 +0100,4.708020833,4.708020833,Upgraded to OpenJPA 1.0.2   ,OpenJPA in release 1.0 and onwards requires a change in the ant build in the pom.xmlIt now requires a persistance.xml file to use.   ,1.3.0,1.4.0,0,0,23,1,3,1,0,0,0,0,0.0,0.0,1.0,3.0,components/camel-jpa/pom.xml;components/camel-jpa/src/main/resources/META-INF/persistence.xml;pom.xml;
49,499,Bug,Closed,Fixed,camel-core,Major,Jonathan Anstey,2008/05/08 18:24:17 +0100,2008/05/08 18:24:17 +0100,Jonathan Anstey,2008/05/09 06:09:04 +0100,0.48943287,0.48943287,camel-core does not compile on HP-UX   ,camel-core/src/main/java/org/apache/camel/model/ProcessorType.java:&#91;871 12&#93; inconvertible types found : org.apache.camel.model.ProcessorType&lt;Type&gt; required: org.apache.camel.model.InterceptTypecamel-core/src/main/java/org/apache/camel/model/ProcessorType.java:&#91;872 39&#93; inconvertible types found : org.apache.camel.model.ProcessorType&lt;Type&gt; required: org.apache.camel.model.InterceptTypecamel-core/src/main/java/org/apache/camel/model/ProcessorType.java:&#91;884 12&#93; inconvertible types found : org.apache.camel.model.ProcessorType&lt;Type&gt; required: org.apache.camel.model.InterceptTypecamel-core/src/main/java/org/apache/camel/model/ProcessorType.java:&#91;885 38&#93; inconvertible types found : org.apache.camel.model.ProcessorType&lt;Type&gt; required: org.apache.camel.model.InterceptType   ,1.3.0,1.4.0,0,0,34,1,3,2,0,0,0,0,0.0,0.0,1.0,1.0,camel-core/src/main/java/org/apache/camel/model/ProcessorType.java;
50,505,Improvement,Closed,Fixed,,Major,james strachan,2008/05/12 16:16:46 +0100,2009/01/20 19:36:04 +0100,Claus Ibsen,2009/02/12 15:35:58 +0100,275.9716667,22.83326389,make it easier to create Endpoint instances nicely via Spring XML   ,right now its a bit tricky creating Endpoint instances in a spring XML using the &lt;bean&gt;&lt;property&gt; mechanism.It'd be nice to be able to configure them more easily as...&lt;bean id='foo' class='org.apache.camel.component.file.FileEndpoint'&gt; &lt;property name='foo' value='bar'/&gt; ...type stuff and have folks Spring IDE's smart complete stuff etc   ,1.3.0,2.0-M1,0,0,55,1,10,2,0,0,1,0,0.0,0.0,18.0,148.0,components/camel-atom/src/main/java/org/apache/camel/component/atom/AtomEndpoint.java;components/camel-atom/src/main/java/org/apache/camel/component/feed/FeedEndpoint.java;components/camel-atom/src/test/java/org/apache/camel/component/atom/AtomEndpointTest.java;components/camel-rss/src/main/java/org/apache/camel/component/rss/AggregateRssFeedCollection.java;components/camel-rss/src/main/java/org/apache/camel/component/rss/AggregateRssFeedStrategy.java;components/camel-rss/src/main/java/org/apache/camel/component/rss/RssComponent.java;components/camel-rss/src/main/java/org/apache/camel/component/rss/RssDateComparator.java;components/camel-rss/src/main/java/org/apache/camel/component/rss/RssEndpoint.java;components/camel-rss/src/main/java/org/apache/camel/component/rss/RssEntryPollingConsumer.java;components/camel-rss/src/main/java/org/apache/camel/component/rss/RssPollingConsumer.java;components/camel-rss/src/main/java/org/apache/camel/component/rss/UpdatedDateFilter.java;components/camel-rss/src/main/java/org/apache/camel/dataformat/rss/RssDataFormat.java;components/camel-rss/src/test/java/org/apache/camel/component/rss/RssEndpointTest.java;components/camel-mina/pom.xml;components/camel-mina/src/main/java/org/apache/camel/component/mina/MinaComponent.java;components/camel-mina/src/main/java/org/apache/camel/component/mina/MinaConfiguration.java;components/camel-mina/src/main/java/org/apache/camel/component/mina/MinaConsumer.java;components/camel-mina/src/main/java/org/apache/camel/component/mina/MinaEndpoint.java;components/camel-mina/src/main/java/org/apache/camel/component/mina/MinaPayloadHelper.java;components/camel-mina/src/main/java/org/apache/camel/component/mina/MinaProducer.java;components/camel-mina/src/test/java/org/apache/camel/component/mina/MinaUdpUsingTemplateTest.java;components/camel-mina/src/test/java/org/apache/camel/component/mina/SpringMinaEndpointTest.java;components/camel-mina/src/test/resources/org/apache/camel/component/mina/SpringMinaEndpointTest-context.xml;components/camel-freemarker/src/main/java/org/apache/camel/component/freemarker/FreemarkerComponent.java;components/camel-freemarker/src/main/java/org/apache/camel/component/freemarker/FreemarkerEndpoint.java;components/camel-freemarker/src/test/java/org/apache/camel/component/freemarker/FreemarkerEndpointTest.java;components/camel-spring/src/main/java/org/apache/camel/component/ResourceBasedComponent.java;components/camel-spring/src/main/java/org/apache/camel/component/ResourceBasedEndpoint.java;components/camel-velocity/src/main/java/org/apache/camel/component/velocity/VelocityComponent.java;components/camel-velocity/src/main/java/org/apache/camel/component/velocity/VelocityEndpoint.java;components/camel-velocity/src/test/java/org/apache/camel/component/velocity/VelocityEndpointTest.java;components/camel-ftp/src/main/java/org/apache/camel/component/file/remote/RemoteFileEndpoint.java;tests/camel-itest/src/test/java/org/apache/camel/itest/ftp/SpringFtpEndpointTest.java;tests/camel-itest/src/test/resources/org/apache/camel/itest/ftp/SpringFtpEndpointTest-context.xml;camel-core/src/main/java/org/apache/camel/Endpoint.java;camel-core/src/main/java/org/apache/camel/component/bean/CamelInvocationHandler.java;camel-core/src/main/java/org/apache/camel/component/dataset/DataSetEndpoint.java;camel-core/src/main/java/org/apache/camel/component/direct/DirectEndpoint.java;camel-core/src/main/java/org/apache/camel/component/file/FileEndpoint.java;camel-core/src/main/java/org/apache/camel/component/jmx/JMXEndpoint.java;camel-core/src/main/java/org/apache/camel/component/list/ListEndpoint.java;camel-core/src/main/java/org/apache/camel/component/mock/MockEndpoint.java;camel-core/src/main/java/org/apache/camel/component/seda/SedaEndpoint.java;camel-core/src/main/java/org/apache/camel/component/timer/TimerEndpoint.java;camel-core/src/main/java/org/apache/camel/impl/DefaultEndpoint.java;camel-core/src/main/java/org/apache/camel/impl/DefaultPollingEndpoint.java;camel-core/src/main/java/org/apache/camel/impl/ProcessorEndpoint.java;camel-core/src/main/java/org/apache/camel/impl/ScheduledPollEndpoint.java;camel-core/src/main/java/org/apache/camel/management/CamelNamingStrategy.java;camel-core/src/test/java/org/apache/camel/impl/ProducerTest.java;components/camel-atom/src/main/java/org/apache/camel/component/atom/AtomEndpoint.java;components/camel-cxf/src/main/java/org/apache/camel/component/cxf/CxfEndpoint.java;components/camel-cxf/src/main/java/org/apache/camel/component/cxf/CxfSoapEndpoint.java;components/camel-ftp/src/main/java/org/apache/camel/component/file/remote/FtpEndpoint.java;components/camel-ftp/src/main/java/org/apache/camel/component/file/remote/RemoteFileEndpoint.java;components/camel-ftp/src/main/java/org/apache/camel/component/file/remote/SftpEndpoint.java;components/camel-http/src/main/java/org/apache/camel/component/http/HttpExchange.java;components/camel-ibatis/src/main/java/org/apache/camel/component/ibatis/IBatisEndpoint.java;components/camel-irc/src/main/java/org/apache/camel/component/irc/IrcEndpoint.java;components/camel-jcr/src/main/java/org/apache/camel/component/jcr/JcrEndpoint.java;components/camel-jdbc/src/main/java/org/apache/camel/component/jdbc/JdbcEndpoint.java;components/camel-jdbc/src/main/java/org/apache/camel/component/jdbc/JdbcProducer.java;components/camel-jhc/src/main/java/org/apache/camel/component/jhc/JhcEndpoint.java;components/camel-jms/src/main/java/org/apache/camel/component/jms/EndpointMessageListener.java;components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsEndpoint.java;components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsQueueEndpoint.java;components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsTemporaryQueueEndpoint.java;components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsTemporaryTopicEndpoint.java;components/camel-jpa/src/main/java/org/apache/camel/component/jpa/JpaEndpoint.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailEndpoint.java;components/camel-mina/src/main/java/org/apache/camel/component/mina/MinaEndpoint.java;components/camel-quartz/src/main/java/org/apache/camel/component/quartz/QuartzEndpoint.java;components/camel-rmi/src/main/java/org/apache/camel/component/rmi/RmiEndpoint.java;components/camel-rmi/src/main/java/org/apache/camel/component/rmi/RmiProducer.java;components/camel-spring-integration/src/main/java/org/apache/camel/component/spring/integration/SpringIntegrationConsumer.java;components/camel-spring-integration/src/main/java/org/apache/camel/component/spring/integration/SpringIntegrationEndpoint.java;components/camel-spring-integration/src/main/java/org/apache/camel/component/spring/integration/SpringIntegrationProducer.java;components/camel-spring/src/main/java/org/apache/camel/component/ResourceBasedEndpoint.java;components/camel-spring/src/main/java/org/apache/camel/component/event/EventEndpoint.java;components/camel-spring/src/main/java/org/apache/camel/component/test/TestEndpoint.java;components/camel-spring/src/main/java/org/apache/camel/spring/SpringCamelContext.java;components/camel-sql/src/main/java/org/apache/camel/component/sql/SqlEndpoint.java;components/camel-stream/src/main/java/org/apache/camel/component/stream/StreamEndpoint.java;components/camel-stringtemplate/src/main/java/org/apache/camel/component/stringtemplate/StringTemplateEndpoint.java;components/camel-uface/src/main/java/org/apache/camel/component/uface/UFaceEndpoint.java;components/camel-xmpp/src/main/java/org/apache/camel/component/xmpp/XmppEndpoint.java;camel-core/src/main/java/org/apache/camel/impl/DefaultComponent.java;components/camel-http/src/main/java/org/apache/camel/component/http/HttpComponent.java;components/camel-http/src/main/java/org/apache/camel/component/http/HttpEndpoint.java;tests/camel-itest/src/test/java/org/apache/camel/itest/http/HttpEndpointTest.java;tests/camel-itest/src/test/resources/org/apache/camel/itest/http/HttpEndpointTest-context.xml;components/camel-jpa/src/main/java/org/apache/camel/component/jpa/JpaEndpoint.java;components/camel-jpa/src/test/java/org/apache/camel/component/jpa/JpaWithNamedQueryTest.java;components/camel-jpa/src/test/java/org/apache/camel/processor/jpa/JpaRouteEndpointTest.java;components/camel-jpa/src/test/java/org/apache/camel/processor/jpa/JpaRouteTest.java;components/camel-jpa/src/test/resources/org/apache/camel/processor/jpa/springJpaRouteTest.xml;components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsEndpoint.java;components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsProducer.java;components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsQueueEndpoint.java;components/camel-jms/src/test/java/org/apache/camel/component/jms/config/JmsEndpointWithCustomDestinationTest.java;components/camel-jms/src/test/resources/org/apache/camel/component/jms/config/JmsEndpointWithCustomDestinationTest-context.xml;components/camel-jdbc/src/main/java/org/apache/camel/component/jdbc/JdbcEndpoint.java;components/camel-jdbc/src/test/java/org/apache/camel/component/jdbc/JdbcEndpointTest.java;components/camel-jdbc/src/test/java/org/apache/camel/component/jdbc/JdbcRouteTest.java;components/camel-sql/src/main/java/org/apache/camel/component/sql/SqlComponent.java;components/camel-sql/src/main/java/org/apache/camel/component/sql/SqlEndpoint.java;components/camel-sql/src/test/java/org/apache/camel/component/sql/SqlEndpointTest.java;components/camel-xmpp/src/main/java/org/apache/camel/component/xmpp/RuntimeXmppException.java;components/camel-xmpp/src/main/java/org/apache/camel/component/xmpp/XmppBinding.java;components/camel-xmpp/src/main/java/org/apache/camel/component/xmpp/XmppComponent.java;components/camel-xmpp/src/main/java/org/apache/camel/component/xmpp/XmppEndpoint.java;components/camel-xmpp/src/test/java/org/apache/camel/component/xmpp/GoogleTalkEndpointTest.java;camel-core/src/main/java/org/apache/camel/processor/Logger.java;components/camel-spring/src/test/java/org/apache/camel/component/log/SpringLogTest.java;components/camel-spring/src/test/resources/org/apache/camel/component/log/SpringLogTest-context.xml;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailEndpoint.java;tests/camel-itest/pom.xml;tests/camel-itest/src/test/java/org/apache/camel/itest/mail/SpringMailEndpointTest.java;tests/camel-itest/src/test/resources/org/apache/camel/itest/mail/SpringMailEndpointTest-context.xml;components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsComponent.java;components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsEndpoint.java;components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsRouteEndpointTest.java;camel-core/src/main/java/org/apache/camel/component/bean/BeanComponent.java;camel-core/src/main/java/org/apache/camel/component/bean/BeanEndpoint.java;camel-core/src/main/java/org/apache/camel/component/bean/RegistryBean.java;camel-core/src/main/java/org/apache/camel/impl/DefaultPollingEndpoint.java;camel-core/src/main/java/org/apache/camel/impl/ProcessorEndpoint.java;components/camel-spring/src/main/java/org/apache/camel/spring/factory/BeanEndpointFactory.java;components/camel-spring/src/test/java/org/apache/camel/component/bean/BeanRouteUsingSpringEndpointTest.java;components/camel-spring/src/test/resources/org/apache/camel/component/bean/BeanRouteUsingSpringEndpointTest-context.xml;components/camel-spring/src/test/java/org/apache/camel/component/file/SpringFileRouteTest.java;components/camel-quartz/src/main/java/org/apache/camel/component/quartz/CamelJob.java;components/camel-quartz/src/main/java/org/apache/camel/component/quartz/QuartzComponent.java;components/camel-quartz/src/main/java/org/apache/camel/component/quartz/QuartzEndpoint.java;components/camel-quartz/src/main/java/org/apache/camel/component/quartz/StatefulCamelJob.java;components/camel-quartz/src/test/java/org/apache/camel/component/quartz/QuartzEndpointTest.java;components/camel-quartz/src/test/java/org/apache/camel/component/quartz/QuartzRouteTest.java;components/camel-quartz/src/test/java/org/apache/camel/component/quartz/StatefulQuartzRouteTest.java;components/camel-rmi/src/main/java/org/apache/camel/component/rmi/RmiConsumer.java;components/camel-rmi/src/main/java/org/apache/camel/component/rmi/RmiEndpoint.java;components/camel-rmi/src/test/java/org/apache/camel/component/rmi/RmiRouteEndpointTest.java;components/camel-rmi/src/test/java/org/apache/camel/component/rmi/RmiRouteTest.java;camel-core/src/main/java/org/apache/camel/component/file/FileEndpoint.java;camel-core/src/main/java/org/apache/camel/impl/DefaultEndpoint.java;camel-core/src/main/java/org/apache/camel/impl/ScheduledPollEndpoint.java;components/camel-spring/pom.xml;components/camel-spring/src/test/java/org/apache/camel/component/file/SpringFileRouteTest.java;components/camel-spring/src/test/resources/org/apache/camel/component/file/SpringFileRouteTest-context.xml;
51,509,Bug,Closed,Fixed,camel-core,Major,William Tam,2008/05/12 21:58:18 +0100,2008/05/13 03:00:34 +0100,Hadrian Zbarcea,2008/05/13 03:01:04 +0100,0.21025463,0.00034700000000000003,JMX Connector is not closed by InstrumentationAgentImpl.doStop()   ,   ,1.3.0,1.4.0,0,0,1,1,1,1,0,0,0,0,1.0,0.0,0.0,0.0,
56,539,Improvement,Closed,Fixed,camel-core,Major,Roman Kalukiewicz,2008/05/21 17:42:35 +0100,2008/05/21 17:42:35 +0100,Roman Kalukiewicz,2008/05/21 18:18:30 +0100,0.02494213,0.02494213,XsltBuilder synchronizes on process method making performance bad on XSLTs   ,In heavy load environment XSLT transformations have very bad performance.I propose to use javax.xml.transform.Templates object to produce separate Transformers for every execution.   ,1.3.0,1.4.0,0,0,22,1,3,2,0,0,0,0,1.0,0.0,1.0,1.0,camel-core/src/main/java/org/apache/camel/builder/xml/XsltBuilder.java;
60,552,Bug,Closed,Fixed,camel-spring,Major,Claus Ibsen,2008/05/28 05:34:40 +0100,2008/05/28 05:34:40 +0100,Claus Ibsen,2008/05/29 05:46:24 +0100,1.008148148,1.008148148,camel-spring is dependent on spring-aop   ,&lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-aop&lt;/artifactId&gt; &lt;version&gt;${spring-version}&lt;/version&gt; &lt;/dependency&gt;is needed in pom.xml for camel-spring as its needed to let camel-spring component work out-of-the-box. Without it the camel-example-spring does not work and blows up with a ClassNotFoundException when you use camel:run   ,1.3.0,1.4.0,0,0,37,1,0,0,0,0,0,0,0.0,0.0,1.0,1.0,components/camel-spring/pom.xml;
63,582,Improvement,Closed,Fixed,camel-core,Trivial,Claus Ibsen,2008/06/06 08:02:49 +0100,2008/06/07 15:15:10 +0100,Claus Ibsen,2008/06/12 05:08:45 +0100,5.87912037,4.578877315,JMX Instrumentation - PerformanceCounter - total processed   ,William Tam  this one is for you The total processed time is not exposed to as a managed attribute. And it should be changed from double to long.   ,1.3.0,1.4.0,0,0,35,1,10,2,0,0,0,0,0.0,0.0,1.0,4.0,camel-core/src/main/java/org/apache/camel/management/InstrumentationProcessor.java;camel-core/src/main/java/org/apache/camel/management/PerformanceCounter.java;camel-core/src/test/java/org/apache/camel/component/file/FileProduceGeneratedFileNameTest.java;camel-core/src/test/java/org/apache/camel/management/JmxInstrumentationUsingDefaultsTest.java;
65,594,Bug,Closed,Fixed,documentation; examples,Major,Jonathan Anstey,2008/06/09 15:34:01 +0100,2008/06/09 15:34:01 +0100,Jonathan Anstey,2008/06/09 19:11:52 +0100,0.15128472199999998,0.15128472199999998,Missing compile step in example readmes   ,I noticed that some examples that are run via mvn exec:java require that the example be compiled first. I've updated the readmes to include this step...   ,1.4.0,1.4.0,0,0,26,1,3,2,0,0,0,0,0.0,0.0,1.0,4.0,examples/camel-example-cxf/README.txt;examples/camel-example-jms-file/README.txt;examples/camel-example-loan-broker/README.txt;examples/camel-example-spring-jms/README.txt;
66,596,Improvement,Closed,Fixed,camel-jms,Trivial,Dave Brosius,2008/06/09 18:44:53 +0100,2008/06/09 19:30:12 +0100,Claus Ibsen,2008/06/09 19:38:43 +0100,0.037384258999999996,0.0059143519999999995,[patch] postpone creating browsing strategy until and only if its needed   ,code creates queue browsing strategy even if not needed. patch pushes creation down to relevant branch.   ,1.3.0,1.4.0,0,0,16,1,2,1,0,0,0,0,0.0,0.0,1.0,1.0,components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsComponent.java;
67,613,Improvement,Closed,Fixed,jmx,Major,Willem Jiang,2008/06/17 04:27:12 +0100,2008/06/17 04:27:12 +0100,Willem Jiang,2008/06/24 14:02:30 +0100,7.399513889,7.399513889,Change the JMX default connetor's URL to avoid the confilict with the ActiveMQ or ServiceMix JMX default connector   ,Since the Camel default JMX connector's URL is same with ActiveMQ and ServiceMix default JMX Connector URL  we need to change it to avoid the conflict.   ,1.3.0,1.4.0,0,1,26,1,9,3,0,0,0,0,0.0,0.0,3.0,59.0,camel-core/pom.xml;camel-core/src/main/java/org/apache/camel/impl/DefaultCamelContext.java;camel-core/src/main/java/org/apache/camel/impl/DefaultLifecycleStrategy.java;camel-core/src/main/java/org/apache/camel/impl/DefaultRouteContext.java;camel-core/src/main/java/org/apache/camel/impl/DelegateLifecycleStrategy.java;camel-core/src/main/java/org/apache/camel/management/DefaultInstrumentationAgent.java;camel-core/src/main/java/org/apache/camel/management/InstrumentationErrorHandlerWrappingStrategy.java;camel-core/src/main/java/org/apache/camel/management/InstrumentationLifecycleStrategy.java;camel-core/src/main/java/org/apache/camel/management/InstrumentationProcessor.java;camel-core/src/main/java/org/apache/camel/management/JmxSystemPropertyKeys.java;camel-core/src/main/java/org/apache/camel/model/AggregatorType.java;camel-core/src/main/java/org/apache/camel/model/ProcessorType.java;camel-core/src/main/java/org/apache/camel/model/ResequencerType.java;camel-core/src/main/java/org/apache/camel/processor/BatchProcessor.java;camel-core/src/main/java/org/apache/camel/spi/ErrorHandlerWrappingStrategy.java;camel-core/src/main/java/org/apache/camel/spi/InstrumentationAgent.java;camel-core/src/main/java/org/apache/camel/spi/LifecycleStrategy.java;camel-core/src/main/java/org/apache/camel/spi/RouteContext.java;camel-core/src/test/java/org/apache/camel/builder/ErrorHandlerTest.java;camel-core/src/test/java/org/apache/camel/builder/RouteBuilderTest.java;camel-core/src/test/java/org/apache/camel/management/JmxInstrumentationDisableTest.java;camel-core/src/test/java/org/apache/camel/management/JmxInstrumentationUsingDefaultsTest.java;camel-core/src/test/java/org/apache/camel/management/JmxInstrumentationUsingPlatformMBSTest.java;camel-core/src/test/java/org/apache/camel/management/JmxInstrumentationUsingPropertiesTest.java;camel-core/src/test/java/org/apache/camel/management/JmxInstrumentationWithConnectorTest.java;components/camel-atom/pom.xml;components/camel-csv/pom.xml;components/camel-ftp/pom.xml;components/camel-http/pom.xml;components/camel-jcr/pom.xml;components/camel-jdbc/pom.xml;components/camel-jetty/pom.xml;components/camel-josql/pom.xml;components/camel-juel/pom.xml;components/camel-mina/pom.xml;components/camel-ognl/pom.xml;components/camel-quartz/pom.xml;components/camel-rmi/pom.xml;components/camel-spring/src/main/java/org/apache/camel/spring/CamelContextFactoryBean.java;components/camel-spring/src/main/java/org/apache/camel/spring/CamelJMXAgentType.java;components/camel-spring/src/main/java/org/apache/camel/spring/SpringInstrumentationAgent.java;components/camel-spring/src/test/java/org/apache/camel/spring/DefaultJMXAgentTest.java;components/camel-spring/src/test/java/org/apache/camel/spring/DisableJmxAgentTest.java;components/camel-spring/src/test/java/org/apache/camel/spring/DummyLifecycleStrategy.java;components/camel-spring/src/test/java/org/apache/camel/spring/JMXAgentTest.java;components/camel-spring/src/test/java/org/apache/camel/spring/managment/CamelChoiceWithManagementTest.java;components/camel-spring/src/test/java/org/apache/camel/spring/managment/JmxInstrumentationWithConnectorTest.java;components/camel-spring/src/test/resources/org/apache/camel/spring/defaultJmxConfig.xml;components/camel-spring/src/test/resources/org/apache/camel/spring/disableJmxConfig.xml;components/camel-spring/src/test/resources/org/apache/camel/spring/jmxConfig.xml;components/camel-spring/src/test/resources/org/apache/camel/spring/management/jmxInstrumentationWithConnector.xml;components/camel-sql/pom.xml;components/camel-stream/pom.xml;components/camel-xmlbeans/pom.xml;components/camel-xmpp/pom.xml;components/camel-xstream/pom.xml;components/camel-spring/src/test/java/org/apache/camel/spring/JMXAgentTest.java;camel-core/src/main/java/org/apache/camel/management/DefaultInstrumentationAgent.java;camel-core/src/test/java/org/apache/camel/management/JmxInstrumentationWithConnectorTest.java;
68,615,Improvement,Closed,Fixed,camel-velocity,Major,Hadrian Zbarcea,2008/06/17 17:46:50 +0100,2008/06/18 01:40:10 +0100,Willem Jiang,2008/06/18 03:44:16 +0100,0.414884259,0.08618055599999999,Headers should be modifiable using velocity templates   ,See context at:http://www.nabble.com/Exchange-headers-in-velocity-td17916457s22882.html   ,1.3.0; 1.4.0,1.4.0,0,0,6,1,3,2,0,0,0,0,0.0,0.0,2.0,7.0,components/camel-velocity/src/main/java/org/apache/camel/component/velocity/VelocityEndpoint.java;components/camel-velocity/src/test/java/org/apache/camel/component/velocity/FruitFilter.java;components/camel-velocity/src/test/java/org/apache/camel/component/velocity/VelocitySetHeaderTest.java;components/camel-velocity/src/test/resources/org/apache/camel/component/velocity/AppleTemplate.vm;components/camel-velocity/src/test/resources/org/apache/camel/component/velocity/OrangeTemplate.vm;components/camel-velocity/src/test/resources/org/apache/camel/component/velocity/camel-context.xml;components/camel-velocity/pom.xml;
69,620,Bug,Closed,Fixed,camel-core,Major,William Tam,2008/06/19 23:45:43 +0100,2008/06/24 05:14:23 +0100,Claus Ibsen,2008/06/24 05:45:36 +0100,4.249918981,0.021678241,ResequencerType.createProcessor could throw NPE as stream config does not get initialized.   ,java.lang.NullPointerException at org.apache.camel.model.ResequencerType.createStreamResequencer(ResequencerType.java:198) at org.apache.camel.model.ResequencerType.createProcessor(ResequencerType.java:163) at org.apache.camel.model.ProcessorType.createOutputsProcessor(ProcessorType.java:1584) at org.apache.camel.model.ProcessorType.createOutputsProcessor(ProcessorType.java:93) at org.apache.camel.model.InterceptorRef.createProcessor(InterceptorRef.java:61) at org.apache.camel.model.ProcessorType.makeProcessor(ProcessorType.java:1471) at org.apache.camel.model.ProcessorType.addRoutes(ProcessorType.java:97) at org.apache.camel.model.RouteType.addRoutes(RouteType.java:210) at org.apache.camel.model.RouteType.addRoutes(RouteType.java:80) at org.apache.camel.impl.DefaultCamelContext.startRouteDefinitions(DefaultCamelContext.java:462) at org.apache.camel.impl.DefaultCamelContext.doStart(DefaultCamelContext.java:454) at org.apache.camel.impl.ServiceSupport.start(ServiceSupport.java:47) at org.apache.camel.ContextTestSupport.startCamelContext(ContextTestSupport.java:108) at org.apache.camel.ContextTestSupport.setUp(ContextTestSupport.java:81) at org.apache.camel.processor.ResequencerTest.setUp(ResequencerTest.java:48) at junit.framework.TestCase.runBare(TestCase.java:128) at junit.framework.TestResult$1.protect(TestResult.java:106) at junit.framework.TestResult.runProtected(TestResult.java:124) at junit.framework.TestResult.run(TestResult.java:109) at junit.framework.TestCase.run(TestCase.java:120) at junit.framework.TestSuite.runTest(TestSuite.java:230) at junit.framework.TestSuite.run(TestSuite.java:225) at org.eclipse.jdt.internal.junit.runner.junit3.JUnit3TestReference.run(JUnit3TestReference.java:130) at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)   ,1.3.0; 1.4.0,1.4.0,0,0,57,1,6,2,0,0,0,0,0.0,0.0,1.0,3.0,camel-core/src/main/java/org/apache/camel/model/ResequencerType.java;camel-core/src/test/java/org/apache/camel/processor/ResequencerTest.java;camel-core/src/test/java/org/apache/camel/processor/StreamResequencerTest.java;
71,627,Improvement,Closed,Fixed,camel-core,Major,Claus Ibsen,2008/06/23 06:04:25 +0100,2008/06/24 06:01:09 +0100,Claus Ibsen,2008/06/25 06:09:25 +0100,2.003472222,1.0057407409999999,JMX Instrumentation - PerformanceCounter - last processed timestamp when failed   ,I thought about another real life use case we have at work once in a while.a) when was the last time the integration worked?b) when was the last time the integration was invoked?We do have option a covered now with lastExchangeCompletionTime.However I would like another timestamp for lastExchangeTime that is just a record the last time it was processed (even if it failed).PS: At work we do have to grep through logfiles in our legacy EIP platform.   ,1.4.0,1.4.0,0,0,77,1,2,1,0,0,0,0,0.0,0.0,2.0,10.0,camel-core/src/main/java/org/apache/camel/management/CamelNamingStrategy.java;camel-core/src/main/java/org/apache/camel/management/InstrumentationErrorHandlerWrappingStrategy.java;camel-core/src/main/java/org/apache/camel/management/InstrumentationInterceptStrategy.java;camel-core/src/main/java/org/apache/camel/management/InstrumentationProcessor.java;camel-core/src/main/java/org/apache/camel/management/PerformanceCounter.java;examples/camel-example-spring-jms/src/main/resources/META-INF/spring/camel-server-aop.xml;examples/camel-example-spring-jms/src/main/resources/META-INF/spring/camel-server.xml;examples/camel-example-spring-jms/src/main/resources/camel-client-remoting.xml;examples/camel-example-spring-jms/src/main/resources/camel-client.xml;camel-core/src/main/java/org/apache/camel/management/CamelNamingStrategy.java;
75,652,Bug,Closed,Fixed,examples,Major,Willem Jiang,2008/06/30 10:24:19 +0100,2008/06/30 10:24:19 +0100,Willem Jiang,2008/06/30 12:51:26 +0100,0.10216435199999999,0.10216435199999999,camel-cxf example build.xml is out of date   ,Need to update the build.xml of example-camel-cxf to support run the examples of camel transport and web service provider API.   ,1.3.0,1.4.0,0,0,20,1,1,1,0,0,0,0,0.0,0.0,1.0,2.0,examples/camel-example-cxf/README.txt;examples/camel-example-cxf/build.xml;
78,663,Improvement,Closed,Fixed,camel-core; camel-spring,Major,james strachan,2008/07/03 20:19:32 +0100,2008/07/03 20:19:32 +0100,james strachan,2008/07/12 06:46:23 +0100,8.4353125,8.4353125,create a TransactionErrorHandler so you can easily  use a transaction & rollback on a route - with redeliveryDelay to just fail the route if it can't be processed   ,   ,1.4.0,1.4.0,0,0,1,1,9,3,0,0,0,0,0.0,0.0,2.0,9.0,camel-core/src/main/java/org/apache/camel/builder/DeadLetterChannelBuilder.java;components/camel-spring/src/main/java/org/apache/camel/spring/SpringRouteBuilder.java;components/camel-spring/src/main/java/org/apache/camel/spring/spi/TransactionErrorHandlerBuilder.java;components/camel-spring/src/main/java/org/apache/camel/spring/spi/TransactionInterceptor.java;components/camel-spring/src/test/java/org/apache/camel/spring/interceptor/TransactionalClientDataSourceTest.java;components/camel-spring/src/test/java/org/apache/camel/spring/interceptor/TransactionalClientDataSourceWithDefaultErrorHandlerTest.java;camel-core/src/main/java/org/apache/camel/processor/DeadLetterChannel.java;components/camel-spring/src/main/java/org/apache/camel/spring/spi/TransactionErrorHandlerBuilder.java;components/camel-spring/src/main/java/org/apache/camel/spring/spi/TransactionInterceptor.java;
79,668,Improvement,Closed,Fixed,,Minor,Claus Ibsen,2008/07/04 13:19:09 +0100,2008/07/05 12:41:08 +0100,Claus Ibsen,2008/07/05 13:05:09 +0100,0.9902777779999999,0.016678241,Transactional Client - Setting Spring Policy is a bit cumbersome in the XML   ,Currently you have to setup the transaction demarcation in the spring xml file as: &lt;bean id='PROPAGATION_REQUIRED' class='org.apache.camel.spring.spi.SpringTransactionPolicy'&gt; &lt;constructor-arg&gt; &lt;bean class='org.springframework.transaction.support.TransactionTemplate'&gt; &lt;property name='transactionManager' ref='jmsTransactionManager'/&gt; &lt;/bean&gt; &lt;/constructor-arg&gt; &lt;/bean&gt;to be able to use the policy from XML directly in the tag: &lt;camel:policy ref='PROPAGATION_REQUIRED'/&gt;We should support a neater syntax without the nested bean and constructor args.   ,1.4.0,1.4.0,0,0,72,1,2,1,0,0,0,0,0.0,0.0,2.0,4.0,components/camel-spring/src/main/java/org/apache/camel/spring/spi/SpringTransactionPolicy.java;components/camel-spring/src/test/java/org/apache/camel/spring/interceptor/TransactionalClientDataSourceTest.java;components/camel-spring/src/test/resources/org/apache/camel/spring/interceptor/transactionalClientDataSource.xml;components/camel-spring/src/main/java/org/apache/camel/spring/spi/SpringTransactionPolicy.java;
80,684,Improvement,Closed,Fixed,,Major,Gert Vanthienen,2008/07/07 13:41:32 +0100,2008/07/07 13:41:32 +0100,Gert Vanthienen,2008/07/07 15:12:42 +0100,0.063310185,0.063310185,Upgrade Geronimo specs to 1.1.1 when available   ,We should upgrade to the 1.1.1 version of the different Geronimo specs jar &#8211; they include the necessary OSGi metadata.   ,1.3.0,1.4.0,0,0,20,1,1,1,0,0,0,0,0.0,0.0,1.0,2.0,components/camel-bam/pom.xml;pom.xml;
81,686,Bug,Closed,Fixed,camel-cxf,Major,Claus Ibsen,2008/07/08 12:05:57 +0100,2008/07/08 12:05:57 +0100,Willem Jiang,2008/07/10 05:02:19 +0100,1.705810185,1.705810185,CXF - Feedback from Eduard on problems with CXF over JMS   ,See user forum:http://www.nabble.com/Fwd%3A-Using-Apache-Camel-as-Transport-for-Apache-CXF-with-SOAP-over-JMS-td18314917s22882.html   ,1.4.0,1.4.0,0,0,6,1,4,2,0,0,0,0,0.0,0.0,2.0,17.0,tests/camel-itest/pom.xml;tests/camel-itest/src/main/resources/META-INF/LICENSE.txt;tests/camel-itest/src/main/resources/META-INF/NOTICE.txt;tests/camel-itest/src/test/java/org/apache/camel/itest/customerrelations/CustomerServiceV1Impl.java;tests/camel-itest/src/test/java/org/apache/camel/itest/customerrelations/CustomerServicesTest.java;tests/camel-itest/src/test/resources/commons-logging.properties;tests/camel-itest/src/test/resources/spring-config/client-applicationContext.xml;tests/camel-itest/src/test/resources/spring-config/jms-applicationContext.xml;tests/camel-itest/src/test/resources/spring-config/server-applicationContext.xml;tests/camel-itest/src/test/resources/wsdl/CustomerService-1.0.0.wsdl;tests/camel-itest/src/test/resources/xsd/Address.xsd;tests/camel-itest/src/test/resources/xsd/Customer.xsd;tests/camel-itest/src/test/resources/xsd/Gender.xsd;tests/camel-itest/src/test/resources/xsd/Person.xsd;components/camel-cxf/src/main/java/org/apache/camel/component/cxf/CxfSoapBinding.java;components/camel-cxf/src/main/java/org/apache/camel/component/cxf/transport/CamelConduit.java;components/camel-cxf/src/main/java/org/apache/camel/component/cxf/transport/CamelDestination.java;
82,688,Bug,Closed,Fixed,,Major,Freeman Fang,2008/07/10 04:22:28 +0100,2008/07/10 04:44:33 +0100,Willem Jiang,2008/07/10 11:20:43 +0100,0.290451389,0.275115741,process method of should check ExchnagePAttern before setting out   ,   ,1.3.0; 1.4.0,1.4.0,0,0,1,1,9,3,0,0,0,0,0.0,0.0,2.0,19.0,camel-core/src/main/java/org/apache/camel/component/bean/BeanProcessor.java;camel-core/src/main/java/org/apache/camel/language/bean/BeanExpression.java;camel-core/src/main/java/org/apache/camel/util/ResolverUtil.java;camel-core/src/main/java/org/apache/camel/util/WebSphereResolverUtil.java;camel-core/src/test/java/org/apache/camel/component/bean/NewInstanceTest.java;camel-core/src/test/java/org/apache/camel/component/direct/DirectNoToTypeTest.java;camel-core/src/test/java/org/apache/camel/language/BeanTest.java;camel-core/src/test/java/org/apache/camel/processor/MethodFilterTest.java;components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsBinding.java;components/camel-jms/src/test/java/org/apache/camel/component/jms/issues/DummyOrder.java;components/camel-jms/src/test/java/org/apache/camel/component/jms/issues/JmsBeanMethodHeaderTest.java;components/camel-jms/src/test/java/org/apache/camel/component/jms/issues/JmsConcurrentConsumersTest.java;components/camel-jms/src/test/java/org/apache/camel/component/jms/issues/JmsHeaderAsObjectTest.java;components/camel-jms/src/test/java/org/apache/camel/component/jms/issues/JmsRedeliveryWithInitialRedeliveryDelayTest.java;components/camel-jms/src/test/java/org/apache/camel/component/jms/temp/TemporaryQueueRouteTest.java;components/camel-spring/src/test/java/org/apache/camel/spring/bind/BeanAsEndpointTest.java;components/camel-spring/src/test/java/org/apache/camel/spring/config/MyFailureProcessor.java;camel-core/src/main/java/org/apache/camel/component/bean/BeanProcessor.java;camel-core/src/test/java/org/apache/camel/component/file/BeanToFileTest.java;
88,714,Improvement,Closed,Fixed,,Major,Claus Ibsen,2008/07/14 07:26:10 +0100,2009/03/31 13:51:01 +0100,Claus Ibsen,2009/04/02 14:29:45 +0100,262.2941551,2.026898148,Change default DeadLetterChannel strategy in Camel   ,The current DLC strategy in Camel is to retry 6 times with 1 sec delay. If still failed it will be moved to a log WARN.This default behavior is not feasible for most end-users  in fact none. We should have a better default strategy in Camel.Also we should force end-users to setup a strategy from the start.And we should improve this in the documentation so end-users is aware of this.   ,1.3.0; 1.4.0,2.0-M2,0,0,70,1,3,1,0,0,0,0,0.0,0.0,1.0,51.0,camel-core/src/main/java/org/apache/camel/builder/BuilderSupport.java;camel-core/src/main/java/org/apache/camel/builder/DefaultErrorHandlerBuilder.java;camel-core/src/main/java/org/apache/camel/impl/DefaultExchange.java;camel-core/src/main/java/org/apache/camel/model/ProcessorDefinition.java;camel-core/src/main/java/org/apache/camel/processor/DefaultErrorHandler.java;camel-core/src/test/java/org/apache/camel/builder/BuilderWithScopesTest.java;camel-core/src/test/java/org/apache/camel/builder/ErrorHandlerTest.java;camel-core/src/test/java/org/apache/camel/builder/ExceptionBuilderTest.java;camel-core/src/test/java/org/apache/camel/builder/ExceptionBuilderWithHandledExceptionTest.java;camel-core/src/test/java/org/apache/camel/builder/InterceptorBuilderWithEndTest.java;camel-core/src/test/java/org/apache/camel/builder/RouteBuilderTest.java;camel-core/src/test/java/org/apache/camel/issues/ExceptionTest.java;camel-core/src/test/java/org/apache/camel/issues/RomeksExceptionTest.java;camel-core/src/test/java/org/apache/camel/management/ExceptionWithManagementTest.java;camel-core/src/test/java/org/apache/camel/processor/BeanWithExceptionTest.java;camel-core/src/test/java/org/apache/camel/processor/DeadLetterChannelExceptionCausePropagatedTest.java;camel-core/src/test/java/org/apache/camel/processor/DefaultErrorHandlerExplicitConfiguredTest.java;camel-core/src/test/java/org/apache/camel/processor/DefaultErrorHandlerTest.java;camel-core/src/test/java/org/apache/camel/processor/MulticastStreamCachingTest.java;camel-core/src/test/java/org/apache/camel/processor/RedeliveryPolicyPerExceptionTest.java;camel-core/src/test/java/org/apache/camel/processor/ResequencerTest.java;camel-core/src/test/java/org/apache/camel/processor/StreamResequencerTest.java;camel-core/src/test/java/org/apache/camel/processor/StreamSourceContentBasedRouterTest.java;camel-core/src/test/java/org/apache/camel/processor/ThreadTest.java;camel-core/src/test/java/org/apache/camel/processor/TraceableUnitOfWorkTest.java;camel-core/src/test/java/org/apache/camel/processor/ValidatingProcessorTest.java;camel-core/src/test/java/org/apache/camel/processor/ValidationWithExceptionTest.java;camel-core/src/test/java/org/apache/camel/processor/ValidationWithHandlePipelineAndExceptionTest.java;camel-core/src/test/java/org/apache/camel/processor/ValidationWithInFlowExceptionTest.java;camel-core/src/test/java/org/apache/camel/processor/exceptionpolicy/DefaultExceptionPolicyStrategyUsingWhenTest.java;components/camel-cxf/src/test/resources/org/apache/camel/component/cxf/WsdlFirstBeans.xml;components/camel-cxf/src/test/resources/org/apache/camel/component/cxf/WsdlFirstBeansPayloadMode.xml;components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsXMLRouteTest.java;components/camel-jms/src/test/java/org/apache/camel/component/jms/tx/AbstractTransactionTest.java;components/camel-jms/src/test/java/org/apache/camel/component/jms/tx/QueueToProcessorTransactionTest.java;components/camel-scala/src/test/scala/org/apache/camel/scala/dsl/InterceptorTest.scala;components/camel-spring/src/test/resources/org/apache/camel/spring/processor/onexception/RedeliveryPolicyRefTest.xml;components/camel-spring/src/test/resources/org/apache/camel/spring/processor/onexception/deadLetterChannelHandledExampleTest.xml;components/camel-spring/src/test/resources/org/apache/camel/spring/processor/onexception/onExceptionNotNormalizedClassNameTest.xml;components/camel-spring/src/test/resources/org/apache/camel/spring/processor/onexception/onExceptionSubRouteTest.xml;components/camel-spring/src/test/resources/org/apache/camel/spring/xml/buildCustomProcessor.xml;components/camel-spring/src/test/resources/org/apache/camel/spring/xml/buildCustomProcessorWithFilter.xml;components/camel-spring/src/test/resources/org/apache/camel/spring/xml/buildDynamicRecipientList.xml;components/camel-spring/src/test/resources/org/apache/camel/spring/xml/buildIdempotentConsumer.xml;components/camel-spring/src/test/resources/org/apache/camel/spring/xml/buildRouteWithInterceptor.xml;components/camel-spring/src/test/resources/org/apache/camel/spring/xml/buildSimpleRoute.xml;components/camel-spring/src/test/resources/org/apache/camel/spring/xml/buildSimpleRouteWithChoice.xml;components/camel-spring/src/test/resources/org/apache/camel/spring/xml/buildSimpleRouteWithHeaderPredicate.xml;components/camel-spring/src/test/resources/org/apache/camel/spring/xml/buildSplitter.xml;components/camel-spring/src/test/resources/org/apache/camel/spring/xml/buildStaticRecipientList.xml;components/camel-spring/src/test/resources/org/apache/camel/spring/xml/buildWireTap.xml;
90,723,Improvement,Closed,Fixed,camel-cxf,Major,Claus Ibsen,2008/07/15 12:04:34 +0100,2008/07/15 12:04:34 +0100,Willem Jiang,2008/08/26 10:00:01 +0100,41.91350694,41.91350694,CXF - wrapper/unwrapper - camel-cxf should be smarter   ,Willem knows what this is. See chat log on the july-15-2008.Basically getBody() should be smart in what kind of situation you are using CXF.   ,1.4.0,1.5.0,0,0,24,1,7,2,0,0,0,0,0.0,0.0,3.0,11.0,components/camel-cxf/pom.xml;components/camel-cxf/src/main/java/org/apache/camel/component/cxf/CamelInvoker.java;components/camel-cxf/src/test/java/org/apache/camel/component/cxf/CxfNonWrapperTest.java;components/camel-cxf/src/test/java/org/apache/camel/non_wrapper/PersonProcessor.java;components/camel-cxf/src/test/java/org/apache/camel/wsdl_first/PersonProcessor.java;components/camel-cxf/src/test/resources/org/apache/camel/component/cxf/nonWrapperProcessor.xml;components/camel-cxf/src/test/resources/person-non-wrapper.wsdl;components/camel-cxf/pom.xml;components/camel-cxf/src/test/resources/person-non-wrapper-binding.xml;components/camel-cxf/src/test/resources/person-non-wrapper.wsdl;components/camel-cxf/src/test/java/org/apache/camel/non_wrapper/PersonProcessor.java;
94,737,Bug,Closed,Fixed,,Major,Charles Moulliard,2008/07/18 14:01:00 +0100,2008/07/18 19:13:29 +0100,Claus Ibsen,2008/07/18 19:26:24 +0100,0.225972222,0.008969907,When getContext().addInterceptorStrategy(new Tracer());  is added in a RouteBuilder class  then the timer component does not work   ,When getContext().addInterceptorStrategy(new Tracer());is added in a RouteBuilder Class  then the timer component does not start.e.g. public class RouteBuilder extends RouteBuilder { getContext().addInterceptorStrategy(new Tracer()); public void configure() { from('timer://export') .to('bean:myBean'); }}   ,1.4.0,1.5.0,0,0,30,1,6,2,0,0,0,0,0.0,0.0,1.0,4.0,camel-core/src/main/java/org/apache/camel/component/log/LogFormatter.java;camel-core/src/main/java/org/apache/camel/impl/DefaultCamelContext.java;camel-core/src/main/java/org/apache/camel/processor/interceptor/TraceFormatter.java;camel-core/src/test/java/org/apache/camel/component/timer/TimerRouteWithTracerTest.java;
101,765,Bug,Closed,Fixed,camel-core,Major,William Tam,2008/07/29 05:02:15 +0100,2008/07/29 07:08:47 +0100,Willem Jiang,2008/07/29 08:03:03 +0100,0.12555555599999998,0.037685185,InstrumentationProcessor should catch Throwable   ,The InstrumentationProcessor currently only catches exception and sets it in the exception. Runtime errors and throwables can be thrown all the way out of the DeadLetterChannel's process method  out of the reach of exception policy.   ,1.4.0,1.5.0,0,0,35,1,1,1,0,0,0,0,0.0,0.0,1.0,2.0,camel-core/src/main/java/org/apache/camel/management/InstrumentationProcessor.java;camel-core/src/test/java/org/apache/camel/management/ExceptionWithManagementTest.java;
106,815,Improvement,Closed,Fixed,camel-core,Major,Willem Jiang,2008/08/12 14:57:10 +0100,2008/08/12 14:57:10 +0100,Willem Jiang,2008/08/12 15:00:28 +0100,0.0022916670000000003,0.0022916670000000003,support to set the loadBalancerStrategy before the outputs   ,Current Camel only support the set the LoadBalancer Strategy after the outputs like this &lt;camelContext id='camel' xmlns='http://activemq.apache.org/camel/schema/spring'&gt; &lt;route&gt; &lt;from uri='direct:start'/&gt; &lt;loadBalance&gt; &lt;to uri='mock:x'/&gt; &lt;to uri='mock:y'/&gt; &lt;to uri='mock:z'/&gt; &lt;roundRobin/&gt; &lt;/loadBalance&gt; &lt;/route&gt; &lt;/camelContext&gt;It should be much better with the below configuration file&lt;camelContext id='camel' xmlns='http://activemq.apache.org/camel/schema/spring'&gt; &lt;route&gt; &lt;from uri='direct:start'/&gt; &lt;loadBalance&gt; &lt;roundRobin/&gt; &lt;to uri='mock:x'/&gt; &lt;to uri='mock:y'/&gt; &lt;to uri='mock:z'/&gt; &lt;/loadBalance&gt; &lt;/route&gt; &lt;/camelContext&gt;   ,1.3.0; 1.4.0,1.5.0,0,0,84,1,2,2,1,1,0,0,0.0,0.0,1.0,2.0,camel-core/src/main/java/org/apache/camel/model/LoadBalanceType.java;components/camel-spring/src/test/resources/org/apache/camel/spring/processor/loadBalance.xml;
110,839,Improvement,Closed,Fixed,camel-core,Minor,Claus Ibsen,2008/08/21 10:43:47 +0100,2008/08/21 10:43:47 +0100,Claus Ibsen,2008/08/23 09:55:24 +0100,1.966400463,1.966400463,Type Converter - if not possible to convert LOG a WARN   ,An end-user had a route that didn't work and had trouble figure out the problem. Could be the fact that the type converted failed for some reason and no trace in his log.We should add some DEBUG logging to the type converter stuff what it does  especially in cases where it cant convert.http://www.nabble.com/Marshaling-jdbc-output-with-xstream-td19065283s22882.htmlNotice we have another ticket about type converters should fail instead of returning null etc.   ,1.5.0,1.5.0,0,0,70,1,3,1,1,0,0,0,0.0,0.0,3.0,20.0,camel-core/src/main/java/org/apache/camel/impl/converter/DefaultTypeConverter.java;camel-core/src/main/java/org/apache/camel/TypeConverter.java;camel-core/src/main/java/org/apache/camel/impl/DefaultLifecycleStrategy.java;camel-core/src/main/java/org/apache/camel/impl/converter/DefaultTypeConverter.java;camel-core/src/main/java/org/apache/camel/management/InstrumentationLifecycleStrategy.java;camel-core/src/main/java/org/apache/camel/spi/BrowsableEndpoint.java;camel-core/src/main/java/org/apache/camel/spi/DataFormat.java;camel-core/src/main/java/org/apache/camel/spi/ErrorHandlerWrappingStrategy.java;camel-core/src/main/java/org/apache/camel/spi/ExchangeConverter.java;camel-core/src/main/java/org/apache/camel/spi/HeaderFilterStrategy.java;camel-core/src/main/java/org/apache/camel/spi/InstrumentationAgent.java;camel-core/src/main/java/org/apache/camel/spi/Language.java;camel-core/src/main/java/org/apache/camel/spi/LanguageResolver.java;camel-core/src/main/java/org/apache/camel/spi/LifecycleStrategy.java;camel-core/src/main/java/org/apache/camel/spi/Provider.java;camel-core/src/main/java/org/apache/camel/spi/RouteContext.java;camel-core/src/main/java/org/apache/camel/spi/Synchronization.java;camel-core/src/main/java/org/apache/camel/spi/TypeConverterAware.java;camel-core/src/main/java/org/apache/camel/spi/UnitOfWork.java;camel-core/src/main/java/org/apache/camel/impl/converter/DefaultTypeConverter.java;
112,873,Bug,Closed,Fixed,camel-mina,Major,Willem Jiang,2008/09/01 10:27:18 +0100,2008/09/01 10:27:18 +0100,Willem Jiang,2008/09/03 08:00:07 +0100,1.897789352,1.897789352,Current mina component can't tansfer the exchange fault message body   ,I just found MinaTransferExchangeOptionTest don't show how to set fault message and the fault message is not a part of MinaPayloadHolder.You can't set the exception on the exchange in the processor   sine the camel DeadLetterChannel will try to redeliver the message.So we just need to support put the exception which need to send back to the camel client into the fault message body.   ,1.4.0,1.5.0,0,0,64,1,1,1,0,0,0,0,0.0,0.0,4.0,19.0,components/camel-mina/src/main/java/org/apache/camel/component/mina/MinaConsumer.java;components/camel-mina/src/test/java/org/apache/camel/component/mina/MinaTcpWithIoOutProcessorExceptionTest.java;components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsIOConverter.java;components/camel-mina/src/main/java/org/apache/camel/component/mina/MinaConsumer.java;components/camel-mina/src/main/java/org/apache/camel/component/mina/MinaPayloadHolder.java;camel-core/src/main/java/org/apache/camel/Exchange.java;camel-core/src/main/java/org/apache/camel/converter/IOConverter.java;camel-core/src/main/java/org/apache/camel/converter/NIOConverter.java;components/camel-mina/src/main/java/org/apache/camel/component/mina/MinaComponent.java;components/camel-mina/src/main/java/org/apache/camel/component/mina/MinaConsumer.java;components/camel-mina/src/main/java/org/apache/camel/component/mina/MinaConverter.java;components/camel-mina/src/main/java/org/apache/camel/component/mina/MinaEndpoint.java;components/camel-mina/src/main/java/org/apache/camel/component/mina/MinaPayloadHelper.java;components/camel-mina/src/main/java/org/apache/camel/component/mina/MinaPayloadHolder.java;components/camel-mina/src/main/java/org/apache/camel/component/mina/MinaProducer.java;components/camel-mina/src/test/java/org/apache/camel/component/mina/MinaConverterTest.java;components/camel-mina/src/test/java/org/apache/camel/component/mina/MinaTransferExchangeOptionTest.java;components/camel-mina/src/test/java/org/apache/camel/component/mina/MinaUdpWithInOutUsingPlainSocketTest.java;components/camel-mina/src/test/java/org/apache/camel/component/mina/MinaTcpWithInOutUsingPlainSocketTest.java;
115,881,Bug,Closed,Fixed,camel-mina,Minor,Claus Ibsen,2008/09/07 14:32:28 +0100,2008/09/07 14:32:28 +0100,Claus Ibsen,2008/09/07 14:53:33 +0100,0.014641204,0.014641204,camel-mina - codec options should fail if not possible to find i registry   ,If you configure the codec option on camel-mina and you eg make a spelling mistake camel will default to Mina default protocol if not found. We should throw an exception instead so end user knows about this and can fix his spelling mistake.   ,1.4.0,1.5.0,0,0,43,1,1,1,0,0,0,0,0.0,0.0,1.0,4.0,components/camel-mina/src/main/java/org/apache/camel/component/mina/MinaComponent.java;components/camel-mina/src/test/java/org/apache/camel/component/mina/MinaCustomCodecTest.java;components/camel-mina/src/test/java/org/apache/camel/component/mina/MinaEncodingTest.java;components/camel-mina/src/test/java/org/apache/camel/component/mina/MinaTcpTextlineProtocolTest.java;
116,882,Bug,Closed,Fixed,camel-ftp,Major,Bela Vizy,2008/09/07 22:51:51 +0100,2008/09/08 01:53:07 +0100,Willem Jiang,2008/09/08 02:10:40 +0100,0.13806713,0.0121875,SftpEndpoint ignores custom ssh port   ,SftpEndpoint ignores custom ssh port. It works only if server runs on port 22.   ,1.5.0,1.4.0; 1.5.0,0,0,15,1,3,3,0,0,0,1,0.0,0.0,1.0,1.0,components/camel-ftp/src/main/java/org/apache/camel/component/file/remote/SftpEndpoint.java;
117,886,Bug,Closed,Fixed,camel-core,Major,Aaron Mulder,2008/09/09 17:12:34 +0100,2008/09/15 20:12:52 +0100,Jonathan Anstey,2008/09/15 20:19:35 +0100,6.129872685,0.004664352,element should not require contextPath attribute   ,In the Java DSL  you can say from('foo').marshal().jaxb().to('bar')In XML I think it would look like this:&lt;from uri='...' /&gt;&lt;marshal&gt; &lt;jaxb /&gt;&lt;/marshal&gt;&lt;to uri='...' /&gt;The problem is that you can't use the &lt;jaxb /&gt; element without the contextPath attribute  which the XSD says is required.   ,1.4.0,1.5.0,0,0,42,1,2,2,0,0,0,0,0.0,0.0,1.0,1.0,camel-core/src/main/java/org/apache/camel/model/dataformat/JaxbDataFormat.java;
118,902,Bug,Closed,Fixed,camel-core,Major,Willem Jiang,2008/09/15 08:05:14 +0100,2008/09/15 08:05:14 +0100,Willem Jiang,2008/09/16 05:46:10 +0100,0.9034259259999999,0.9034259259999999,The should throw the exception if there is some thing wrong with  type attribute   ,If you specify an invalided class name in the convertBodyTo@type  you will get a NPE error  but no detail log information for the type attribute.We need to throw the exception for user to locate the error.   ,1.3.0; 1.4.0,1.5.0,0,0,36,1,1,1,0,1,0,0,0.0,0.0,1.0,2.0,camel-core/src/main/java/org/apache/camel/model/ConvertBodyType.java;camel-core/src/main/java/org/apache/camel/processor/ConvertBodyProcessor.java;
119,906,Bug,Closed,Fixed,camel-jms,Major,Claus Ibsen,2008/09/16 08:36:50 +0100,2008/09/16 08:36:50 +0100,Claus Ibsen,2008/09/16 09:45:51 +0100,0.047928240999999996,0.047928240999999996,JmsProducer - option requestTimeout isn't configured properly   ,When sending a JMS message to a destination using camel-jms (JMSProducer) I can't get it to use my requestTimeout option in the endpoint configuration. It always default to 20000.template.requestBody('activemq:queue:slow?requestTimeout=1000'  'Hello World');This doesn't work as expected with a timeout of only 1 sec.   ,1.4.0,1.5.0,0,0,51,1,2,1,0,0,0,0,1.0,0.0,1.0,4.0,components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsConfiguration.java;components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsEndpoint.java;components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsProducer.java;components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsRouteTimeoutTest.java;
123,944,Improvement,Closed,Fixed,camel-core,Minor,Claus Ibsen,2008/09/28 12:41:58 +0100,2008/09/28 12:41:58 +0100,Claus Ibsen,2008/09/28 19:27:23 +0100,0.28153935199999996,0.28153935199999996,tracer - option to disable interceptors   ,Currently the tracer also outputs interceptors such as delegation to the DLC that is wrapped in the pipeline.Would be nice with an option to enable/disable this (disabled by default) so all the interceptors isn't logged and confuses end-users.   ,1.4.0,1.5.0,0,0,38,1,5,1,0,0,0,0,0.0,0.0,2.0,15.0,camel-core/src/main/java/org/apache/camel/impl/DefaultUnitOfWork.java;camel-core/src/main/java/org/apache/camel/model/InterceptType.java;camel-core/src/main/java/org/apache/camel/model/OptionalIdentifiedType.java;camel-core/src/main/java/org/apache/camel/model/ProcessorRef.java;camel-core/src/main/java/org/apache/camel/processor/UnitOfWorkProcessor.java;camel-core/src/main/java/org/apache/camel/processor/interceptor/TraceFormatter.java;camel-core/src/main/java/org/apache/camel/processor/interceptor/TraceInterceptor.java;camel-core/src/main/java/org/apache/camel/processor/interceptor/Tracer.java;camel-core/src/main/java/org/apache/camel/spi/Synchronization.java;camel-core/src/test/java/org/apache/camel/model/ProcessorTypeConfigurationTest.java;camel-core/src/test/java/org/apache/camel/processor/TraceInterceptorTest.java;camel-core/src/test/java/org/apache/camel/processor/interceptor/TraceInterceptorTest.java;components/camel-spring/src/test/java/org/apache/camel/spring/interceptor/TraceFormatterTest.java;components/camel-spring/src/test/java/org/apache/camel/spring/interceptor/TracerConfigurationTest.java;components/camel-spring/src/test/resources/org/apache/camel/spring/interceptor/tracerConfigurationTest.xml;
129,969,Bug,Closed,Fixed,camel-core,Major,Geoff Gibbs,2008/10/08 15:16:39 +0100,2008/10/08 20:16:01 +0100,Claus Ibsen,2008/10/08 20:16:01 +0100,0.207893519,0.0,CamelContext.setRoutes() documentation is misleading   ,The javaDoc for CamelContext.setRoutes() states:'Sets the routes for this context  replacing any current routes'Yet when used  and the context started  startRouteDefinitions() is used first  causing any existing routes created through the definitions (such as those from RouteBuilders) to be re-created and started before the new routes provided to setRoutes() are started.   ,1.4.0,1.5.0,0,0,51,1,2,1,0,0,0,0,0.0,0.0,1.0,1.0,camel-core/src/main/java/org/apache/camel/CamelContext.java;
130,970,Bug,Closed,Fixed,camel-spring,Major,Hadrian Zbarcea,2008/10/08 18:40:06 +0100,2008/10/08 18:40:06 +0100,Hadrian Zbarcea,2008/10/08 19:23:21 +0100,0.030034722000000003,0.030034722000000003,createConnector attribute for CamelJMXAgentType should default to 'true'   ,   ,1.4.0,1.5.0,0,0,1,1,1,1,0,0,0,0,0.0,0.0,1.0,1.0,components/camel-spring/src/main/java/org/apache/camel/spring/CamelJMXAgentType.java;
132,978,Improvement,Closed,Fixed,camel-mail,Minor,Claus Ibsen,2008/10/12 08:15:41 +0100,2008/10/12 08:15:41 +0100,Claus Ibsen,2008/10/12 10:47:18 +0100,0.10528935199999999,0.10528935199999999,camel-mail - type converter to InputStream   ,camel-mail need a type converter to InputStream Currently we have type converters to StringSee nabble:http://www.nabble.com/Process-Mail-Attachment-InvalidPayloadException-Camel-1.4.0-td19937573s22882.html   ,1.4.0,1.5.0,0,0,18,1,1,1,0,0,0,0,0.0,0.0,1.0,1.0,components/camel-mail/src/main/java/org/apache/camel/component/mail/MailConverters.java;
134,983,Bug,Closed,Fixed,camel-core,Major,Claus Ibsen,2008/10/13 20:05:35 +0100,2008/10/14 15:20:34 +0100,Claus Ibsen,2008/10/15 19:54:29 +0100,1.992291667,1.1902199070000001,BeanInfo - should consider overridden methods when selecting method from operations list   ,See nabble:http://www.nabble.com/BeanInfo.chooseMethodWithMatchingBody-throws-an-AmbiguousMethodCallException-when-there%27s-no-ambiguity-td19959124s22882.html   ,1.4.0,1.5.0,0,1,5,1,9,1,0,0,0,0,0.0,0.0,4.0,8.0,camel-core/src/main/java/org/apache/camel/component/bean/BeanInfo.java;camel-core/src/main/java/org/apache/camel/component/bean/BeanInfo.java;camel-core/src/test/java/org/apache/camel/component/bean/BeanInfoInheritanceTest.java;camel-core/src/test/java/org/apache/camel/processor/BeanRecipientListTest.java;camel-core/src/test/java/org/apache/camel/processor/SplitterTest.java;camel-core/src/main/java/org/apache/camel/component/bean/BeanInfo.java;camel-core/pom.xml;camel-core/src/main/java/org/apache/camel/component/bean/BeanInfo.java;
135,985,Improvement,Closed,Fixed,camel-core; camel-spring,Minor,Claus Ibsen,2008/10/14 13:13:35 +0100,2008/11/21 14:32:29 +0100,Jonathan Anstey,2008/11/21 14:57:00 +0100,38.07181713,0.017025463,bean binding - annotation to get the exception from exchange   ,If you are doing error handling using POJO beans to do some error handling code and using bean binding annoations to get the stuff from the exchange  we are missing an annotation to get the caused exceptionSuch as a @Exception or @Fault if that is a better nameSee nabble:http://www.nabble.com/Error-Handler-and-OutHeaders-td19970966s22882.htmljstrachan using @Exception or @Fault or whatever on a bean method call to pull out the Exchange's fault/exception right? 14:02 jstrachan if so definitely!   ,1.4.0,2.0-M1,0,0,76,1,3,2,0,0,0,0,0.0,0.0,1.0,5.0,camel-core/src/main/java/org/apache/camel/ExchangeException.java;camel-core/src/main/java/org/apache/camel/builder/ExpressionBuilder.java;camel-core/src/main/java/org/apache/camel/component/bean/BeanInfo.java;camel-core/src/test/java/org/apache/camel/component/bean/BeanWithExchangeExceptionAnnotationTest.java;camel-core/src/test/java/org/apache/camel/component/bean/MyCustomException.java;
141,1023,Bug,Closed,Fixed,tooling,Major,Claus Ibsen,2008/10/24 06:51:53 +0100,2008/10/24 06:51:53 +0100,Claus Ibsen,2008/10/27 13:36:30 +0100,3.280983796,3.280983796,camel:dot - pipeline is drawn as a multicast   ,And it has a few other areas as well that could be polished.   ,1.5.0,1.5.0,0,0,13,1,2,1,0,0,0,0,0.0,0.0,1.0,4.0,camel-core/src/main/java/org/apache/camel/view/ModelFileGenerator.java;camel-core/src/main/java/org/apache/camel/view/NodeData.java;camel-core/src/main/java/org/apache/camel/view/RouteDotGenerator.java;camel-core/src/test/java/org/apache/camel/view/DotViewTest.java;
142,1036,Improvement,Closed,Fixed,camel-core; camel-spring,Major,Jonathan Anstey,2008/10/30 15:03:20 +0100,2008/10/30 15:03:20 +0100,Jonathan Anstey,2008/10/30 18:03:39 +0100,0.125219907,0.125219907,Add ability to configure log level on exceptions from DLC retry mechanism   ,Right now  when Camel tries to redeliver an message a number of times (using the DLC)  the exceptions are logged as ERROR. Sometimes though  these retries may be considered part of normal operation. I'm going to put in DSL options to configure this log level. Something like this will be possible:onException(AException.class).maximumRedeliveries(5) .retriesExhaustedLogLevel(LoggingLevel.DEBUG) .retryAttemptedLogLevel(LoggingLevel.DEBUG) .process(new MyExceptionProcessor('I got an Exception.'));   ,1.5.0,1.6.0; 2.0-M1,0,0,67,1,4,2,0,0,0,0,0.0,0.0,2.0,30.0,camel-core/src/main/java/org/apache/camel/processor/RedeliveryPolicy.java;camel-core/src/test/java/org/apache/camel/builder/CustomLog.java;camel-core/src/test/java/org/apache/camel/builder/ExceptionBuilderWithRetryLoggingLevelSetTest.java;camel-core/src/test/java/org/apache/camel/builder/MyExceptionThrowingProcessor.java;camel-core/src/test/java/org/apache/camel/component/bean/BeanPipelineTest.java;components/camel-spring/src/test/java/org/apache/camel/spring/processor/onexception/SpringExceptionBuilderWithRetryLoggingLevelSetTest.java;components/camel-spring/src/test/resources/org/apache/camel/spring/processor/onexception/exceptionBuilderWithRetryLoggingLevelSet.xml;camel-core/src/main/java/org/apache/camel/builder/BuilderSupport.java;camel-core/src/main/java/org/apache/camel/builder/DeadLetterChannelBuilder.java;camel-core/src/main/java/org/apache/camel/builder/LoggingErrorHandlerBuilder.java;camel-core/src/main/java/org/apache/camel/builder/RouteBuilder.java;camel-core/src/main/java/org/apache/camel/component/log/LogComponent.java;camel-core/src/main/java/org/apache/camel/impl/LoggingExceptionHandler.java;camel-core/src/main/java/org/apache/camel/model/ExceptionType.java;camel-core/src/main/java/org/apache/camel/model/LoggingLevel.java;camel-core/src/main/java/org/apache/camel/model/RedeliveryPolicyType.java;camel-core/src/main/java/org/apache/camel/model/RoutesType.java;camel-core/src/main/java/org/apache/camel/processor/DeadLetterChannel.java;camel-core/src/main/java/org/apache/camel/processor/Logger.java;camel-core/src/main/java/org/apache/camel/processor/LoggingErrorHandler.java;camel-core/src/main/java/org/apache/camel/processor/LoggingLevel.java;camel-core/src/main/java/org/apache/camel/processor/RedeliveryPolicy.java;camel-core/src/main/java/org/apache/camel/processor/ThroughputLogger.java;camel-core/src/main/java/org/apache/camel/processor/interceptor/Tracer.java;camel-core/src/main/resources/org/apache/camel/model/jaxb.index;camel-core/src/test/java/org/apache/camel/builder/ExceptionBuilderWithRetryLoggingLevelSetTest.java;camel-core/src/test/java/org/apache/camel/processor/DeadLetterChannelTest.java;camel-core/src/test/java/org/apache/camel/processor/FaultRetryRouteTest.java;camel-core/src/test/java/org/apache/camel/processor/FaultRouteTest.java;camel-core/src/test/java/org/apache/camel/processor/TracerConfigurationTest.java;
143,1039,Improvement,Closed,Fixed,camel-core,Major,Jonathan Anstey,2008/10/31 18:49:04 +0100,2008/10/31 18:49:04 +0100,Jonathan Anstey,2008/10/31 19:34:09 +0100,0.03130787,0.03130787,Add support to tracer for logging out messages   ,   ,1.5.0,1.6.0; 2.0-M1,0,0,1,1,4,2,1,0,0,0,0.0,0.0,3.0,8.0,components/camel-spring/src/test/java/org/apache/camel/spring/processor/SpringTraceInterceptorWithOutBodyTraceTest.java;components/camel-spring/src/test/resources/org/apache/camel/spring/processor/traceInterceptorWithOutBodyTrace.xml;camel-core/src/test/java/org/apache/camel/processor/TraceInterceptorWithOutBodyTraceTest.java;camel-core/src/main/java/org/apache/camel/processor/interceptor/TraceFormatter.java;camel-core/src/main/java/org/apache/camel/processor/interceptor/TraceInterceptor.java;camel-core/src/main/java/org/apache/camel/processor/interceptor/Tracer.java;camel-core/src/test/java/org/apache/camel/processor/TraceInterceptorWithOutBodyTraceTest.java;camel-core/src/test/java/org/apache/camel/processor/aggregator/PredicateAggregatorCollectionTest.java;
145,1053,Bug,Closed,Fixed,camel-spring-integration,Major,Jonathan Anstey,2008/11/05 01:21:13 +0100,2008/11/05 13:48:40 +0100,Willem Jiang,2008/11/05 13:48:40 +0100,0.5190625,0.0,spring integration xsd change breaks component   ,Thread is here http://www.nabble.com/-HEADS-UP--camel-spring-integration-issue-td20331450s22882.html   ,1.4.0; 1.5.0,1.6.0; 2.0-M1,0,0,7,1,3,2,1,1,0,0,0.0,0.0,2.0,23.0,components/camel-spring-integration/pom.xml;components/camel-spring-integration/src/main/java/org/apache/camel/component/spring/integration/SpringIntegrationBinding.java;components/camel-spring-integration/src/main/java/org/apache/camel/component/spring/integration/SpringIntegrationConsumer.java;components/camel-spring-integration/src/main/java/org/apache/camel/component/spring/integration/SpringIntegrationEndpoint.java;components/camel-spring-integration/src/main/java/org/apache/camel/component/spring/integration/SpringIntegrationMessage.java;components/camel-spring-integration/src/main/java/org/apache/camel/component/spring/integration/SpringIntegrationProducer.java;components/camel-spring-integration/src/main/java/org/apache/camel/component/spring/integration/adapter/AbstractCamelAdapter.java;components/camel-spring-integration/src/main/java/org/apache/camel/component/spring/integration/adapter/CamelSourceAdapter.java;components/camel-spring-integration/src/main/java/org/apache/camel/component/spring/integration/adapter/CamelTargetAdapter.java;components/camel-spring-integration/src/main/java/org/apache/camel/component/spring/integration/adapter/config/CamelTargetAdapterParser.java;components/camel-spring-integration/src/main/java/org/apache/camel/component/spring/integration/converter/SpringIntegrationConverter.java;components/camel-spring-integration/src/main/resources/schema/camel-spring-integration.xsd;components/camel-spring-integration/src/test/java/org/apache/camel/component/spring/integration/HelloWorldService.java;components/camel-spring-integration/src/test/java/org/apache/camel/component/spring/integration/SpringIntegrationOneWayConsumerTest.java;components/camel-spring-integration/src/test/java/org/apache/camel/component/spring/integration/SpringIntegrationProducerTest.java;components/camel-spring-integration/src/test/java/org/apache/camel/component/spring/integration/SpringIntegrationTwoWayConsumerTest.java;components/camel-spring-integration/src/test/java/org/apache/camel/component/spring/integration/adapter/CamelSourceAdapterTest.java;components/camel-spring-integration/src/test/java/org/apache/camel/component/spring/integration/adapter/CamelTargetAdapterTest.java;components/camel-spring-integration/src/test/java/org/apache/camel/component/spring/integration/adapter/ConfigurationTest.java;components/camel-spring-integration/src/test/resources/org/apache/camel/component/spring/integration/adapter/CamelTarget.xml;components/camel-spring-integration/src/test/resources/org/apache/camel/component/spring/integration/producer.xml;components/camel-spring-integration/src/test/resources/org/apache/camel/component/spring/integration/twoWayConsumer.xml;components/camel-spring-integration/src/main/java/org/apache/camel/component/spring/integration/SpringIntegrationConsumer.java;
146,1057,Bug,Closed,Fixed,camel-saxon,Critical,Balazs Zsoldos,2008/11/07 01:56:37 +0100,2008/11/07 14:09:07 +0100,Claus Ibsen,2008/11/07 14:23:32 +0100,0.51869213,0.010011574,XQuery creates an empty out message that makes it impossible to chain more processors behind it   ,When using XQuery the getOut() function is called on the message so if it is not used at a place where the out is filled an empty out message will be created. With this xquery cannot be used for example in setBody  setHeader... and anywhere where the out is not filled.An example where this causes real trouble:&lt;choice&gt; &lt;when&gt; &lt;xquery&gt;...&lt;/xquery&gt; &lt;to uri='direct:follow' /&gt; &lt;/when&gt;&lt;/choice&gt;...&lt;from uri='direct:follow'&gt;&lt;to ...&gt;&lt;to ...&gt;In the patch the out property in the xquery context is filled only if it is not null. With it all of my pipelines seem to work well for me.   ,1.4.0; 1.5.0,1.6.0; 2.0-M1,0,1,95,1,4,2,1,1,0,0,0.0,0.0,1.0,1.0,components/camel-saxon/src/main/java/org/apache/camel/component/xquery/XQueryBuilder.java;
148,1070,Bug,Closed,Fixed,camel-core,Major,Claus Ibsen,2008/11/10 17:38:32 +0100,2008/11/10 17:53:06 +0100,Claus Ibsen,2008/11/10 17:55:17 +0100,0.011631943999999998,0.001516204,org.apache.camel.Message - hasAttachments is buggy   ,I must use if (exchange.getIn().getAttachments().size() &gt; 0) {Instead of if (exchange.getIn().hasAttachments()) {As the latter always returns false. Or at least returns false even though the size is &gt; 0   ,1.4.0; 1.5.0,1.6.0; 2.0-M1,0,0,29,1,1,1,1,1,0,0,0.0,0.0,1.0,1.0,camel-core/src/main/java/org/apache/camel/impl/DefaultMessage.java;
149,1074,Bug,Closed,Fixed,camel-jaxb,Major,tim mcnamara,2008/11/11 01:21:20 +0100,2008/11/13 07:19:04 +0100,Willem Jiang,2008/11/27 11:23:43 +0100,16.41832176,14.16989583,.unmarshal(new JaxbDataFormat('com.foo.bar')) returning JAXBElement   ,using .unmarshal(new JaxbDataFormat('com.foo.bar') is returning a JAXBElement instead of the desired object that was generated by xjc.   ,1.4.0,1.6.0; 2.0-M1,0,0,17,1,7,3,1,0,0,0,0.0,0.0,2.0,8.0,camel-core/src/main/java/org/apache/camel/model/dataformat/JaxbDataFormat.java;components/camel-jaxb/src/test/java/org/apache/camel/jaxb/CamelJaxbSpringTest.java;components/camel-jaxb/src/test/java/org/apache/camel/jaxb/CamelJaxbTest.java;components/camel-jaxb/src/test/resources/org/apache/camel/jaxb/CamelJaxbTest.xml;components/camel-jaxb/src/main/java/org/apache/camel/converter/jaxb/JaxbDataFormat.java;components/camel-jaxb/src/test/java/org/apache/camel/foo/bar/ObjectFactory.java;components/camel-jaxb/src/test/java/org/apache/camel/foo/bar/PersonType.java;components/camel-jaxb/src/test/java/org/apache/camel/jaxb/CamelJaxbTest.java;
153,1091,Bug,Closed,Fixed,camel-jetty,Major,Roman Kalukiewicz,2008/11/14 17:54:13 +0100,2008/11/14 17:54:13 +0100,Roman Kalukiewicz,2008/11/17 15:03:33 +0100,2.8814814810000002,2.8814814810000002,jetty endpoints ignore host specified in URI and expose an endpoint on all interfaces   ,http://www.nabble.com/Jetty-and-Mina%3A-how-to-bind-to-%22anylocal%22-AKA-%22wildcard%22-address--tp20475674s22882p20494645.html   ,1.5.0,1.6.0; 2.0-M1,0,0,4,1,10,4,1,0,0,1,0.0,0.0,7.0,9.0,components/camel-jetty/src/test/java/org/apache/camel/component/jetty/InterfacesTest.java;components/camel-jetty/src/test/java/org/apache/camel/component/jetty/InterfacesTest.java;components/camel-jetty/src/test/java/org/apache/camel/component/jetty/InterfacesTest.java;components/camel-jetty/src/test/java/org/apache/camel/component/jetty/InterfacesTest.java;components/camel-jetty/src/main/java/org/apache/camel/component/jetty/CamelContinuationServlet.java;components/camel-jetty/src/main/java/org/apache/camel/component/jetty/JettyHttpComponent.java;components/camel-jetty/src/test/java/org/apache/camel/component/jetty/InterfacesTest.java;components/camel-jetty/src/test/java/org/apache/camel/component/jetty/InterfacesTest.java;components/camel-jetty/src/test/java/org/apache/camel/component/jetty/InterfacesTest.java;
163,1191,Bug,Closed,Fixed,camel-velocity,Minor,Claus Ibsen,2008/12/17 09:33:52 +0100,2008/12/17 09:33:52 +0100,Jonathan Anstey,2008/12/17 15:41:23 +0100,0.25521990699999997,0.25521990699999997,camel-velocity - log4j is needed at runtime   ,See nabble:http://www.nabble.com/velocity%3A-Couldn%27t-find-class-org.apache.velocity.runtime.log.SimpleLog4JLogSystem-td21036449s22882.htmlJon do you mind taking a look at this  you are are good at maven pom's   ,1.5.0,1.6.0; 2.0-M1,0,0,28,1,3,2,0,0,0,0,0.0,0.0,1.0,1.0,components/camel-velocity/pom.xml;
165,1196,Bug,Closed,Fixed,camel-core,Trivial,Claus Ibsen,2008/12/18 06:59:04 +0100,2008/12/18 06:59:04 +0100,Claus Ibsen,2008/12/18 14:09:59 +0100,0.299247685,0.299247685,MockEndpoint - sleep for empty test doesnt work   ,See nabble:http://www.nabble.com/MockEndpoint---sleep-for-empty-tests-is-flawed--td21067367s22882.html   ,1.5.0,1.6.0; 2.0-M1,0,0,5,1,2,1,0,0,0,0,0.0,0.0,1.0,1.0,camel-core/src/main/java/org/apache/camel/component/mock/MockEndpoint.java;
166,1199,Bug,Closed,Fixed,camel-core,Major,Ron Gavlin,2008/12/19 13:20:41 +0100,2008/12/29 16:32:47 +0100,Gert Vanthienen,2009/01/05 09:53:57 +0100,16.85643519,6.723032407000001,Throttler appears to 'throttle' per thread instead of throttling across multiple threads   ,   ,1.5.0,1.6.0; 2.0-M1,0,0,1,1,6,4,0,0,0,0,1.0,0.0,4.0,7.0,camel-core/src/main/java/org/apache/camel/processor/Throttler.java;camel-core/src/test/java/org/apache/camel/processor/ThrottlerTest.java;camel-core/src/main/java/org/apache/camel/processor/Throttler.java;components/camel-spring/src/test/resources/org/apache/camel/spring/processor/throttler.xml;camel-core/src/main/java/org/apache/camel/processor/Throttler.java;camel-core/src/test/java/org/apache/camel/processor/ThrottlerTest.java;components/camel-spring/src/test/resources/org/apache/camel/spring/processor/throttler.xml;
169,1209,Improvement,Closed,Fixed,camel-xmpp,Major,Claus Ibsen,2008/12/31 10:27:29 +0100,2008/12/31 18:46:30 +0100,Jonathan Anstey,2008/12/31 19:32:16 +0100,0.378321759,0.031782407,camel-xmpp to work with google chat   ,See blog entryhttp://www.andrejkoelewijn.com/wp/2008/12/30/using-google-talk-from-java-example/There is a solution that works with plain java. Could be used to identify what needs to be fixed in Camel to get it working with Google chat as well.Notice I haven't verified if it doesn't already work with google chat. Just created this ticket to not forget it.   ,1.5.0,1.6.0; 2.0-M1,0,0,54,1,5,3,0,0,0,0,0.0,0.0,1.0,5.0,components/camel-xmpp/pom.xml;components/camel-xmpp/src/main/java/org/apache/camel/component/xmpp/XmppEndpoint.java;components/camel-xmpp/src/main/java/org/apache/camel/component/xmpp/XmppPrivateChatProducer.java;components/camel-xmpp/src/test/java/org/apache/camel/component/xmpp/GoogleTalkTest.java;components/camel-xmpp/src/test/java/org/apache/camel/component/xmpp/UriConfigurationTest.java;
170,1211,Improvement,Closed,Fixed,camel-core; camel-restlet,Minor,Przemyslaw Budzik,2009/01/01 22:38:47 +0100,,Unassigned,2010/03/12 12:18:58 +0100,434.56957180000006,,camel-restlet security extension   ,Now we have basic http auth. Quick shot is adding digest as it is supported by Restlet  but I have something more in mind. As I'm using token based auth and for me http auth is not suitable (pushing credentials back and forth all the time etc). How about a pattern where from one endpoint you can consume a ticket/token/sessionId and you can use it as a header to authenticate? As now the realm is to keep login and pass and it could be something like a bean that can validate the token. Of course that data would not be static so it is more about a callback (eg. getTokens()) than a static map/list. And finally as we have the uri we can resolve an 'operation' and do authorization (so uri+method is the target). I mean in my project I have processor that does stuff like that and it would be cool to have all those things in one place in consumer (and provide only data and have skeletal logic under the hood).Now the question is if my idea makes sense and if so what are your suggestions on how to implement that w/o reinventing the wheel (and not using ACEGI )Btw  Claus  William - logs about attaching/detaching restlets are at info level and it's kind of spamming if there are say 20 endpoints... Maybe it should be at debug?   ,1.6.0; 2.0.0,1.6.0; 2.0-M1,0,0,237,0,5,2,0,0,0,1,0.0,0.0,1.0,1.0,components/camel-restlet/src/main/java/org/apache/camel/component/restlet/RestletComponent.java;
175,1247,Bug,Closed,Fixed,camel-ftp,Major,Paddy Daly,2009/01/12 13:18:20 +0100,2009/01/12 13:29:07 +0100,Claus Ibsen,2009/01/14 06:05:12 +0100,1.6992129630000001,1.6917245369999998,SFTP : Polling - Cannot list directory Error   ,http://www.nabble.com/SFTP-%3A-Polling---Cannot-list-directory-to21413159s22882.html   ,2.0.0,2.0-M1,0,0,4,1,19,2,0,0,0,0,0.0,0.0,4.0,8.0,components/camel-ftp/src/main/java/org/apache/camel/component/file/remote/SftpConsumer.java;components/camel-ftp/src/main/java/org/apache/camel/component/file/remote/SftpConsumer.java;components/camel-ftp/src/main/java/org/apache/camel/component/file/remote/SftpConsumer.java;components/camel-ftp/src/main/java/org/apache/camel/component/file/remote/FtpConsumer.java;components/camel-ftp/src/main/java/org/apache/camel/component/file/remote/FtpRemoteFileOperations.java;components/camel-ftp/src/main/java/org/apache/camel/component/file/remote/SftpConsumer.java;components/camel-ftp/src/main/java/org/apache/camel/component/file/remote/SftpRemoteFileOperations.java;components/camel-ftp/src/test/java/org/apache/camel/component/file/remote/FtpConsumerWithNoFileOptionTest.java;
177,1270,Bug,Closed,Fixed,camel-core; camel-spring,Minor,Claus Ibsen,2009/01/18 10:56:18 +0100,2009/01/18 10:56:18 +0100,Claus Ibsen,2009/01/18 11:06:27 +0100,0.007048611,0.007048611,Starting Camel using Main from camel:run or Main.class - countdown latch is hanging   ,The countdown latch in MainSupport is not completed when Main is stopping.Then we have a hanging thread. Can bee seen using ctrl + /   ,1.5.0,1.6.0; 2.0-M1,0,0,24,1,2,1,0,0,1,0,0.0,0.0,1.0,2.0,camel-core/src/main/java/org/apache/camel/util/MainSupport.java;components/camel-spring/src/main/java/org/apache/camel/spring/Main.java;
183,1297,Improvement,Closed,Fixed,camel-core,Major,Roman Kalukiewicz,2009/01/27 13:34:16 +0100,2009/01/27 13:34:16 +0100,Roman Kalukiewicz,2009/02/09 22:21:16 +0100,13.36597222,13.36597222,Seda component should configure its executor   ,Currently SEDA endpoint processes only using 1 thread so it is impossible to easily configure few concurrent processings on 1 seda endpoint. I believe SEDA endpoint could be configured with some executor and/or thread number that we would like to use to process given flows.   ,1.5.0,2.0-M1; 1.6.1,0,0,45,1,4,3,0,0,0,0,0.0,0.0,1.0,5.0,camel-core/src/main/java/org/apache/camel/component/seda/SedaComponent.java;camel-core/src/main/java/org/apache/camel/component/seda/SedaConsumer.java;camel-core/src/main/java/org/apache/camel/component/seda/SedaEndpoint.java;camel-core/src/test/java/org/apache/camel/component/seda/SedaConfigureTest.java;camel-core/src/test/java/org/apache/camel/component/seda/SedaConsumerStartStopTest.java;
184,1325,Bug,Closed,Fixed,camel-core,Major,Trev,2009/02/08 22:33:07 +0100,,Unassigned,2009/02/09 00:10:16 +0100,0.067465278,,Two more NullPointerExceptions when context classloader is null   ,When I applied the CAMEL-1301 fix (thanks Claus) I hit two more NullPointerExceptions caused by code that assumes that the context classloader will never be null.Here's the relevant part of one stack trace:java.lang.NullPointerException at org.apache.camel.impl.converter.AnnotationTypeConverterLoader.findPackages(AnnotationTypeConverterLoader.java:97) at org.apache.camel.impl.converter.AnnotationTypeConverterLoader.findPackageNames(AnnotationTypeConverterLoader.java:91)And the other:java.lang.NullPointerException at org.apache.camel.util.ResolverUtil.getResources(ResolverUtil.java:402) at org.apache.camel.util.ResolverUtil.find(ResolverUtil.java:313) at org.apache.camel.util.ResolverUtil.find(ResolverUtil.java:290)A patch is attached.   ,1.5.0,1.6.0; 2.0-M1,0,1,51,0,3,2,0,0,0,0,0.0,0.0,0.0,0.0,
189,1384,Bug,Closed,Fixed,camel-core,Major,Michael Chen,2009/02/25 18:54:15 +0100,2009/02/26 18:32:59 +0100,Claus Ibsen,2009/02/27 11:00:24 +0100,1.6709375,0.685706019,ExchangeHelper should respect ExchangePattern.InOptionalOut   ,The utility method org.apache.camel.util.ExchangeHelper.copyResults() is use by many core classes. However  this method does not properly support MEP InOptionalOut.Assuming in an InOptionalOut exchange  having no out message means just that &#8211; no out message should be sent  then the following lines in this method// Message out = source.getOut(false); if (out != null) { result.getOut(true).copyFrom(out); } else { // no results so lets copy the last inputshould be changed to:// Message out = source.getOut(false); if (out != null) { result.getOut(true).copyFrom(out); } else if (result.getPattern() == ExchangePattern.InOptionalOut) { result.setOut(null); } else { // no results so lets copy the last input   ,1.6.0,2.0-M1,0,0,130,1,2,1,0,0,1,1,1.0,0.0,1.0,5.0,camel-core/src/main/java/org/apache/camel/component/dataset/DataSetConsumer.java;camel-core/src/main/java/org/apache/camel/component/dataset/DataSetEndpoint.java;camel-core/src/main/java/org/apache/camel/impl/DefaultProducerTemplate.java;camel-core/src/main/java/org/apache/camel/util/ExchangeHelper.java;camel-core/src/test/java/org/apache/camel/processor/RouteMEPOptionalOutTest.java;
191,1407,Improvement,Closed,Fixed,camel-quartz,Major,Claus Ibsen,2009/02/28 15:16:35 +0100,2009/02/28 15:16:35 +0100,Claus Ibsen,2009/02/28 16:11:26 +0100,0.038090278,0.038090278,Camel-quartz - improve setting of cron expression to be more cron like   ,See nabble:http://www.nabble.com/Re%3A-Camel-quartz-td22247508.html   ,1.6.0,2.0-M1,0,0,5,1,3,1,0,0,0,0,0.0,0.0,2.0,11.0,components/camel-quartz/src/main/java/org/apache/camel/component/quartz/QuartzComponent.java;components/camel-quartz/src/test/java/org/apache/camel/component/quartz/QuartzCronUsingPlusAsSpaceRouteTest.java;components/camel-quartz/pom.xml;components/camel-quartz/src/main/java/org/apache/camel/component/quartz/CamelJob.java;components/camel-quartz/src/main/java/org/apache/camel/component/quartz/QuartzComponent.java;components/camel-quartz/src/main/java/org/apache/camel/component/quartz/QuartzConstants.java;components/camel-quartz/src/main/java/org/apache/camel/component/quartz/QuartzEndpoint.java;components/camel-quartz/src/main/java/org/apache/camel/component/quartz/StatefulCamelJob.java;components/camel-quartz/src/test/java/org/apache/camel/component/quartz/QuartzCronRouteTest.java;components/camel-quartz/src/test/java/org/apache/camel/component/quartz/QuartzEndpointConfigureTest.java;components/camel-quartz/src/test/resources/log4j.properties;
193,1411,Bug,Closed,Fixed,osgi,Critical,Claus Ibsen,2009/03/03 10:24:47 +0100,2009/03/03 14:16:16 +0100,Claus Ibsen,2009/03/03 17:59:02 +0100,0.31545138899999997,0.154699074,CamelContext - Add ClassResolver to be used when you need to load a class instead of ObjectHelper.loadClass to work in OSGi environments   ,Add the skeleton and let Willem add the stuff in camel-osgi   ,1.6.0,2.0-M1,1,1,11,1,11,4,0,0,1,0,0.0,0.0,2.0,49.0,camel-core/src/main/java/org/apache/camel/CamelContext.java;camel-core/src/main/java/org/apache/camel/component/file/GenericFileEndpoint.java;camel-core/src/main/java/org/apache/camel/impl/DefaultCamelContext.java;camel-core/src/main/java/org/apache/camel/impl/DefaultClassResolver.java;camel-core/src/main/java/org/apache/camel/impl/DefaultPackageScanClassResolver.java;camel-core/src/main/java/org/apache/camel/impl/ReportingTypeConverterLoader.java;camel-core/src/main/java/org/apache/camel/impl/WebSpherePacakageScanClassResolver.java;camel-core/src/main/java/org/apache/camel/impl/converter/AnnotationTypeConverterLoader.java;camel-core/src/main/java/org/apache/camel/impl/converter/DefaultTypeConverter.java;camel-core/src/main/java/org/apache/camel/model/dataformat/DataFormatType.java;camel-core/src/main/java/org/apache/camel/model/loadbalancer/LoadBalancerType.java;camel-core/src/main/java/org/apache/camel/processor/interceptor/TraceInterceptor.java;camel-core/src/main/java/org/apache/camel/spi/ClassResolver.java;camel-core/src/main/java/org/apache/camel/spi/PackageScanClassResolver.java;camel-core/src/main/java/org/apache/camel/spi/PackageScanFilter.java;camel-core/src/main/java/org/apache/camel/util/FactoryFinder.java;camel-core/src/main/java/org/apache/camel/util/ObjectHelper.java;camel-core/src/main/java/org/apache/camel/util/ResolverUtil.java;camel-core/src/main/java/org/apache/camel/util/WebSphereResolverUtil.java;camel-core/src/test/java/org/apache/camel/converter/ConverterTest.java;camel-core/src/test/java/org/apache/camel/converter/JaxpTest.java;camel-core/src/test/java/org/apache/camel/converter/StringSourceTest.java;components/camel-bindy/src/main/java/org/apache/camel/dataformat/bindy/BindyAbstractFactory.java;components/camel-bindy/src/main/java/org/apache/camel/dataformat/bindy/BindyCsvFactory.java;components/camel-bindy/src/main/java/org/apache/camel/dataformat/bindy/BindyKeyValuePairFactory.java;components/camel-bindy/src/main/java/org/apache/camel/dataformat/bindy/csv/BindyCsvDataFormat.java;components/camel-bindy/src/main/java/org/apache/camel/dataformat/bindy/kvp/BindyKeyValuePairDataFormat.java;components/camel-bindy/src/main/java/org/apache/camel/dataformat/bindy/util/AnnotationModelLoader.java;components/camel-jcr/src/test/java/org/apache/camel/component/jcr/JcrConverterTest.java;components/camel-osgi/src/main/java/org/apache/camel/osgi/CamelContextFactoryBean.java;components/camel-osgi/src/main/java/org/apache/camel/osgi/OsgiAnnotationTypeConverterLoader.java;components/camel-osgi/src/main/java/org/apache/camel/osgi/OsgiPackageScanClassResolver.java;components/camel-osgi/src/main/java/org/apache/camel/osgi/OsgiResolverUtil.java;components/camel-osgi/src/test/java/org/apache/camel/osgi/CamelOsgiTestSupport.java;components/camel-osgi/src/test/java/org/apache/camel/osgi/OsgiAnnotationTypeConverterLoaderTest.java;components/camel-osgi/src/test/java/org/apache/camel/osgi/OsgiResolverUtilTest.java;components/camel-scala/src/test/scala/org/apache/camel/scala/ScalaTypeConverterTest.scala;components/camel-spring/src/main/java/org/apache/camel/spring/CamelContextFactoryBean.java;components/camel-spring/src/main/java/org/apache/camel/spring/RouteBuilderFinder.java;tooling/maven/camel-maven-plugin/src/main/java/org/apache/camel/maven/ConvertersMojo.java;camel-core/pom.xml;camel-core/src/main/java/org/apache/camel/impl/DefaultClassResolver.java;camel-core/src/main/java/org/apache/camel/util/ObjectHelper.java;components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsComponent.java;components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsQueueEndpoint.java;components/camel-jpa/src/main/java/org/apache/camel/component/jpa/JpaComponent.java;components/camel-spring/src/main/java/org/apache/camel/component/xslt/XsltComponent.java;components/camel-spring/src/main/java/org/apache/camel/spring/util/SimpleRouteBuilder.java;components/camel-web/src/main/java/org/apache/camel/web/resources/ConvertersResource.java;
194,1412,Bug,Closed,Fixed,camel-jms,Major,Willem Jiang,2009/03/03 10:58:51 +0100,2009/03/03 11:00:26 +0100,Willem Jiang,2009/03/06 08:35:54 +0100,2.9007291669999997,2.89962963,Can not load the QueueBrowserStrategy in OSGI environment   ,Here is the mail thread which discusses about it.http://www.nabble.com/Classloading-and-OSGI-to22303475.html#a22303475   ,1.6.0,2.0-M1; 1.6.1,0,0,12,1,2,2,0,0,0,0,0.0,0.0,1.0,1.0,components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsComponent.java;
195,1414,Bug,Closed,Fixed,camel-jms,Major,Nicolas Bouillon,2009/03/03 15:37:47 +0100,2009/03/03 15:59:14 +0100,Willem Jiang,2009/03/03 16:46:35 +0100,0.047777778,0.032881943999999996,JMSMessage vanishes attachments   ,When using this kind of route&lt;from uri='activemq:queue:test'/&gt;&lt;camel:process ref='mailProcessor' /&gt;&lt;to uri='smtp://localhost:25?to=user@localhost' /&gt;and trying to enrich the message in the mailProcessor withexchange.getIn().addAttachment('attachement.txt'  new DataHandler('Hello world'  'text/plain'));The received mail doesn't contains any attachment.If the input 'from' is a 'direct' instead of activemq  it works fine.Inspecting source code  MessageSupport.copyFrom(Message that) doesgetAttachments().putAll(that.getAttachments());but the child class JmsMessage doesn't.   ,2.0.0,2.0-M1; 1.6.1,0,0,52,1,3,3,0,0,0,0,0.0,0.0,2.0,2.0,components/camel-spring-integration/src/main/java/org/apache/camel/component/spring/integration/SpringIntegrationMessage.java;components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsMessage.java;
196,1417,Bug,Closed,Fixed,camel-core,Critical,Claus Ibsen,2009/03/04 09:26:41 +0100,2009/03/04 09:26:41 +0100,Claus Ibsen,2009/03/04 11:58:01 +0100,0.10509259300000001,0.10509259300000001,StreamCache causes to many type converters not possible   ,Since StreamCache is default turned on it cause to many convters attempt that fails in MessageSupport.No type converter available to convert from type: java.lang.Integer to the required type: org.apache.camel.StreamCache with value 1It hurts performance to much. See nabble:http://www.nabble.com/Performance-and-MessageSupport.getBody-%281.6.0%29-td22291841s22882.html   ,1.6.0,2.0-M1; 1.6.1,0,0,41,1,2,1,0,0,0,0,1.0,0.0,2.0,9.0,camel-core/src/main/java/org/apache/camel/component/mock/MockEndpoint.java;camel-core/src/main/java/org/apache/camel/processor/interceptor/StreamCachingInterceptor.java;camel-core/src/test/java/org/apache/camel/component/mock/MockEndpointTest.java;camel-core/src/test/java/org/apache/camel/processor/RoutePerformanceTest.java;camel-core/src/main/java/org/apache/camel/impl/MessageSupport.java;camel-core/src/main/java/org/apache/camel/impl/converter/DefaultTypeConverter.java;camel-core/src/main/java/org/apache/camel/processor/interceptor/StreamCachingInterceptor.java;camel-core/src/test/java/org/apache/camel/processor/Camel715ThreadProcessorTest.java;camel-core/src/test/java/org/apache/camel/processor/RoutePerformanceTest.java;
197,1424,Improvement,Closed,Fixed,camel-core,Major,Claus Ibsen,2009/03/05 07:09:39 +0100,2009/03/13 10:59:36 +0100,Claus Ibsen,2009/03/26 13:01:11 +0100,21.24412037,13.08443287,Bean component - improve method selection logic for overloaded methods   ,If end users have overloaded methods with different types as method parameter Camel should try to find the method with exact type match from the payload.See nabble:http://www.nabble.com/Is-it-possible-to-overload-a-bean-method--td22338316s22882.html   ,1.6.0,1.6.1; 2.0-M2,0,0,30,1,5,1,0,0,0,0,0.0,0.0,4.0,9.0,camel-core/src/main/java/org/apache/camel/component/bean/BeanInfo.java;camel-core/src/main/java/org/apache/camel/component/bean/BeanConstants.java;camel-core/src/main/java/org/apache/camel/component/bean/BeanInfo.java;camel-core/src/main/java/org/apache/camel/component/bean/ParameterMappingStrategy.java;camel-core/src/test/java/org/apache/camel/component/bean/CustomParameterMappingStrategyTest.java;camel-core/src/test/java/org/apache/camel/processor/BeanWithExceptionTest.java;camel-core/src/main/java/org/apache/camel/component/bean/BeanInfo.java;camel-core/src/test/java/org/apache/camel/component/bean/BeanInfoAMoreComplexOverloadedTest.java;camel-core/src/main/java/org/apache/camel/component/bean/BeanInfo.java;
199,1443,Bug,Closed,Fixed,osgi,Major,Zhou,2009/03/10 05:14:36 +0100,2009/03/10 08:42:44 +0100,Willem Jiang,2009/03/12 08:47:48 +0100,2.148055556,2.003518519,Unable to resolve scripting languages in OSGi environment   ,The OsgiLanguageResolver.java created since CAMEL-1221 does not resolve scripting languages by using the default resolver declared in camel-script. The DefaultLanguageResolver  however in the non-osgi context  handles it properly.This leads to NullPointerException while launching a route in an OSGi container using a scripting language  e.g. javascript.Exception in thread 'SpringOsgiExtenderThread-2' java.lang.NullPointerException at org.apache.camel.model.language.ExpressionType.createPredicate(ExpressionType.java:145) at org.apache.camel.model.ExpressionNode.createFilterProcessor(ExpressionNode.java:95) at org.apache.camel.model.WhenType.createProcessor(WhenType.java:57) at org.apache.camel.model.ChoiceType.createProcessor(ChoiceType.java:73)...   ,1.6.0,2.0-M1; 1.6.1,0,1,69,1,3,2,0,0,0,0,0.0,1.0,2.0,10.0,camel-core/src/main/java/org/apache/camel/impl/DefaultLanguageResolver.java;components/camel-osgi/src/main/java/org/apache/camel/osgi/OsgiLanguageResolver.java;components/camel-osgi/src/test/java/org/apache/camel/osgi/OsgiLanguageResolverTest.java;components/camel-osgi/pom.xml;components/camel-osgi/src/main/java/org/apache/camel/osgi/Activator.java;components/camel-osgi/src/main/java/org/apache/camel/osgi/OsgiLanguageResolver.java;components/camel-osgi/src/test/java/org/apache/camel/osgi/CamelMockBundle.java;components/camel-osgi/src/test/java/org/apache/camel/osgi/OsgiLanguageResolverTest.java;components/camel-osgi/src/test/resources/META-INF/services/org/apache/camel/language/resolver/default;components/camel-osgi/src/test/resources/log4j.properties;
205,1492,Bug,Closed,Fixed,camel-jms,Major,Dejan Bosanac,2009/03/26 19:35:32 +0100,2009/03/27 08:03:46 +0100,Claus Ibsen,2009/03/27 10:28:56 +0100,0.620416667,0.100810185,Allow parementer append for jms bindings with no endpoint   ,See test failures in https://issues.apache.org/activemq/browse/AMQ-2182   ,2.0-M1,2.0-M2,0,0,8,1,4,2,1,0,0,0,0.0,0.0,2.0,2.0,components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsBinding.java;components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsBinding.java;
209,1504,Bug,Closed,Fixed,camel-http,Minor,Mathis Schwuchow,2009/03/31 09:47:08 +0100,2009/04/02 17:09:28 +0100,Claus Ibsen,2009/04/02 17:16:23 +0100,2.311979167,0.004803241,HTTP_URI and HTTP_PATH message headers not concatenated when sending messages to http endpoint   ,When a message is sent to an http endpoint  the path specified in the HTTP_PATH header is ignored.In the HttpProducer.createMethod() of the camel-http component  the URI is taken from the HTTP_URI header or the endpoint  but the HTTP_PATH header is not concatenated. See also the discussion on the mailing list: http://www.nabble.com/Setting-a-path-in-message-header-with-Camel-http-2.0M1-td22781504.html   ,2.0-M1,2.0-M2,0,0,54,1,4,2,1,0,0,1,0.0,0.0,1.0,2.0,components/camel-http/src/main/java/org/apache/camel/component/http/HttpProducer.java;components/camel-http/src/test/java/org/apache/camel/component/http/HttpGetWithPathHeaderTest.java;
211,1506,Bug,Closed,Fixed,camel-mail,Minor,Ryan Gardner,2009/03/31 22:18:17 +0100,2009/04/01 10:09:44 +0100,Willem Jiang,2009/04/02 08:43:19 +0100,1.4340509259999998,0.939988426,Recursively scan multipart nodes of an email for attachments - not just top level nodes   ,The current code will only scan the top level of a multipart message. This misses any attachments that are under another node.All unit tests still run for me after applying this patch.   ,2.0.0,2.0-M2,0,0,32,1,7,3,1,0,0,0,0.0,0.0,1.0,5.0,components/camel-mail/src/main/java/org/apache/camel/component/mail/MailBinding.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailConfiguration.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailMessage.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailUtils.java;components/camel-mail/src/test/java/org/apache/camel/component/mail/MimeMultipartAlternativeTest.java;
214,1530,Improvement,Closed,Fixed,camel-http,Major,Claus Ibsen,2009/04/14 14:03:26 +0100,2009/12/20 15:11:13 +0100,Christian M?ller,2010/02/23 13:48:50 +0100,314.9898611,64.94278935,Upgrade camel-http to use httpclient 4.0   ,Upgrading httpclient from 3.1 to 4.0 requires changes in the camel-http code as the API has change quite a lot.   ,2.0-M1,2.3.0,0,2,20,2,80,5,1,0,1,0,0.0,0.0,7.0,91.0,platforms/karaf/features/src/main/resources/features.xml;components/camel-http/src/main/java/org/apache/camel/component/http/HttpComponent.java;components/camel-http/src/main/java/org/apache/camel/component/http/HttpEndpoint.java;components/camel-http/src/main/java/org/apache/camel/component/http/HttpPollingConsumer.java;components/camel-http/src/main/java/org/apache/camel/component/http/HttpProducer.java;components/camel-http/src/main/java/org/apache/camel/component/http/HttpComponent.java;components/camel-http/src/main/java/org/apache/camel/component/http/HttpEndpoint.java;components/camel-http/src/test/java/org/apache/camel/component/http/helper/GZIPHelperTest.java;components/camel-http/src/test/java/org/apache/camel/component/http/helper/HttpProducerHelperTest.java;components/camel-http/src/test/java/org/apache/camel/component/http/helper/LoadingByteArrayOutputStreamTest.java;components/camel-http/src/main/java/org/apache/camel/component/http/HttpComponent.java;components/camel-http/src/test/java/org/apache/camel/component/http/HttpConcurrentTest.java;apache-camel/pom.xml;apache-camel/src/main/descriptors/common-bin.xml;components/camel-gae/src/main/java/org/apache/camel/component/gae/http/GHttpComponent.java;components/camel-gae/src/main/java/org/apache/camel/component/gae/http/GHttpEndpoint.java;components/camel-gae/src/main/java/org/apache/camel/component/gae/task/GTaskComponent.java;components/camel-gae/src/main/java/org/apache/camel/component/gae/task/GTaskEndpoint.java;components/camel-http/pom.xml;components/camel-http/src/main/java/org/apache/camel/component/http/BasicAuthenticationHttpClientConfigurer.java;components/camel-http/src/main/java/org/apache/camel/component/http/CompositeHttpConfigurer.java;components/camel-http/src/main/java/org/apache/camel/component/http/DefaultHttpBinding.java;components/camel-http/src/main/java/org/apache/camel/component/http/HttpClientConfigurer.java;components/camel-http/src/main/java/org/apache/camel/component/http/HttpComponent.java;components/camel-http/src/main/java/org/apache/camel/component/http/HttpEndpoint.java;components/camel-http/src/main/java/org/apache/camel/component/http/HttpEntityConverter.java;components/camel-http/src/main/java/org/apache/camel/component/http/HttpMethods.java;components/camel-http/src/main/java/org/apache/camel/component/http/HttpOperationFailedException.java;components/camel-http/src/main/java/org/apache/camel/component/http/HttpPollingConsumer.java;components/camel-http/src/main/java/org/apache/camel/component/http/HttpProducer.java;components/camel-http/src/main/java/org/apache/camel/component/http/ProxyHttpClientConfigurer.java;components/camel-http/src/main/java/org/apache/camel/component/http/RequestEntityConverter.java;components/camel-http/src/main/java/org/apache/camel/component/http/helper/GZIPHelper.java;components/camel-http/src/main/java/org/apache/camel/component/http/helper/HttpProducerHelper.java;components/camel-http/src/main/java/org/apache/camel/component/http/helper/LoadingByteArrayOutputStream.java;components/camel-http/src/test/data/logo.jpeg;components/camel-http/src/test/java/org/apache/camel/component/http/BaseHttpTest.java;components/camel-http/src/test/java/org/apache/camel/component/http/BaseHttpsTest.java;components/camel-http/src/test/java/org/apache/camel/component/http/HttpAuthenticationTest.java;components/camel-http/src/test/java/org/apache/camel/component/http/HttpBodyTest.java;components/camel-http/src/test/java/org/apache/camel/component/http/HttpBridgeEndpointTest.java;components/camel-http/src/test/java/org/apache/camel/component/http/HttpCamelHeadersTest.java;components/camel-http/src/test/java/org/apache/camel/component/http/HttpCharsetTest.java;components/camel-http/src/test/java/org/apache/camel/component/http/HttpCompressionTest.java;components/camel-http/src/test/java/org/apache/camel/component/http/HttpGetTest.java;components/camel-http/src/test/java/org/apache/camel/component/http/HttpGetWithHeadersTest.java;components/camel-http/src/test/java/org/apache/camel/component/http/HttpGetWithPathHeaderTest.java;components/camel-http/src/test/java/org/apache/camel/component/http/HttpGetWithQueryParamsTest.java;components/camel-http/src/test/java/org/apache/camel/component/http/HttpInvalidConfigurationTest.java;components/camel-http/src/test/java/org/apache/camel/component/http/HttpInvalidHttpClientConfigurationTest.java;components/camel-http/src/test/java/org/apache/camel/component/http/HttpMethodsTest.java;components/camel-http/src/test/java/org/apache/camel/component/http/HttpPathTest.java;components/camel-http/src/test/java/org/apache/camel/component/http/HttpPollingConsumerTest.java;components/camel-http/src/test/java/org/apache/camel/component/http/HttpPostWithBodyTest.java;components/camel-http/src/test/java/org/apache/camel/component/http/HttpProducerSelectMethodTest.java;components/camel-http/src/test/java/org/apache/camel/component/http/HttpProxyServerTest.java;components/camel-http/src/test/java/org/apache/camel/component/http/HttpProxyTest.java;components/camel-http/src/test/java/org/apache/camel/component/http/HttpQueryGoogleTest.java;components/camel-http/src/test/java/org/apache/camel/component/http/HttpQueryTest.java;components/camel-http/src/test/java/org/apache/camel/component/http/HttpReferenceParameterTest.java;components/camel-http/src/test/java/org/apache/camel/component/http/HttpSOTimeoutTest.java;components/camel-http/src/test/java/org/apache/camel/component/http/HttpServerTestSupport.java;components/camel-http/src/test/java/org/apache/camel/component/http/HttpThrowExceptionOnFailureTest.java;components/camel-http/src/test/java/org/apache/camel/component/http/HttpWithHttpUriHeaderTest.java;components/camel-http/src/test/java/org/apache/camel/component/http/HttpsAuthenticationTest.java;components/camel-http/src/test/java/org/apache/camel/component/http/HttpsGetTest.java;components/camel-http/src/test/java/org/apache/camel/component/http/HttpsServerTestSupport.java;components/camel-http/src/test/java/org/apache/camel/component/http/handler/AuthenticationValidationHandler.java;components/camel-http/src/test/java/org/apache/camel/component/http/handler/BasicValidationHandler.java;components/camel-http/src/test/java/org/apache/camel/component/http/handler/DelayValidationHandler.java;components/camel-http/src/test/java/org/apache/camel/component/http/handler/HeaderValidationHandler.java;components/camel-http/src/test/java/org/apache/camel/component/http/handler/ProxyAuthenticationValidationHandler.java;components/camel-http/src/test/resources/localhost.ks;components/camel-jetty/pom.xml;components/camel-jetty/src/main/java/org/apache/camel/component/jetty/JettyHttpProducer.java;components/camel-jetty/src/test/java/org/apache/camel/component/jetty/HttpGetTest.java;components/camel-jetty/src/test/java/org/apache/camel/component/jetty/HttpRouteTest.java;components/camel-jetty/src/test/java/org/apache/camel/component/jetty/JettyHttpClientOptionsTest.java;components/camel-jetty/src/test/java/org/apache/camel/component/jetty/MultiThreadedHttpGetTest.java;components/camel-jetty/src/test/java/org/apache/camel/component/jetty/SpringHttpsRouteTest.java;components/camel-jetty/src/test/java/org/apache/camel/component/jetty/jettyproducer/JettyHttpProducerAsyncTest.java;components/camel-jetty/src/test/java/org/apache/camel/component/jetty/jettyproducer/JettyHttpProducerTest.java;components/camel-servlet/src/main/java/org/apache/camel/component/servlet/ServletComponent.java;components/camel-servlet/src/main/java/org/apache/camel/component/servlet/ServletEndpoint.java;components/camel-servlet/src/test/java/org/apache/camel/component/servlet/HttpClientRouteTest.java;parent/pom.xml;tests/camel-itest/src/test/java/org/apache/camel/itest/http/HttpEndpointTest.java;tests/camel-itest/src/test/java/org/apache/camel/itest/http/HttpMaxConnectionPerHostTest.java;tests/camel-itest/src/test/resources/org/apache/camel/itest/http/HttpEndpointTest-context.xml;tests/camel-itest/src/test/resources/org/apache/camel/itest/http/HttpMaxConnectionPerHostTest-context.xml;platforms/karaf/features/src/main/resources/features.xml;
215,1543,Improvement,Closed,Fixed,camel-jms,Major,Frank Schwarz,2009/04/19 16:27:14 +0100,2009/04/28 06:04:38 +0100,Claus Ibsen,2009/04/28 06:54:34 +0100,8.602314815,0.034675926,Apply removeHeader also to the underying JMS message delegate   ,In case of a JMS message  header information is redundantly stored in org.apache.camel.component.jms.JmsMessage (here Camel-Message) and in its javax.jms.Message jmsMessage delegate (here JMS-Message). Currently you cannot remove effectively any header from the Camel-Message instance as in the next processing step those removed headers resurrect from the underlying JMS-Message.Please provide any means to remove or or at least mask out those headers from the underlying JMS-Message.   ,2.0-M1,1.6.1; 2.0-M2,0,0,65,1,4,2,0,0,0,1,0.0,0.0,1.0,4.0,components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsMessage.java;components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsMessageHelper.java;components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsRemoveHeaderTest.java;components/camel-jms/src/test/java/org/apache/camel/component/jms/discovery/JmsDiscoveryTest.java;
216,1548,Bug,Closed,Fixed,camel-core,Major,Claus Ibsen,2009/04/20 13:14:54 +0100,2009/04/20 13:14:54 +0100,Claus Ibsen,2009/04/21 12:14:53 +0100,0.958321759,0.958321759,ErrorHandler to be wrapped at every node incl children   ,   ,2.0-M1,2.0-M2,0,0,1,1,4,1,0,0,0,0,0.0,0.0,1.0,22.0,camel-core/src/main/java/org/apache/camel/impl/DefaultErrorHandlerWrappingStrategy.java;camel-core/src/main/java/org/apache/camel/impl/DefaultLifecycleStrategy.java;camel-core/src/main/java/org/apache/camel/management/InstrumentationErrorHandlerWrappingStrategy.java;camel-core/src/main/java/org/apache/camel/management/InstrumentationInterceptStrategy.java;camel-core/src/main/java/org/apache/camel/management/InstrumentationLifecycleStrategy.java;camel-core/src/main/java/org/apache/camel/model/ProcessorDefinition.java;camel-core/src/main/java/org/apache/camel/processor/HandleFaultProcessor.java;camel-core/src/test/java/org/apache/camel/builder/ErrorHandlerTest.java;camel-core/src/test/java/org/apache/camel/builder/RouteBuilderTest.java;camel-core/src/test/java/org/apache/camel/impl/DefaultCamelContextTest.java;camel-core/src/test/java/org/apache/camel/issues/BelasThreadErrorHandlerIssue901Test.java;camel-core/src/test/java/org/apache/camel/processor/ErrorHandlerWrappedEachNodeTest.java;camel-core/src/test/java/org/apache/camel/processor/FaultRetryRouteTest.java;camel-core/src/test/java/org/apache/camel/processor/FaultRouteTest.java;camel-core/src/test/java/org/apache/camel/processor/RollbackTest.java;camel-core/src/test/java/org/apache/camel/processor/RoutePerformanceTest.java;camel-core/src/test/java/org/apache/camel/processor/aggregator/AggregatorExceptionHandleTest.java;camel-core/src/test/java/org/apache/camel/processor/interceptor/InterceptAlterMessageBeforeRedeliveryTest.java;components/camel-jms/src/test/java/org/apache/camel/component/jms/discovery/JmsDiscoveryTest.java;components/camel-jms/src/test/java/org/apache/camel/component/jms/tx/AbstractTransactionTest.java;components/camel-spring/src/test/java/org/apache/camel/spring/interceptor/DelayerInterceptorTest.java;components/camel-spring/src/test/resources/log4j.properties;
219,1585,Bug,Closed,Fixed,camel-ftp,Major,Darryl Smith,2009/05/05 20:52:33 +0100,2009/05/06 04:42:04 +0100,Willem Jiang,2009/05/06 07:59:34 +0100,0.46320601899999997,0.137152778,SFTP GenericFileProducer.createFileName produces OS normalized file name  that doesn't work with SFTP   ,The use of File.separator and FileUtil.normalizePath in GenericFileProducer.createFileName produce a OS normalized file name  that doesn't work with SFTPe.g. outboundout_20090501_091940_ACC.txt which will not work produce a file called outboundout_20090501_091940_ACC.txtThe proper name should be outbound/out_20090501_091940_ACC.txt   ,2.0-M1,2.0-M2,0,1,36,1,8,2,0,0,0,0,0.0,0.0,2.0,16.0,camel-core/src/main/java/org/apache/camel/component/file/GenericFileProducer.java;components/camel-ftp/src/main/java/org/apache/camel/component/file/remote/RemoteFileProducer.java;camel-core/src/main/java/org/apache/camel/builder/RouteBuilder.java;camel-core/src/main/java/org/apache/camel/model/InterceptFromDefinition.java;camel-core/src/main/java/org/apache/camel/model/InterceptSendToEndpointDefinition.java;camel-core/src/main/java/org/apache/camel/model/RoutesDefinition.java;camel-core/src/main/java/org/apache/camel/processor/DefaultChannel.java;camel-core/src/main/java/org/apache/camel/processor/Pipeline.java;camel-core/src/main/java/org/apache/camel/util/EndpointHelper.java;camel-core/src/test/java/org/apache/camel/processor/intercept/InterceptFromUriRegexTest.java;camel-core/src/test/java/org/apache/camel/processor/intercept/InterceptFromUriWildcardTest.java;components/camel-spring/src/main/java/org/apache/camel/spring/CamelContextFactoryBean.java;components/camel-spring/src/test/java/org/apache/camel/spring/processor/SpringInterceptFromUriRegexTest.java;components/camel-spring/src/test/java/org/apache/camel/spring/processor/SpringInterceptFromUriWildcardTest.java;components/camel-spring/src/test/resources/org/apache/camel/spring/processor/SpringInterceptFromUriRegexTest.xml;components/camel-spring/src/test/resources/org/apache/camel/spring/processor/SpringInterceptFromUriWildcardTest.xml;
220,1586,Bug,Closed,Fixed,,Major,Willem Jiang,2009/05/06 04:47:30 +0100,2009/05/06 04:47:30 +0100,Willem Jiang,2009/05/06 08:00:26 +0100,0.13398148099999999,0.13398148099999999,camel-cxf producer loses the content-type   ,camel-cxf doesn't put the Protocol-Header into the camel message header  so we lost the content-type message.Here is the mail thread for the discussion.http://www.nabble.com/camel-cxf-content-type-response-header-tt23370337.html   ,1.6.0,1.6.1; 2.0-M2,0,0,26,1,2,2,0,0,0,0,0.0,0.0,1.0,2.0,components/camel-cxf/src/main/java/org/apache/camel/component/cxf/CxfHeaderFilterStrategy.java;components/camel-cxf/src/test/java/org/apache/camel/component/cxf/CxfRawMessageRouterTest.java;
221,1589,Improvement,Closed,Fixed,,Major,Willem Jiang,2009/05/07 08:42:42 +0100,2009/05/07 08:43:07 +0100,Willem Jiang,2009/05/07 09:02:17 +0100,0.013599537,0.013310185,Clean up  the CamelTransportConstants.CONTENT_TYPE   ,Here is the mail thread about it.http://www.nabble.com/Re%3A-svn-commit%3A-r772054---in--camel-trunk-components-camel-cxf-src%3A--main-java-org-apache-camel-component-cxf-CxfHeaderFilterStrategy.java--test-java-org-apache-camel-component-cxf-CxfRawMessageRouterTest.java-tt23412367.html   ,2.0-M1,2.0-M2,0,0,10,1,4,2,0,0,0,0,0.0,0.0,2.0,7.0,components/camel-cxf/src/main/java/org/apache/camel/component/cxf/transport/CamelTransportConstants.java;components/camel-cxf/src/main/java/org/apache/camel/component/cxf/util/CxfHeaderHelper.java;components/camel-cxf/src/main/java/org/apache/camel/component/cxf/CxfHeaderFilterStrategy.java;components/camel-cxf/src/main/java/org/apache/camel/component/cxf/DefaultCxfBinding.java;components/camel-cxf/src/main/java/org/apache/camel/component/cxf/transport/CamelTransportConstants.java;components/camel-cxf/src/main/java/org/apache/camel/component/cxf/util/CxfHeaderHelper.java;components/camel-cxf/src/test/java/org/apache/camel/component/cxf/CxfRawMessageRouterTest.java;
222,1614,Bug,Closed,Fixed,camel-jms,Major,Frank Schwarz,2009/05/14 08:11:59 +0100,2009/05/14 08:28:30 +0100,Claus Ibsen,2009/05/14 09:44:26 +0100,0.064201389,0.052731481,Warning 'Disabling JMSReplyTo as this Exchange is not OUT capable' on false positives in JBossAS5   ,see: http://www.nabble.com/Disabling-JMSReplyTo-as-this-Exchange-is-not-OUT-capable-td23524909s22882.html   ,1.6.0; 2.0-M1,1.6.2; 2.0-M2,0,0,5,1,2,1,0,1,0,0,0.0,0.0,1.0,1.0,components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsProducer.java;
224,1681,Improvement,Closed,Fixed,,Major,Willem Jiang,2009/06/08 09:09:45 +0100,2009/06/08 09:09:45 +0100,Willem Jiang,2009/06/16 05:47:24 +0100,7.859479167000001,7.859479167000001,Clean up the CamelNamespaceHandler   ,Since we use the JAXB to parse the Routes definitions so we can get ride of the unnecessary bean parser registry code.   ,1.5.0; 1.6.0; 2.0-M1; 1.6.1,1.6.2; 2.0-M2,0,0,22,1,2,2,0,1,0,0,0.0,0.0,1.0,2.0,components/camel-osgi/src/main/java/org/apache/camel/osgi/CamelNamespaceHandler.java;components/camel-spring/src/main/java/org/apache/camel/spring/handler/CamelNamespaceHandler.java;
229,1706,Improvement,Closed,Fixed,camel-core,Major,Claus Ibsen,2009/06/14 07:12:09 +0100,2009/06/14 07:12:09 +0100,Claus Ibsen,2009/06/15 05:56:16 +0100,0.947303241,0.947303241,DefaultErrorHandler - add support for redelivery   ,The new default error handler does currently not support redelivery. The error handling codebase has stabilized and we should allow this error handler to leverage the redelivery features we have in DeadLetterChannel.   ,2.0-M1; 2.0-M2,2.0-M3,0,0,32,1,2,1,0,0,0,1,0.0,0.0,3.0,40.0,camel-core/src/main/java/org/apache/camel/builder/BuilderSupport.java;camel-core/src/main/java/org/apache/camel/builder/DeadLetterChannelBuilder.java;camel-core/src/main/java/org/apache/camel/builder/DefaultErrorHandlerBuilder.java;camel-core/src/main/java/org/apache/camel/component/bean/BeanProcessor.java;camel-core/src/main/java/org/apache/camel/processor/DeadLetterChannel.java;camel-core/src/main/java/org/apache/camel/processor/DefaultErrorHandler.java;camel-core/src/main/java/org/apache/camel/processor/RedeliveryErrorHandler.java;camel-core/src/main/java/org/apache/camel/processor/idempotent/IdempotentOnCompletion.java;camel-core/src/test/java/org/apache/camel/builder/ContextErrorHandlerTest.java;camel-core/src/test/java/org/apache/camel/builder/ExceptionBuilderTest.java;camel-core/src/test/java/org/apache/camel/builder/ExceptionBuilderWithRetryLoggingLevelSetTest.java;camel-core/src/test/java/org/apache/camel/component/bean/BeanInfoSelectMethodTest.java;camel-core/src/test/java/org/apache/camel/component/bean/DefaultParameterMappingStrategyTest.java;camel-core/src/test/java/org/apache/camel/processor/DeadLetterChannelUseOriginalInBodyTest.java;camel-core/src/test/java/org/apache/camel/processor/DefaultErrorHandlerRedeliveryTest.java;camel-core/src/test/java/org/apache/camel/processor/exceptionpolicy/CustomExceptionPolicyStrategyTest.java;camel-core/src/test/java/org/apache/camel/processor/onexception/ErrorOccuredInOnExceptionRoute.java;camel-core/src/test/java/org/apache/camel/processor/onexception/OnExceptionProcessorInspectCausedExceptionTest.java;camel-core/src/test/java/org/apache/camel/processor/onexception/OnExceptionProcessorInspectCausedExceptionWithDefaultErrorHandlerTest.java;camel-core/src/test/java/org/apache/camel/processor/onexception/OnExceptionRetryUntilWithDefaultErrorHandlerTest.java;camel-core/src/test/java/org/apache/camel/processor/onexception/OnExceptionRouteWithDefaultErrorHandlerTest.java;camel-core/src/test/java/org/apache/camel/processor/onexception/OnExceptionSubRouteWithDefaultErrorHandlerTest.java;components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsUseOriginalBodyTest.java;components/camel-mina/src/test/java/org/apache/camel/component/mina/MinaTcpLineDelimiterUsingPlainSocketTest.java;components/camel-mina/src/test/java/org/apache/camel/component/mina/MinaTcpWithIoOutProcessorExceptionTest.java;components/camel-spring/src/test/java/org/apache/camel/spring/processor/SpringDefaultErrorHandlerNotHandledPolicyTest.java;components/camel-spring/src/test/resources/org/apache/camel/spring/processor/SpringDefaultErrorHandlerNotHandledPolicyTest.xml;components/camel-spring/src/test/resources/org/apache/camel/spring/processor/onexception/onExceptionSubRouteWithDefaultErrorHandlerTest.xml;camel-core/src/main/java/org/apache/camel/builder/DefaultErrorHandlerBuilder.java;camel-core/src/main/java/org/apache/camel/processor/RedeliveryErrorHandler.java;camel-core/src/main/java/org/apache/camel/processor/RedeliveryPolicy.java;camel-core/src/test/java/org/apache/camel/processor/onexception/ErrorOccuredInOnExceptionRoute.java;camel-core/src/test/java/org/apache/camel/processor/onexception/MyOwnHandlerBean.java;camel-core/src/test/java/org/apache/camel/processor/onexception/OnExceptionRouteTest.java;camel-core/src/test/java/org/apache/camel/processor/onexception/OnExceptionRouteWithDefaultErrorHandlerTest.java;camel-core/src/main/java/org/apache/camel/processor/DeadLetterChannel.java;camel-core/src/main/java/org/apache/camel/processor/DefaultErrorHandler.java;camel-core/src/main/java/org/apache/camel/processor/RedeliveryErrorHandler.java;camel-core/src/test/java/org/apache/camel/processor/DeadLetterChannelRedeliveryTest.java;components/camel-spring/src/main/java/org/apache/camel/spring/spi/TransactionErrorHandler.java;
232,1719,Bug,Closed,Fixed,camel-core,Major,Claus Ibsen,2009/06/16 12:47:15 +0100,2009/06/16 12:47:15 +0100,Claus Ibsen,2009/06/16 14:24:57 +0100,0.067847222,0.067847222,bean component should thrown NoTypeConverterException when bean parameter binding cannot convert to method signature type   ,See nabble:http://www.nabble.com/Error-not-raised-by-Camel-if-the-%40Header-type-define-in-a-bean-is-not--correct-td24051086s22882.html   ,2.0-M2,2.0-M3,0,0,5,1,2,1,1,0,0,0,0.0,0.0,1.0,2.0,camel-core/src/main/java/org/apache/camel/component/bean/MethodInfo.java;camel-core/src/test/java/org/apache/camel/component/bean/BeanWithHeadersAndBodyInject2Test.java;
233,1725,Improvement,Closed,Fixed,osgi,Major,Claus Ibsen,2009/06/17 14:04:41 +0100,2009/06/17 14:04:41 +0100,Claus Ibsen,2009/06/17 14:55:34 +0100,0.035335648,0.035335648,Better logging at startup if Camel uses camel-osgi or not   ,We should at least once at INFO level log whether OSGi was detected or not.And in the camel-osgi we should have more DEBUG / TRACE logging as well.   ,1.6.1; 2.0-M2,1.6.2; 2.0-M3,0,0,28,1,2,1,1,1,0,0,0.0,0.0,2.0,15.0,camel-core/src/main/java/org/apache/camel/impl/DefaultPackageScanClassResolver.java;camel-core/src/main/java/org/apache/camel/impl/WebSpherePacakageScanClassResolver.java;components/camel-osgi/src/main/java/org/apache/camel/osgi/OsgiAnnotationTypeConverterLoader.java;components/camel-osgi/src/main/java/org/apache/camel/osgi/OsgiPackageScanClassResolver.java;components/camel-osgi/src/main/java/org/apache/camel/osgi/Activator.java;components/camel-osgi/src/main/java/org/apache/camel/osgi/CamelContextFactory.java;components/camel-osgi/src/main/java/org/apache/camel/osgi/CamelContextFactoryBean.java;components/camel-osgi/src/main/java/org/apache/camel/osgi/CamelNamespaceHandler.java;components/camel-osgi/src/main/java/org/apache/camel/osgi/OsgiAnnotationTypeConverterLoader.java;components/camel-osgi/src/main/java/org/apache/camel/osgi/OsgiComponentResolver.java;components/camel-osgi/src/main/java/org/apache/camel/osgi/OsgiFactoryFinder.java;components/camel-osgi/src/main/java/org/apache/camel/osgi/OsgiFactoryFinderResolver.java;components/camel-osgi/src/main/java/org/apache/camel/osgi/OsgiPackageScanClassResolver.java;components/camel-osgi/src/main/resources/META-INF/spring.schemas;components/camel-spring/src/main/java/org/apache/camel/spring/handler/CamelNamespaceHandler.java;
234,1735,Bug,Closed,Fixed,examples,Minor,Claus Ibsen,2009/06/22 09:35:30 +0100,,Unassigned,2009/06/24 06:29:54 +0100,1.871111111,,camel-example-etl - bug in sample about type converter   ,   ,2.0-M2,2.0-M3,0,0,1,0,4,1,1,0,0,0,0.0,0.0,3.0,8.0,components/camel-jpa/src/main/java/org/apache/camel/component/jpa/JpaEndpoint.java;components/camel-jpa/src/main/java/org/apache/camel/component/jpa/JpaProducer.java;examples/camel-example-etl/src/main/java/org/apache/camel/example/etl/EtlRoutes.java;components/camel-jpa/src/main/java/org/apache/camel/component/jpa/JpaConstants.java;components/camel-jpa/src/main/java/org/apache/camel/component/jpa/JpaConsumer.java;components/camel-jpa/src/main/java/org/apache/camel/component/jpa/JpaEndpoint.java;components/camel-jpa/src/test/java/org/apache/camel/component/jpa/JpaTest.java;examples/camel-example-etl/src/main/java/org/apache/camel/example/etl/CustomerTransformer.java;
237,1745,Improvement,Closed,Fixed,camel-core,Minor,Roman Kalukiewicz,2009/06/23 10:06:27 +0100,2009/06/23 10:06:27 +0100,Roman Kalukiewicz,2009/06/23 10:24:12 +0100,0.012326388999999998,0.012326388999999998,Validator component to use SaxSource internally   ,ValidatingProcessor uses DOMSource internally while SaxSource could perform better.   ,2.0-M2,2.0-M3,0,0,9,1,2,2,1,0,0,0,0.0,0.0,1.0,3.0,camel-core/src/main/java/org/apache/camel/processor/validation/DefaultValidationErrorHandler.java;camel-core/src/main/java/org/apache/camel/processor/validation/ValidatingProcessor.java;camel-core/src/main/java/org/apache/camel/processor/validation/ValidatorErrorHandler.java;
238,1752,Bug,Closed,Fixed,camel-spring,Major,Willem Jiang,2009/06/24 02:38:56 +0100,2009/06/24 02:38:56 +0100,Willem Jiang,2009/06/24 11:27:05 +0100,0.36677083299999996,0.36677083299999996,SpringCamelContext will get into endless loop of calling start method if the route service calling the ApplicationContext refresh method in it's initial method   ,Here is the mail thread which discusses this issue.http://www.nabble.com/StackOverFlow-error-with-Camel-1.6.1-tp24172060p24172060.html   ,2.0-M1; 1.6.1; 2.0-M2,1.6.2; 2.0-M3,0,0,12,1,2,2,0,1,0,0,1.0,0.0,1.0,1.0,components/camel-spring/src/main/java/org/apache/camel/spring/SpringCamelContext.java;
241,1764,Bug,Closed,Fixed,,Major,Hadrian Zbarcea,2009/06/27 17:49:08 +0100,2009/06/27 17:49:08 +0100,Hadrian Zbarcea,2009/06/27 18:08:39 +0100,0.013553241,0.013553241,Camel builds should not use platform specific encoding   ,The builds on my Mac use the platform specific encoding thus leading to the following warngin:[WARNING] Using platform encoding (MacRoman actually) to copy filtered resources  i.e. build is platform dependent!We should use the &lt;project.build.sourceEncoding&gt; property to specify a project specific encoding (UTF-8).   ,1.6.1; 2.0-M2,1.6.2; 2.0-M3,0,0,49,1,2,2,1,1,0,0,0.0,0.0,0.0,0.0,
242,1765,Bug,Closed,Fixed,examples,Blocker,David Jencks,2009/06/27 19:04:46 +0100,2009/06/28 20:29:45 +0100,Hadrian Zbarcea,2009/07/03 08:05:44 +0100,5.542337963,4.483321759,License for One-JAR classes not included in camel-example-spring one-jar artifact. Also apache legal files missing   ,The license for the com/simontuffs/onejar files is at http://one-jar.sourceforge.net/index.php?page=documents&amp;file=license.When I build camel-example-spring neither this license nor the apache license nor apache notice file is in the one-jar.jar artifact.I'd suggest disabling the one-jar plugin until someone can figure out how to include these files.   ,2.0.0,2.0-M3,0,0,46,1,4,2,1,0,0,1,0.0,0.0,1.0,1.0,examples/camel-example-spring/pom.xml;
248,1795,Bug,Closed,Fixed,camel-jms,Critical,Claus Ibsen,2009/07/03 15:54:34 +0100,2009/07/03 15:54:34 +0100,Claus Ibsen,2009/07/03 16:13:45 +0100,0.013321758999999999,0.013321758999999999,camel-jms - wrong defaults causes message listener to use new thread when receiving a message   ,JmsConfiguratiuon have a bad defaultmaxMessagesPerTask=1It should be -1 as we do not want to strict the DefaultMessageListenerContainer to only handle 1 message per thread.   ,1.6.1; 2.0-M2,1.6.2; 2.0-M3,0,0,24,1,3,1,0,1,0,0,1.0,0.0,1.0,1.0,components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsConfiguration.java;
252,1822,Improvement,Closed,Fixed,,Major,Hadrian Zbarcea,2009/07/10 15:42:15 +0100,2009/07/10 15:42:15 +0100,Hadrian Zbarcea,2009/08/01 18:39:57 +0100,22.12340278,22.12340278,Cleanup unnecessary copy related methods in Exchange   ,There are currently 4 apis related to copying exchanges that overlap for the most part  are confusing and unnecessary. The consensus is to replace: Exchange newInstance(); Exchange copy(); Exchange newCopy(boolean handoverOnCompletion); void copyFrom(Exchange source);with: Exchange copy(); Exchange copy(boolean handoverOnCompletion);newInstance() does not bring much value copyFrom() is semantically equivalent to copy()newCopy() will be just renamed to copy(boolean) See nabble thread:http://www.nabble.com/-DISCUSS--Exchange-copy-api-cleanup-td24400340.html   ,2.0-M2,2.0.0,0,0,61,1,3,1,1,0,0,0,0.0,0.0,0.0,0.0,
253,1828,Bug,Closed,Fixed,camel-jaxb,Major,Willem Jiang,2009/07/13 12:20:38 +0100,2009/07/13 12:20:38 +0100,Willem Jiang,2009/07/16 11:02:14 +0100,2.9455555560000004,2.9455555560000004,jaxb prettyPrint does not work   ,Here is the mail thread with discuss about it. http://www.nabble.com/JAXB-pretty-print-marshaling-td24449564.html   ,1.4.0; 1.5.0; 1.6.0; 2.0-M1; 1.6.1; 2.0-M2,1.6.2; 2.0-M3,0,0,13,1,2,2,1,1,0,0,0.0,0.0,1.0,2.0,components/camel-jaxb/src/main/java/org/apache/camel/converter/jaxb/JaxbDataFormat.java;components/camel-jaxb/src/test/java/org/apache/camel/example/DataFormatTest.java;
263,1871,Improvement,Closed,Fixed,camel-jms,Minor,Claus Ibsen,2009/08/03 11:42:12 +0100,2009/08/03 11:42:12 +0100,Claus Ibsen,2009/08/03 12:16:34 +0100,0.023865741,0.023865741,camel-jms - DefaultJmsKeyFormatStrategy should replace . with _DOT_ to avoid conflicting with end user using _   ,If an end user sends a JMS property asMY_KEYThen it should be preserved when Camel route it  so the receiver side using Camel as well will see it as: MY_KEY and not MY.KEY.The code should be: String answer = key.replace('.'  '_DOT_'); answer = answer.replace('_DOT_'  '.');   ,1.6.1; 2.0-M3,2.0.0,0,0,64,1,1,1,1,1,0,0,0.0,0.0,1.0,2.0,components/camel-jms/src/main/java/org/apache/camel/component/jms/DefaultJmsKeyFormatStrategy.java;components/camel-jms/src/test/java/org/apache/camel/component/jms/DefaultJmsHeaderKeyFormatStrategyTest.java;
264,1873,Bug,Closed,Fixed,camel-spring,Major,Willem Jiang,2009/08/03 13:52:36 +0100,2009/08/03 13:52:36 +0100,Willem Jiang,2009/08/03 15:17:09 +0100,0.058715277999999996,0.058715277999999996,template   consumerTemplate  service  proxy can't be set with right camel context if there are more than one camel context in the spring application context   ,Current camel support to define a producer template OUTSIDE a camel context  I think it works well just like the autowire function which is provided in Spring.If there more than two Camel context in the Spring Application context   the user should specify the camel context which the template should use.But I have a concern that even we put the template INSIDE the camel context  the template will not be set with a right version of camel context  since we use a CamelPostProcessor to inject CamelContext.So I did a quick test on the current Camel code and found there is a bug if there are more one CamelContext &#8211; CamelPostProcessor will inject the last create camel context into the CamelContextAware object. Since it is not easy to add the camelContext referece id into the template element attribute  we'd better just support to parser these elements inside the camel context.   ,1.4.0; 1.5.0; 1.6.0; 2.0-M1; 1.6.1; 2.0-M2; 2.0-M3,1.6.2; 2.0.0,0,0,149,1,4,2,1,1,0,0,0.0,0.0,2.0,13.0,components/camel-spring/src/main/java/org/apache/camel/spring/CamelBeanPostProcessor.java;components/camel-spring/src/main/java/org/apache/camel/spring/CamelConsumerTemplateFactoryBean.java;components/camel-spring/src/main/java/org/apache/camel/spring/CamelProducerTemplateFactoryBean.java;components/camel-spring/src/main/java/org/apache/camel/spring/handler/CamelNamespaceHandler.java;components/camel-spring/src/test/java/org/apache/camel/spring/CamelContextAwareTest.java;components/camel-spring/src/test/java/org/apache/camel/spring/SpringConsumerTemplateCAMEL1870Test.java;components/camel-spring/src/test/resources/org/apache/camel/spring/SpringConsumerTemplateCAMEL1870Test-context.xml;components/camel-spring/src/test/resources/org/apache/camel/spring/camelContextAwareBean.xml;components/camel-spring/src/test/resources/org/apache/camel/spring/remoting/spring-with-exporter-namespace.xml;camel-core/src/main/java/org/apache/camel/impl/DefaultConsumerTemplate.java;components/camel-spring/src/main/java/org/apache/camel/spring/handler/CamelNamespaceHandler.java;components/camel-spring/src/test/java/org/apache/camel/spring/CamelContextAwareTest.java;components/camel-spring/src/test/resources/org/apache/camel/spring/camelContextAwareBean.xml;
265,1878,Bug,Closed,Fixed,camel-core,Minor,Claus Ibsen,2009/08/05 08:37:51 +0100,2009/08/05 08:37:51 +0100,Claus Ibsen,2009/08/05 13:50:21 +0100,0.217013889,0.217013889,Bean component - invokes onMessage from javax.jms.MessageListener even though a specific method name have been provided   ,This is only an issue when your bean implements javax.jms.MessageListener and then specify a specific method to use  then Camel will still prefer to use the onMessage method.   ,1.6.1; 2.0-M3,1.6.2; 2.0.0,0,0,28,1,4,1,1,1,0,0,0.0,0.0,1.0,11.0,camel-core/src/main/java/org/apache/camel/component/bean/BeanProcessor.java;camel-core/src/test/java/org/apache/camel/component/bean/issues/BaseClass.java;camel-core/src/test/java/org/apache/camel/component/bean/issues/BeanRouteToDerivedClassTest.java;camel-core/src/test/java/org/apache/camel/component/bean/issues/DerivedClass.java;camel-core/src/test/java/org/apache/camel/component/bean/issues/MyMessage.java;camel-core/src/test/java/org/apache/camel/component/bean/issues/MyMessageListener.java;camel-core/src/test/java/org/apache/camel/component/bean/issues/MyMessageToProcessorConverter.java;tests/camel-itest/src/test/java/org/apache/camel/itest/issues/BaseClass.java;tests/camel-itest/src/test/java/org/apache/camel/itest/issues/BeanCallDerivedClassTest.java;tests/camel-itest/src/test/java/org/apache/camel/itest/issues/DerivedClass.java;tests/camel-itest/src/test/resources/org/apache/camel/itest/issues/BeanCallDerivedClassTest-context.xml;
268,1895,Improvement,Closed,Fixed,camel-core,Minor,Claus Ibsen,2009/08/09 06:33:26 +0100,2009/08/09 06:33:26 +0100,Claus Ibsen,2010/08/23 16:16:19 +0100,379.40478010000004,379.40478010000004,camel-file - Consume and pollEnrich another file should work transparent   ,See nabblehttp://www.nabble.com/Problem-with-FileConsumer-and-pollEnrich-td24795192.html   ,2.0-M3,2.5.0,0,0,5,1,4,1,1,0,0,0,0.0,0.0,5.0,22.0,camel-core/src/test/java/org/apache/camel/component/file/FileConsumePollEnrichFileUsingProcessorTest.java;camel-core/src/main/java/org/apache/camel/component/file/strategy/FileLockExclusiveReadLockStrategy.java;camel-core/src/main/java/org/apache/camel/component/file/strategy/GenericFileProcessStrategyFactory.java;camel-core/src/main/java/org/apache/camel/component/file/strategy/MarkerFileExclusiveReadLockStrategy.java;camel-core/src/test/java/org/apache/camel/component/file/FileConsumePollEnrichFileTest.java;camel-core/src/main/java/org/apache/camel/util/FileUtil.java;camel-core/src/main/java/org/apache/camel/component/file/GenericFileConsumer.java;camel-core/src/main/java/org/apache/camel/component/file/GenericFileOnCompletion.java;camel-core/src/main/java/org/apache/camel/processor/PollEnricher.java;camel-core/src/test/java/org/apache/camel/component/file/FileConsumePollEnrichFileTest.java;camel-core/src/main/java/org/apache/camel/component/file/FileConsumer.java;camel-core/src/main/java/org/apache/camel/component/file/GenericFileProcessStrategy.java;camel-core/src/main/java/org/apache/camel/component/file/strategy/GenericFileDeleteProcessStrategy.java;camel-core/src/main/java/org/apache/camel/component/file/strategy/GenericFileRenameProcessStrategy.java;camel-core/src/main/java/org/apache/camel/processor/PollEnricher.java;camel-core/src/test/java/org/apache/camel/component/file/FileConsumeMoveRelativeNameTest.java;camel-core/src/test/java/org/apache/camel/component/file/FileConsumePollEnrichFileTest.java;camel-core/src/test/java/org/apache/camel/component/file/FileConsumerAbsolutePathWithAbsoluteMoveTest.java;camel-core/src/test/java/org/apache/camel/component/file/FileConsumerAbsolutePathWithRelativeMoveTest.java;components/camel-ftp/src/main/java/org/apache/camel/component/file/remote/FtpConsumer.java;components/camel-ftp/src/main/java/org/apache/camel/component/file/remote/SftpConsumer.java;components/camel-ftp/src/test/java/org/apache/camel/component/file/remote/FtpConsumerMultipleDirectoriesTest.java;
270,1924,Bug,Closed,Fixed,camel-core,Major,Christian Schneider,2009/08/20 14:37:15 +0100,2009/08/21 15:47:59 +0100,Willem Jiang,2009/08/24 13:28:33 +0100,3.952291667,2.9031712960000005,Unit test failures on Windows in 2.0.0 release   ,3 failures in camel-core that do not seem to occur on linux and mac.Failure Details testCannotDeleteFile junit.framework.AssertionFailedError: Should have thrown an exceptionorg.apache.camel.component.file.strategy.GenericFileDeleteProcessStrategyTest:125 testCacheStreamToFileAndNotCloseStream junit.framework.AssertionFailedError: we should have no temp file expected:&lt;1&gt; but was:&lt;0&gt;org.apache.camel.converter.stream.CachedOutputStreamTest:117 testRouteIsCorrectAtRuntime junit.framework.AssertionFailedError: expected:&lt;4&gt; but was:&lt;1&gt;org.apache.camel.processor.ChoiceWithEndTest:39   ,2.0.0,2.1.0,0,0,38,1,6,2,1,0,0,0,0.0,0.0,1.0,4.0,camel-core/src/main/java/org/apache/camel/converter/stream/CachedOutputStream.java;camel-core/src/test/java/org/apache/camel/component/file/strategy/GenericFileDeleteProcessStrategyTest.java;camel-core/src/test/java/org/apache/camel/converter/stream/CachedOutputStreamTest.java;camel-core/src/test/java/org/apache/camel/processor/ChoiceWithEndTest.java;
275,1948,Bug,Closed,Fixed,camel-core,Major,Claus Ibsen,2009/08/27 08:49:06 +0100,2009/08/27 08:49:06 +0100,Claus Ibsen,2009/08/27 08:50:18 +0100,0.000833,0.000833,ServiceSupport - incorrect state after restart   ,This hampers restart of services by example the overhauled JMX in CAMEL-1933.When a service was restarted it had the following incorrect state: started = true starting = false stopped = true stopping = falseThe stopped should have been changed to false as its started.   ,2.0.0,2.1.0,0,0,52,1,2,1,1,0,0,0,0.0,1.0,1.0,2.0,camel-core/src/main/java/org/apache/camel/impl/ServiceSupport.java;camel-core/src/test/java/org/apache/camel/impl/ServiceSupportTest.java;
277,1951,Improvement,Closed,Fixed,camel-jms; jmx,Major,Ron Gavlin,2009/08/28 04:45:50 +0100,2009/08/28 07:55:27 +0100,Claus Ibsen,2009/09/02 09:32:46 +0100,5.199259259,5.0675810189999995,camel-jms consumer endpoint should allow properties such as maxConcurrentConsumers and concurrentConsumers to be managed via JMX   ,   ,2.0.0,2.1.0,0,0,1,1,2,1,1,0,0,0,0.0,0.0,1.0,3.0,camel-core/src/main/java/org/apache/camel/management/mbean/ManagedBrowsableEndpoint.java;components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsEndpoint.java;components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsQueueEndpoint.java;
278,1952,Improvement,Closed,Fixed,camel-core,Trivial,Claus Ibsen,2009/08/28 06:14:28 +0100,2009/08/28 06:14:28 +0100,Claus Ibsen,2009/08/28 06:16:08 +0100,0.001157407,0.001157407,Exchange - getIn and getOut with expected type parameter   ,It would be nice with a getIn(type) method so you can avoid ugly type cast and let Camel do type casting instead.CxfMessage cxf = exchange.getIn(CxfMessage.class);And the same for a getOut as well.   ,2.0.0,2.1.0,0,0,39,1,2,1,1,0,0,0,0.0,0.0,1.0,3.0,camel-core/src/main/java/org/apache/camel/Exchange.java;camel-core/src/main/java/org/apache/camel/impl/DefaultExchange.java;camel-core/src/test/java/org/apache/camel/impl/DefaultExchangeTest.java;
282,1988,Improvement,Closed,Fixed,,Critical,Guillaume Nodet,2009/09/04 11:01:13 +0100,2009/09/15 14:27:39 +0100,Guillaume Nodet,2009/09/17 16:16:39 +0100,13.21905093,2.0756944440000002,Better OSGi metadata to allow deploying multiple camel versions in the same OSGi framework   ,   ,1.6.1; 2.0.0,1.6.2; 2.1.0,0,0,1,1,3,2,1,1,0,0,0.0,0.0,1.0,23.0,camel-core/pom.xml;components/camel-amqp/pom.xml;components/camel-atom/pom.xml;components/camel-cxf/pom.xml;components/camel-flatpack/pom.xml;components/camel-freemarker/pom.xml;components/camel-http/pom.xml;components/camel-jpa/pom.xml;components/camel-mina/pom.xml;components/camel-osgi/pom.xml;components/camel-osgi/src/main/java/org/apache/camel/osgi/Activator.java;components/camel-quickfix/pom.xml;components/camel-spring-integration/pom.xml;components/camel-spring-javaconfig/pom.xml;components/camel-spring/pom.xml;components/camel-stringtemplate/pom.xml;components/camel-velocity/pom.xml;components/camel-xmlbeans/pom.xml;components/camel-xmpp/pom.xml;parent/pom.xml;platforms/karaf/features/pom.xml;platforms/karaf/features/src/main/resources/features.xml;pom.xml;
284,2016,Bug,Closed,Fixed,camel-jpa,Major,Guillaume Nodet,2009/09/15 13:12:11 +0100,2009/09/15 13:50:36 +0100,Claus Ibsen,2009/09/15 14:04:02 +0100,0.036006944,0.009328704,camel-jpa exports the org.apache.camel.processor.interceptor which leads to a split package   ,The package is already exported by camel-core  so the class in this package needs to be moved to another package.   ,2.0.0,2.1.0,0,0,20,1,3,1,1,0,0,0,0.0,0.0,1.0,6.0,camel-core/src/main/java/org/apache/camel/processor/interceptor/TraceInterceptor.java;components/camel-jpa/pom.xml;components/camel-jpa/src/main/java/org/apache/camel/processor/interceptor/JpaTraceEventMessage.java;components/camel-jpa/src/main/java/org/apache/camel/processor/interceptor/jpa/JpaTraceEventMessage.java;components/camel-jpa/src/test/java/org/apache/camel/processor/interceptor/JpaTraceEventMessageTest.java;components/camel-jpa/src/test/resources/META-INF/persistence.xml;
285,2020,Bug,Closed,Fixed,,Major,Willem Jiang,2009/09/17 10:21:34 +0100,2009/09/17 10:21:34 +0100,Willem Jiang,2009/09/17 11:32:46 +0100,0.049444444000000004,0.049444444000000004,NPE when the bundle is camel-osgi bundle is inactive   ,The stack trace. java.lang.NullPointerException atorg.apache.camel.osgi.OsgiFactoryFinder.getResource(OsgiFactoryFinder.java:85) atorg.apache.camel.osgi.OsgiFactoryFinder.findClass(OsgiFactoryFinder.java:51) atorg.apache.camel.component.file.GenericFileEndpoint.createGenericFileStrategy(GenericFileEndpoint.java:130) atorg.apache.camel.component.file.GenericFileEndpoint.getGenericFileProcessStrategy(GenericFileEndpoint.java:114) atorg.apache.camel.component.file.GenericFileConsumer.processExchange(GenericFileConsumer.java:162) atorg.apache.camel.component.file.GenericFileConsumer.processBatch(GenericFileConsumer.java:120) atorg.apache.camel.component.file.GenericFileConsumer.poll(GenericFileConsumer.java:93) atorg.apache.camel.impl.ScheduledPollConsumer.run(ScheduledPollConsumer.java:98) at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441) atjava.util.concurrent.FutureTask$Sync.innerRunAndReset(FutureTask.java:317) at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:150) atjava.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$101(ScheduledThreadPoolExecutor.java:98) atjava.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.runPeriodic(ScheduledThreadPoolExecutor.java:181) atjava.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:205) atjava.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886) atjava.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908) at java.lang.Thread.run(Thread.java:619)Here is the mail thread&#91;1&#93; which discusses about this issue.&#91;1&#93;http://www.nabble.com/Error-using-camel-file-with-windows-tt25475829.html#a25486384   ,1.5.0; 1.6.0; 2.0-M1; 1.6.1; 2.0-M2; 2.0-M3; 2.0.0,1.6.2; 2.1.0,0,0,44,1,2,2,1,1,0,0,0.0,0.0,1.0,1.0,components/camel-osgi/src/main/java/org/apache/camel/osgi/OsgiFactoryFinder.java;
287,2032,Bug,Closed,Fixed,camel-xmpp,Minor,Stan Lewis,2009/09/21 17:24:19 +0100,2009/09/21 18:27:33 +0100,Stan Lewis,2009/09/21 18:27:33 +0100,0.043912037,0.0,XmppMessages don't get converted to strings   ,This has been bugging me for awhile  when you have a route using XMPP you get instances of XmppMessage in your route rather than just a string containing the body of the XmppMessage. Tracked that down and took out the work arounds I had previously put in my contributed xmpp tests.   ,2.0.0,2.1.0,0,0,51,1,2,2,1,0,0,0,0.0,0.0,1.0,3.0,components/camel-xmpp/src/main/java/org/apache/camel/component/xmpp/XmppMessage.java;components/camel-xmpp/src/test/java/org/apache/camel/component/xmpp/XmppRouteChatTest.java;components/camel-xmpp/src/test/java/org/apache/camel/component/xmpp/XmppRouteMultipleProducersSingleConsumerTest.java;
295,2084,Bug,Closed,Fixed,camel-http,Minor,Claus Ibsen,2009/10/20 12:02:12 +0100,2009/10/20 12:02:12 +0100,Claus Ibsen,2009/10/20 12:07:11 +0100,0.0034606479999999998,0.0034606479999999998,http polling consumer does not support timeout   ,When using the consumer template to receive from a remote http service using camel-http the method receive(5000) that uses a 5 sec timeout does not work as expected.Camel does not use the 5000 value.   ,1.6.1; 2.0.0,2.1.0,0,0,34,1,2,1,0,1,0,0,0.0,0.0,1.0,3.0,components/camel-http/src/main/java/org/apache/camel/component/http/DefaultHttpBinding.java;components/camel-http/src/main/java/org/apache/camel/component/http/HttpPollingConsumer.java;components/camel-jetty/src/test/java/org/apache/camel/component/jetty/HttpPollingConsumerTest.java;
299,2113,Improvement,Closed,Fixed,camel-core,Minor,Claus Ibsen,2009/10/27 10:22:03 +0100,2009/10/27 10:22:03 +0100,Claus Ibsen,2009/10/27 12:10:56 +0100,0.075613426,0.075613426,@Bean - Add method to the annotation so you can configure the method name   ,Its a bit more trivial for end users to know how to set bean name and method if having two attributes.Otherwise they have to know about you can use dot to separate the ben name for the method name.   ,2.0.0,2.1.0,0,0,39,1,4,1,0,0,0,0,0.0,0.0,2.0,8.0,camel-core/src/main/java/org/apache/camel/component/bean/RegistryBean.java;camel-core/src/main/java/org/apache/camel/component/bean/BeanAnnotationExpressionFactory.java;camel-core/src/main/java/org/apache/camel/component/bean/RegistryBean.java;camel-core/src/main/java/org/apache/camel/converter/jaxp/XmlConverter.java;camel-core/src/main/java/org/apache/camel/language/Bean.java;camel-core/src/test/java/org/apache/camel/component/bean/BeanRegistryBeanTest.java;camel-core/src/test/java/org/apache/camel/converter/jaxp/XmlConverterTest.java;components/camel-spring/src/test/java/org/apache/camel/component/bean/MyBeanBindingConsumer.java;
300,2132,Bug,Closed,Fixed,camel-jms,Minor,Claus Ibsen,2009/11/04 11:12:18 +0100,2009/11/04 11:12:18 +0100,Claus Ibsen,2009/11/04 11:46:05 +0100,0.023460647999999997,0.023460647999999997,camel-jms - Sending Object message should fail if payload cannot be converted to serializable   ,If not a null message is created and send.See nabble:http://old.nabble.com/JPA%3A-Could-not-pass-Object-from-jpa-to-jms-to26160124.html   ,2.0.0,2.1.0,0,0,13,1,2,1,0,0,0,0,0.0,0.0,1.0,1.0,components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsBinding.java;
301,2133,Bug,Closed,Fixed,camel-core,Major,Willem Jiang,2009/11/04 13:23:55 +0100,2009/11/04 13:23:55 +0100,Willem Jiang,2009/11/04 13:31:42 +0100,0.005405093000000001,0.005405093000000001,The converter's MandatoryConvert method doesn't throw the exception when the value is null   ,   ,2.0-M1; 2.0-M2; 2.0-M3; 2.0.0,2.1.0,0,0,1,1,3,2,0,1,0,0,0.0,0.0,2.0,4.0,camel-core/src/main/java/org/apache/camel/builder/ExpressionBuilder.java;camel-core/src/main/java/org/apache/camel/component/bean/BeanInfo.java;camel-core/src/main/java/org/apache/camel/impl/converter/DefaultTypeConverter.java;camel-core/src/test/java/org/apache/camel/converter/ConverterTest.java;
303,2146,Bug,Closed,Fixed,camel-core,Major,Claus Ibsen,2009/11/06 15:37:10 +0100,2009/11/06 15:37:10 +0100,Claus Ibsen,2009/11/06 15:38:37 +0100,0.0010069439999999999,0.0010069439999999999,Type converter - Should respect Future ExecutionException as not failed to convert but some other error   ,   ,2.0.0,2.1.0,0,0,1,1,2,1,0,0,0,0,0.0,0.0,1.0,3.0,camel-core/src/main/java/org/apache/camel/impl/converter/DefaultTypeConverter.java;camel-core/src/main/java/org/apache/camel/impl/converter/FutureTypeConverter.java;camel-core/src/test/java/org/apache/camel/processor/ThrottlingInflightRoutePolicyTest.java;
306,2153,Bug,Closed,Fixed,camel-ftp,Major,Marco Crivellaro,2009/11/09 15:37:25 +0100,2009/11/10 06:55:38 +0100,Claus Ibsen,2009/11/10 14:32:22 +0100,0.954826389,0.317175926,FTP Component issue with tempPrefix or tempFileName   ,using FTP component to push files via FTP I am facing issues pushing a file on subfolder when using tempPrefix or tempFileName. route sample: from('direct:start').to('ftp://username@ipaddress?password=mypass&amp;fileName=./camel/test/message.txt&amp;tempFileName=${file:name.noext}.tmp');no errors are raised if the final destination file doesn't exists  if it exists following error is raised: Exception in thread 'main' org.apache.camel.CamelExecutionException: Exception occurred during execution on the exchange: Exchange&#91;Message: Message content&#93;  at org.apache.camel.util.ObjectHelper.wrapCamelExecutionException(ObjectHelper.java:1055)  at org.apache.camel.util.ExchangeHelper.extractResultBody(ExchangeHelper.java:446)  at org.apache.camel.impl.DefaultProducerTemplate.extractResultBody(DefaultProducerTemplate.java:431)  at org.apache.camel.impl.DefaultProducerTemplate.extractResultBody(DefaultProducerTemplate.java:427)  at org.apache.camel.impl.DefaultProducerTemplate.sendBody(DefaultProducerTemplate.java:112)  at org.apache.camel.impl.DefaultProducerTemplate.sendBody(DefaultProducerTemplate.java:117)  at com.opta.camel.test.FTPTester.main(FTPTester.java:30) Caused by: java.lang.NullPointerException  at org.apache.camel.component.file.remote.FtpOperations.existsFile(FtpOperations.java:372) at org.apache.camel.component.file.GenericFileProducer.processExchange(GenericFileProducer.java:92)  at org.apache.camel.component.file.remote.RemoteFileProducer.process(RemoteFileProducer.java:52)  at org.apache.camel.processor.SendProcessor$1.doInProducer(SendProcessor.java:86)  at org.apache.camel.processor.SendProcessor$1.doInProducer(SendProcessor.java:84)  at org.apache.camel.impl.ProducerCache.doInProducer(ProducerCache.java:146)  at org.apache.camel.processor.SendProcessor.process(SendProcessor.java:83)  at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:67)  at org.apache.camel.processor.DelegateProcessor.processNext(DelegateProcessor.java:53)  at org.apache.camel.processor.DelegateProcessor.proceed(DelegateProcessor.java:82)  at org.apache.camel.processor.interceptor.TraceInterceptor.process(TraceInterceptor.java:85)  at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:67)  at org.apache.camel.processor.RedeliveryErrorHandler.processExchange(RedeliveryErrorHandler.java:232)  at org.apache.camel.processor.RedeliveryErrorHandler.processErrorHandler(RedeliveryErrorHandler.java:162)  at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:91)  at org.apache.camel.processor.DefaultErrorHandler.process(DefaultErrorHandler.java:49)  at org.apache.camel.processor.DefaultChannel.process(DefaultChannel.java:201)  at org.apache.camel.processor.UnitOfWorkProcessor.processNext(UnitOfWorkProcessor.java:54)  at org.apache.camel.processor.DelegateProcessor.process(DelegateProcessor.java:48)  at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:67)  at org.apache.camel.component.direct.DirectProducer.process(DirectProducer.java:45)  at org.apache.camel.impl.ProducerCache$1.doInProducer(ProducerCache.java:179)  at org.apache.camel.impl.ProducerCache$1.doInProducer(ProducerCache.java:161)  at org.apache.camel.impl.ProducerCache.doInProducer(ProducerCache.java:146)  at org.apache.camel.impl.ProducerCache.sendExchange(ProducerCache.java:160)  at org.apache.camel.impl.ProducerCache.send(ProducerCache.java:98)  at org.apache.camel.impl.DefaultProducerTemplate.send(DefaultProducerTemplate.java:97)  at org.apache.camel.impl.DefaultProducerTemplate.sendBody(DefaultProducerTemplate.java:110)  ... 2 more   ,2.1.0,2.1.0,0,0,169,1,5,2,0,0,0,1,0.0,0.0,2.0,3.0,components/camel-ftp/src/main/java/org/apache/camel/component/file/remote/FtpOperations.java;components/camel-ftp/src/main/java/org/apache/camel/component/file/remote/SftpOperations.java;components/camel-ftp/src/test/java/org/apache/camel/component/file/remote/ToFtpTempFileTargetFileExistTest.java;
307,2156,Bug,Closed,Fixed,camel-bam,Minor,Karl Palsson,2009/11/11 02:39:03 +0100,2009/11/11 02:39:03 +0100,Claus Ibsen,2009/11/21 12:39:27 +0100,10.41694444,10.41694444,ActivityMonitorEngine uses ?1 parameters in JPAQL  which don't work with (at least) the hibernate JPA provider.   ,Trying to just replace my RouteBuilder with a ProcessBuilder to start moving towards using BAM. I converted everything over to JPA  to make bam happy  but then found that it still explodes  (Full stack trace below)Line 80 of ActivityMonitorEngine has this JPAQL  List&lt;ActivityState&gt; list = template.find('select x from ' + ActivityState.class.getName() + ' x where x.timeOverdue &lt; ?1'  timeNow);The ?1 named/numbered parameter seems to not be supported by hibernate's JPA provider.I can't find much of any documentation on this  could this just be made a normal positional? I can't even try out the BAM module without this 2009-11-11 01:33:53 815 ERROR &#91;org.apache.camel.bam.processor.ActivityMonitorEngine:ActivityMonitorEngine&#93; - &lt;Caught: org.springframework.dao.InvalidDataAccessApiUsageException: org.hibernate.QueryParameterException: could not locate named parameter &#91;1&#93;; nested exception is java.lang.IllegalArgumentException: org.hibernate.QueryParameterException: could not locate named parameter &#91;1&#93;&gt;org.springframework.dao.InvalidDataAccessApiUsageException: org.hibernate.QueryParameterException: could not locate named parameter &#91;1&#93;; nested exception is java.lang.IllegalArgumentException: org.hibernate.QueryParameterException: could not locate named parameter &#91;1&#93; at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:271) at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:97) at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:212) at org.springframework.orm.jpa.JpaAccessor.translateIfNecessary(JpaAccessor.java:152) at org.springframework.orm.jpa.JpaTemplate.execute(JpaTemplate.java:189) at org.springframework.orm.jpa.JpaTemplate.executeFind(JpaTemplate.java:151) at org.springframework.orm.jpa.JpaTemplate.find(JpaTemplate.java:311) at org.apache.camel.bam.processor.ActivityMonitorEngine$1.doInTransactionWithoutResult(ActivityMonitorEngine.java:80) at org.springframework.transaction.support.TransactionCallbackWithoutResult.doInTransaction(TransactionCallbackWithoutResult.java:33) at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:128) at org.apache.camel.bam.processor.ActivityMonitorEngine.run(ActivityMonitorEngine.java:77) at java.lang.Thread.run(Thread.java:619)Caused by: java.lang.IllegalArgumentException: org.hibernate.QueryParameterException: could not locate named parameter &#91;1&#93; at org.hibernate.ejb.QueryImpl.setParameter(QueryImpl.java:206) at org.hibernate.ejb.QueryImpl.setParameter(QueryImpl.java:261) at org.springframework.orm.jpa.JpaTemplate$9.doInJpa(JpaTemplate.java:316) at org.springframework.orm.jpa.JpaTemplate.execute(JpaTemplate.java:184) ... 7 moreCaused by: org.hibernate.QueryParameterException: could not locate named parameter &#91;1&#93; at org.hibernate.engine.query.ParameterMetadata.getNamedParameterDescriptor(ParameterMetadata.java:99) at org.hibernate.engine.query.ParameterMetadata.getNamedParameterExpectedType(ParameterMetadata.java:105) at org.hibernate.impl.AbstractQueryImpl.determineType(AbstractQueryImpl.java:437) at org.hibernate.impl.AbstractQueryImpl.setParameter(AbstractQueryImpl.java:407) at org.hibernate.ejb.QueryImpl.setParameter(QueryImpl.java:201) ... 10 moreLine 80   ,2.0.0,2.1.0,0,1,228,1,5,2,0,0,0,0,0.0,0.0,1.0,5.0,components/camel-bam/src/main/java/org/apache/camel/bam/ProcessBuilder.java;components/camel-bam/src/main/java/org/apache/camel/bam/model/ProcessDefinition.java;components/camel-bam/src/main/java/org/apache/camel/bam/processor/ActivityMonitorEngine.java;components/camel-bam/src/main/java/org/apache/camel/bam/processor/JpaBamProcessorSupport.java;components/camel-bam/src/main/java/org/apache/camel/bam/processor/ProcessContext.java;
310,2170,Improvement,Closed,Fixed,camel-core,Major,Claus Ibsen,2009/11/14 17:45:25 +0100,2009/11/14 17:45:25 +0100,Claus Ibsen,2009/11/14 18:10:55 +0100,0.017708333,0.017708333,UnitOfWorkProcessor - Should wrap more EIPs such as Aggregator  Splitter  RecipientList on their child routes   ,This ensures these exchanges have an UoW when they are routed  which allows for synchronization tasks to run on completion   ,2.0.0,2.1.0,0,0,20,1,2,1,0,0,0,0,0.0,0.0,2.0,5.0,camel-core/src/main/java/org/apache/camel/processor/RecipientList.java;camel-core/src/main/java/org/apache/camel/model/InterceptDefinition.java;camel-core/src/main/java/org/apache/camel/processor/BatchProcessor.java;camel-core/src/main/java/org/apache/camel/processor/OnCompletionProcessor.java;camel-core/src/main/java/org/apache/camel/processor/RecipientList.java;
312,2180,Improvement,Closed,Fixed,camel-core,Minor,Claus Ibsen,2009/11/17 08:01:22 +0100,2009/11/17 08:01:22 +0100,Claus Ibsen,2009/11/17 08:02:12 +0100,0.000579,0.000579,TryProcessor - Do not use local copy Exchange in doCatch   ,There is no need to use a local copy when processing in doCatch.See nabblehttp://old.nabble.com/To-Roman---About-TryProcessor-to26377903s22882.html   ,1.6.1; 2.0.0,2.1.0,0,0,17,1,2,1,0,1,0,0,0.0,0.0,1.0,1.0,camel-core/src/main/java/org/apache/camel/processor/TryProcessor.java;
316,2194,Improvement,Resolved,Fixed,camel-restlet,Major,Ron Gavlin,2009/11/18 10:10:22 +0100,2011/04/14 22:49:57 +0100,Claus Ibsen,2011/04/14 23:05:46 +0100,512.5384722,0.010983796,RestletProducer should support native async request/response semantics   ,RestletProducer should support native async request/response semantics like the recent changes made to the camel-jetty producer.   ,2.0.0,2.8.0,0,0,16,1,1,1,0,0,0,0,0.0,0.0,1.0,2.0,components/camel-restlet/src/main/java/org/apache/camel/component/restlet/RestletProducer.java;components/camel-restlet/src/test/java/org/apache/camel/component/restlet/RestletProducerGetTest.java;
318,2201,Bug,Closed,Fixed,camel-core,Trivial,Claus Ibsen,2009/11/19 05:58:52 +0100,2009/11/19 05:58:52 +0100,Claus Ibsen,2009/11/19 06:48:26 +0100,0.034421296000000004,0.034421296000000004,RedeliveryPolicy - Setting delay > maxDelay should should also set max value   ,See nabblehttp://old.nabble.com/maximumRedeliveryDelay-applies-even-if-you-are-not-using-exponential-back-off-to26415728.html   ,2.0.0,2.1.0,0,0,5,1,2,1,0,0,0,0,0.0,0.0,1.0,1.0,camel-core/src/main/java/org/apache/camel/processor/RedeliveryPolicy.java;
320,2215,Bug,Closed,Fixed,camel-core,Major,Claus Ibsen,2009/11/24 06:37:35 +0100,2009/11/24 06:37:35 +0100,Claus Ibsen,2009/11/24 07:05:15 +0100,0.019212963,0.019212963,CaseInsensitiveMap should be serializable   ,CaseInsensitiveMap should be fully serializableSee nabblehttp://old.nabble.com/DataSet-header-%7BCamelDataSetIndex%3D0%7D-causes-failure-to26487985.html   ,2.0.0,2.1.0,0,0,9,1,2,1,0,0,0,0,0.0,0.0,1.0,2.0,camel-core/src/main/java/org/apache/camel/util/CaseInsensitiveMap.java;camel-core/src/test/java/org/apache/camel/util/CaseInsensitiveMapTest.java;
321,2220,Improvement,Closed,Fixed,camel-jdbc,Minor,Claus Ibsen,2009/11/24 10:39:18 +0100,2009/11/24 10:39:18 +0100,Claus Ibsen,2009/11/24 11:31:28 +0100,0.036226852000000004,0.036226852000000004,camel-jdbc - Allow properties to be set on Statement such as fetchSize  maxRows etc   ,Just like the SQL component offers a template. to set any property on the Spring JdbcTemplate we should do the same for this component for its Statement class.   ,2.0.0,2.1.0,0,0,28,1,2,1,0,0,0,0,0.0,0.0,1.0,4.0,components/camel-jdbc/src/main/java/org/apache/camel/component/jdbc/JdbcComponent.java;components/camel-jdbc/src/main/java/org/apache/camel/component/jdbc/JdbcEndpoint.java;components/camel-jdbc/src/main/java/org/apache/camel/component/jdbc/JdbcProducer.java;components/camel-jdbc/src/test/java/org/apache/camel/component/jdbc/JdbcStatementParametersTest.java;
323,2227,Bug,Closed,Fixed,camel-core,Minor,Claus Ibsen,2009/11/25 11:22:46 +0100,2009/11/25 11:22:46 +0100,Claus Ibsen,2009/11/25 12:28:11 +0100,0.045428240999999994,0.045428240999999994,Mock component - expectedBodiesReceived(List) does not work as expected   ,Java chooses the varargs methods always instead of the List method.   ,2.0.0,2.1.0,0,0,11,1,3,1,0,0,0,0,0.0,0.0,1.0,2.0,camel-core/src/main/java/org/apache/camel/component/mock/MockEndpoint.java;camel-core/src/test/java/org/apache/camel/component/mock/MockExpectedBodiesAsListTest.java;
327,2240,Improvement,Closed,Fixed,,Major,Hadrian Zbarcea,2009/12/01 03:24:45 +0100,2009/12/01 03:24:45 +0100,Hadrian Zbarcea,2009/12/01 04:20:29 +0100,0.038703704,0.038703704,Ridiculously long release time due to the javadoc plugin   ,   ,2.1.0,2.1.0,0,0,1,1,1,1,0,0,0,0,1.0,1.0,0.0,0.0,
329,2255,Bug,Closed,Fixed,,Major,Willem Jiang,2009/12/04 09:20:59 +0100,2009/12/04 09:20:59 +0100,Willem Jiang,2009/12/04 09:36:58 +0100,0.011099537,0.011099537,camel-example-etl throw error when running it.   ,Here is the stack trace.[ Camel thread 0: JpaComponent] JuelExpression DEBUG Noimpl class for juel ExpressionFactory defined in'META-INF/services/org/apache/camel/component/el'org.apache.camel.NoFactoryAvailableException: Could not find factory classfor resource: META-INF/services/org/apache/camel/component/juel atorg.apache.camel.impl.DefaultFactoryFinder.doFindFactoryProperties(DefaultFactoryFinder.java:135) atorg.apache.camel.impl.DefaultFactoryFinder.findClass(DefaultFactoryFinder.java:77) atorg.apache.camel.language.juel.JuelExpression.getExpressionFactory(JuelExpression.java:81) atorg.apache.camel.language.juel.JuelExpression.evaluate(JuelExpression.java:70) atorg.apache.camel.builder.ProcessorBuilder$4.process(ProcessorBuilder.java:94) atorg.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:67) atorg.apache.camel.processor.DelegateProcessor.processNext(DelegateProcessor.java:53) atorg.apache.camel.processor.DelegateProcessor.proceed(DelegateProcessor.java:82) atorg.apache.camel.processor.interceptor.TraceInterceptor.process(TraceInterceptor.java:93) atorg.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:67) atorg.apache.camel.processor.RedeliveryErrorHandler.processExchange(RedeliveryErrorHandler.java:223) atorg.apache.camel.processor.RedeliveryErrorHandler.processErrorHandler(RedeliveryErrorHandler.java:153) atorg.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:91) atorg.apache.camel.processor.DefaultErrorHandler.process(DefaultErrorHandler.java:49) atorg.apache.camel.processor.DefaultChannel.process(DefaultChannel.java:206) at org.apache.camel.processor.Pipeline.process(Pipeline.java:74) atorg.apache.camel.processor.UnitOfWorkProcessor.processNext(UnitOfWorkProcessor.java:54) atorg.apache.camel.processor.DelegateProcessor.process(DelegateProcessor.java:48) atorg.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:67) atorg.apache.camel.component.jpa.JpaConsumer.processBatch(JpaConsumer.java:133) atorg.apache.camel.component.jpa.JpaConsumer$1.doInJpa(JpaConsumer.java:86) atorg.apache.camel.component.jpa.JpaTemplateTransactionStrategy$1$1.doInJpa(JpaTemplateTransactionStrategy.java:81) atorg.springframework.orm.jpa.JpaTemplate.execute(JpaTemplate.java:184) atorg.springframework.orm.jpa.JpaTemplate.execute(JpaTemplate.java:147) atorg.apache.camel.component.jpa.JpaTemplateTransactionStrategy$1.doInTransaction(JpaTemplateTransactionStrategy.java:79) atorg.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:128) atorg.apache.camel.component.jpa.JpaTemplateTransactionStrategy.execute(JpaTemplateTransactionStrategy.java:77) atorg.apache.camel.component.jpa.JpaConsumer.poll(JpaConsumer.java:70) atorg.apache.camel.impl.ScheduledPollConsumer.run(ScheduledPollConsumer.java:108) atjava.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441) atjava.util.concurrent.FutureTask$Sync.innerRunAndReset(FutureTask.java:317) at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:150) atjava.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$101(ScheduledThreadPoolExecutor.java:98) atjava.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.runPeriodic(ScheduledThreadPoolExecutor.java:181) atjava.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:205) atjava.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886) atjava.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908) at java.lang.Thread.run(Thread.java:619)   ,2.2.0,2.2.0,0,0,77,1,1,1,0,0,0,0,0.0,0.0,1.0,1.0,components/camel-juel/src/main/java/org/apache/camel/language/juel/JuelExpression.java;
331,2276,Improvement,Closed,Fixed,camel-core,Trivial,Claus Ibsen,2009/12/10 12:24:19 +0100,2009/12/10 12:24:19 +0100,Claus Ibsen,2009/12/10 12:32:28 +0100,0.005659722,0.005659722,seda component - Support no timeout for task to complete using timeout 0 or negative   ,See nabblehttp://old.nabble.com/SEDA-Timeout-ts26724664.html   ,2.1.0,2.2.0,0,0,5,1,1,1,0,0,0,0,0.0,0.0,1.0,3.0,camel-core/src/main/java/org/apache/camel/component/seda/SedaProducer.java;camel-core/src/main/java/org/apache/camel/impl/DefaultProducer.java;camel-core/src/test/java/org/apache/camel/component/seda/SedaTimeoutDisabledTest.java;
334,2303,Bug,Closed,Fixed,camel-core,Major,Claus Ibsen,2009/12/18 13:10:15 +0100,2009/12/18 13:10:15 +0100,Claus Ibsen,2009/12/18 14:12:44 +0100,0.043391204,0.043391204,GroupedExchange in Aggregator is not working correctly   ,See nabblehttp://old.nabble.com/Help%21-org.apache.camel.impl.GroupedExchange-does-not-exist-in-the-latest-download-ts26841584.html   ,2.0.0; 2.1.0,2.2.0,0,0,5,1,1,1,0,0,0,0,0.0,1.0,1.0,5.0,camel-core/src/main/java/org/apache/camel/model/AggregateDefinition.java;camel-core/src/main/java/org/apache/camel/processor/BatchProcessor.java;camel-core/src/test/java/org/apache/camel/processor/aggregator/AggregateGroupedExchangeBatchSizeTest.java;camel-core/src/test/java/org/apache/camel/processor/aggregator/AggregateGroupedExchangeMultipleCorrelationTest.java;camel-core/src/test/java/org/apache/camel/processor/aggregator/AggregateGroupedExchangeTest.java;
335,2308,Improvement,Closed,Fixed,camel-ftp,Major,Edson CImionatto,2009/12/21 15:39:38 +0100,2009/12/22 06:31:36 +0100,Claus Ibsen,2009/12/22 06:40:54 +0100,0.62587963,0.006458333,StrictHostKeyChecking Url Option   ,Camel users will appreciate a new url option that sets JSch Session StrictHostKeyChecking to 'no' . Preferably  this new option will work just like URI Options knownHosts. This improvement will facilitate bypass sftp/ssh key authentication.   ,2.0.0; 2.1.0,2.2.0,0,0,36,1,7,2,0,0,0,0,0.0,0.0,1.0,2.0,components/camel-ftp/src/main/java/org/apache/camel/component/file/remote/SftpConfiguration.java;components/camel-ftp/src/main/java/org/apache/camel/component/file/remote/SftpOperations.java;
336,2310,Improvement,Closed,Fixed,camel-core,Minor,Claus Ibsen,2009/12/22 12:07:57 +0100,2009/12/22 12:07:57 +0100,Claus Ibsen,2009/12/22 12:11:36 +0100,0.002534722,0.002534722,UnitOfWork - Must be done in finally to ensure even when java.lang.Error is thrown fore reliable shutdown   ,This helps to keep in flight registry up-to-date even when java.lang.Error is thrown  such as when people use JUnit assertions.   ,2.1.0,2.2.0,0,0,20,1,1,1,0,0,0,0,0.0,0.0,1.0,1.0,camel-core/src/main/java/org/apache/camel/processor/UnitOfWorkProcessor.java;
342,2338,Improvement,Closed,Fixed,camel-spring,Trivial,Claus Ibsen,2010/01/06 12:26:59 +0100,2010/01/06 12:26:59 +0100,Claus Ibsen,2010/01/06 12:35:24 +0100,0.005844907,0.005844907,package will log WARN that you should use packageScan instead. We should keep both options so remove the WARN   ,&#91;2010-01-06 11:32:35.494&#93; server-dm-7 org.apache.camel.spring.CamelContextFactoryBean.unknown W Using a packages element to specify packages to search has been deprecated. Please use a packageScan element instead.   ,2.0.0; 2.1.0,2.2.0,0,0,24,1,1,1,1,1,0,0,0.0,0.0,2.0,14.0,camel-core/src/main/java/org/apache/camel/Exchange.java;camel-core/src/main/java/org/apache/camel/impl/DefaultExchange.java;camel-core/src/main/java/org/apache/camel/model/SplitDefinition.java;camel-core/src/main/java/org/apache/camel/processor/MulticastProcessor.java;camel-core/src/main/java/org/apache/camel/processor/Splitter.java;camel-core/src/main/java/org/apache/camel/processor/aggregate/UseOriginalAggregationStrategy.java;camel-core/src/main/java/org/apache/camel/util/AsyncProcessorHelper.java;camel-core/src/test/java/org/apache/camel/processor/async/AsyncEndpointMulticastFineGrainedErrorHandlingTest.java;camel-core/src/test/java/org/apache/camel/processor/async/AsyncEndpointMulticastTest.java;camel-core/src/test/java/org/apache/camel/processor/async/AsyncEndpointRecipientListFineGrainedErrorHandlingTest.java;camel-core/src/test/java/org/apache/camel/processor/async/AsyncEndpointSplitTest.java;camel-core/src/test/java/org/apache/camel/processor/async/AsyncEndpointSplitUseLatestAggregationStrategyTest.java;camel-core/src/test/java/org/apache/camel/processor/async/MyAsyncProducer.java;components/camel-spring/src/main/java/org/apache/camel/spring/CamelContextFactoryBean.java;
345,2352,Improvement,Closed,Fixed,camel-jdbc,Minor,Claus Ibsen,2010/01/12 08:15:07 +0100,2010/01/12 08:15:07 +0100,Claus Ibsen,2010/01/12 08:26:52 +0100,0.008159722,0.008159722,camel-jdbc - Add option to select between JDBC 4 or 3 column label / name semantics   ,JDBC drivers is often a pain when it comes to compliance.If you use SQL SELECT with aliases then you may have issues with camel-jdbc as it retrieves the column name use ResultSetMetaData which behaves different according to the JDBC spec.See more at:http://fusesource.com/forums/thread.jspa?messageID=5623&amp;#5623Introduce a new option useJDBC4ColumnNameAndLabelSemantics where you can configure which option to use. Will by default use JDBC 4   ,1.6.2; 2.1.0,1.6.3; 2.2.0,0,0,63,1,1,1,1,1,0,0,0.0,0.0,1.0,5.0,components/camel-jdbc/src/main/java/org/apache/camel/component/jdbc/JdbcComponent.java;components/camel-jdbc/src/main/java/org/apache/camel/component/jdbc/JdbcEndpoint.java;components/camel-jdbc/src/main/java/org/apache/camel/component/jdbc/JdbcProducer.java;components/camel-jdbc/src/test/java/org/apache/camel/component/jdbc/JdbcRouteUsingSqlSelectAliasJdbc3Test.java;components/camel-jdbc/src/test/java/org/apache/camel/component/jdbc/JdbcRouteUsingSqlSelectAliasTest.java;
349,2375,Improvement,Closed,Fixed,camel-core,Major,Claus Ibsen,2010/01/18 16:39:09 +0100,2010/01/18 16:39:09 +0100,Claus Ibsen,2010/01/18 18:15:58 +0100,0.067233796,0.067233796,Let ExpressionClause be reusable by other builders which are not route based   ,Allows you to use all the expressions from ExpressionClause which has many  on other builders which are not tied to the route models.For example at mock  notify builder and elsewhere   ,2.0.0; 2.1.0,2.2.0,0,0,30,1,1,1,1,1,0,0,0.0,0.0,1.0,14.0,camel-core/src/main/java/org/apache/camel/builder/ExpressionClause.java;camel-core/src/main/java/org/apache/camel/builder/ExpressionClauseSupport.java;camel-core/src/main/java/org/apache/camel/builder/NotifyBuilder.java;camel-core/src/main/java/org/apache/camel/component/mock/AssertionClause.java;camel-core/src/main/java/org/apache/camel/component/mock/MockEndpoint.java;camel-core/src/main/java/org/apache/camel/converter/jaxp/XmlConverter.java;camel-core/src/main/java/org/apache/camel/model/language/ExpressionDefinition.java;camel-core/src/main/java/org/apache/camel/model/language/MethodCallExpression.java;camel-core/src/main/java/org/apache/camel/model/language/NamespaceAwareExpression.java;camel-core/src/main/java/org/apache/camel/model/language/TokenizerExpression.java;camel-core/src/main/java/org/apache/camel/model/language/XPathExpression.java;camel-core/src/main/java/org/apache/camel/model/language/XQueryExpression.java;camel-core/src/test/java/org/apache/camel/builder/NotifyBuilderTest.java;camel-core/src/test/java/org/apache/camel/component/mock/MockAssertionClauseTest.java;
352,2392,Improvement,Closed,Fixed,camel-core,Minor,Claus Ibsen,2010/01/22 12:17:10 +0100,2010/01/22 12:17:10 +0100,Claus Ibsen,2010/01/22 16:20:18 +0100,0.168842593,0.168842593,DefaultTypeConverterRegistry - Let it load upfront   ,This allows it to pre load all type converters on startup instead on demand. This also removes the need for synchronization at runtime as the converters are loaded up front.   ,2.1.0,2.2.0,0,0,30,1,1,1,0,0,0,0,1.0,0.0,3.0,9.0,camel-core/src/main/java/org/apache/camel/impl/DefaultCamelContext.java;camel-core/src/main/java/org/apache/camel/impl/converter/DefaultTypeConverter.java;camel-core/src/test/java/org/apache/camel/converter/ConverterTest.java;camel-core/src/test/java/org/apache/camel/converter/JaxpTest.java;camel-core/src/test/java/org/apache/camel/converter/StringSourceTest.java;camel-core/src/test/java/org/apache/camel/impl/MultipleLifecycleStrategyTest.java;examples/camel-example-cxf-async/src/main/resources/META-INF/spring/camel-client.xml;components/camel-jcr/src/test/java/org/apache/camel/component/jcr/JcrConverterTest.java;components/camel-scala/src/test/scala/org/apache/camel/scala/ScalaTypeConverterTest.scala;
353,2395,Bug,Closed,Fixed,camel-core,Major,Claus Ibsen,2010/01/24 14:38:44 +0100,2010/01/24 14:38:44 +0100,Claus Ibsen,2010/01/24 17:23:26 +0100,0.114375,0.114375,file component - Using fileName option should better detect constant vs dynamic name   ,eg using fileName=header.txt makes Camel think its header with the name txt you want to use.   ,2.1.0,2.2.0,0,0,16,1,1,1,0,0,0,0,0.0,0.0,2.0,4.0,camel-core/src/test/java/org/apache/camel/component/file/FromFileMulticastToFilesTest.java;camel-core/src/main/java/org/apache/camel/component/file/GenericFileEndpoint.java;camel-core/src/test/java/org/apache/camel/component/file/FileProducerFilenameConstantTest.java;camel-core/src/test/java/org/apache/camel/component/file/FromFileMulticastToFilesTest.java;
356,2436,Bug,Closed,Fixed,camel-core,Major,Claus Ibsen,2010/02/02 10:14:31 +0100,2010/02/02 10:14:31 +0100,Claus Ibsen,2010/02/02 12:59:10 +0100,0.114340278,0.114340278,BeanProcessor - Should differentiate between void and method returning null values   ,When invoking a bean method it should better detect whether the bean is a void or has a return type.And if it returns null it should be regarded as a valid response and set as body.See nabblehttp://old.nabble.com/filtering-messages-ts27403559.html   ,2.0.0; 2.1.0,2.2.0,0,0,40,1,1,1,0,1,0,0,0.0,0.0,1.0,6.0,camel-core/src/main/java/org/apache/camel/Exchange.java;camel-core/src/main/java/org/apache/camel/component/bean/BeanProcessor.java;camel-core/src/main/java/org/apache/camel/component/bean/MethodInfo.java;camel-core/src/test/java/org/apache/camel/component/bean/BeanInvokeTest.java;camel-core/src/test/java/org/apache/camel/component/bean/BeanWithPropertiesAndHeadersAndBodyInjectionTest.java;camel-core/src/test/java/org/apache/camel/component/bean/issues/FilterPojoIssueTest.java;
357,2447,Bug,Closed,Fixed,camel-cxf,Major,Willem Jiang,2010/02/04 03:45:52 +0100,2010/02/04 03:45:52 +0100,Willem Jiang,2010/02/04 04:38:16 +0100,0.036388889,0.036388889,cxfbean should  propagate CONTENT_TYPE for other camel component to use   ,There is no 'content-type' header return from the below route &lt;route&gt; &lt;from uri='jetty:http://localhost:9006/employeesBase?matchOnUriPrefix=true'/&gt; &lt;to uri='cxfbean:EmployeesPOJO'/&gt; &lt;/route&gt;   ,2.0-M3; 2.0.0; 2.1.0,2.2.0,0,0,27,1,1,1,0,1,0,0,0.0,0.0,1.0,2.0,components/camel-cxf/src/main/java/org/apache/camel/component/cxf/cxfbean/DefaultCxfBeanBinding.java;components/camel-cxf/src/test/java/org/apache/camel/component/cxf/cxfbean/CxfBeanTest.java;
359,2456,Bug,Closed,Fixed,camel-jms,Minor,Willem Jiang,2010/02/10 03:13:00 +0100,2010/02/10 03:13:00 +0100,Willem Jiang,2010/02/12 08:09:03 +0100,2.2055902780000003,2.2055902780000003,WARNING log of JmsTemporaryTopicEndpoint   JmsTemporaryQueueEndpoint don't have the ManagedResource annotation   ,Here is the mail thread which discusses about this issue.http://old.nabble.com/Attemp-to-send-message-to-activemq-temporary-queue-using-producerTemplate%3A-InvalidMetadataException-tp27520096p27520096.html   ,2.1.0,2.3.0,0,0,13,1,9,2,0,0,0,0,0.0,0.0,2.0,4.0,components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsTemporaryQueueEndpoint.java;components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsTemporaryTopicEndpoint.java;components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsTemporaryQueueEndpoint.java;components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsTemporaryTopicEndpoint.java;
361,2471,Improvement,Closed,Fixed,camel-core,Minor,Claus Ibsen,2010/02/15 18:27:52 +0100,2010/02/18 15:01:36 +0100,Claus Ibsen,2010/02/18 15:01:36 +0100,2.856759259,0.0,seda endpoint - Let it be easily to configure size option to use an unbounded queue   ,Instead of having 1000 as the default size we should let it be unbounded by default and let people set a size if they really want that   ,2.0.0; 2.1.0; 2.2.0,2.3.0,0,0,27,1,4,1,0,1,0,0,0.0,0.0,2.0,6.0,camel-core/src/main/java/org/apache/camel/component/seda/SedaComponent.java;camel-core/src/main/java/org/apache/camel/component/seda/SedaEndpoint.java;camel-core/src/main/java/org/apache/camel/model/AggregateDefinition.java;camel-core/src/test/java/org/apache/camel/component/seda/SedaDefaultUnboundedQueueSizeTest.java;camel-core/src/main/java/org/apache/camel/component/seda/SedaEndpoint.java;camel-core/src/test/java/org/apache/camel/component/seda/SedaEndpointTest.java;
364,2483,Improvement,Closed,Fixed,camel-core,Minor,Claus Ibsen,2010/02/18 08:54:28 +0100,2010/02/18 08:54:28 +0100,Claus Ibsen,2010/02/18 08:55:05 +0100,0.00042800000000000005,0.00042800000000000005,NotifyBuilder - add reset method   ,Add a reset() method   ,2.2.0,2.3.0,0,0,4,1,2,1,0,0,0,0,0.0,0.0,1.0,2.0,camel-core/src/main/java/org/apache/camel/builder/NotifyBuilder.java;camel-core/src/test/java/org/apache/camel/builder/NotifyBuilderTest.java;
366,2492,Improvement,Closed,Fixed,camel-core,Minor,Claus Ibsen,2010/02/22 13:10:14 +0100,2010/02/22 13:10:14 +0100,Claus Ibsen,2010/02/22 14:08:15 +0100,0.040289352,0.040289352,PollingConsumerPollStrategy - Should support boolean on begin to support skipping polling   ,See nabblehttp://old.nabble.com/File-Consumer-with-dynamic-list-of-files-to-poll-ts27683938.htmlAnd wiki pagehttp://camel.apache.org/polling-consumer.html   ,2.0.0; 2.1.0; 2.2.0,2.3.0,1,1,10,1,2,1,1,1,0,0,0.0,0.0,1.0,8.0,camel-core/src/main/java/org/apache/camel/impl/DefaultPollingConsumerPollStrategy.java;camel-core/src/main/java/org/apache/camel/impl/ScheduledPollConsumer.java;camel-core/src/main/java/org/apache/camel/spi/PollingConsumerPollStrategy.java;camel-core/src/test/java/org/apache/camel/component/file/FileConsumerPollStrategyNotBeginTest.java;camel-core/src/test/java/org/apache/camel/component/file/FileConsumerPollStrategyRollbackThrowExceptionTest.java;camel-core/src/test/java/org/apache/camel/component/file/FileConsumerPollStrategyStopOnRollbackTest.java;camel-core/src/test/java/org/apache/camel/component/file/FileConsumerPollStrategyTest.java;camel-core/src/test/java/org/apache/camel/impl/ScheduledPollConsumerTest.java;
368,2526,Improvement,Closed,Fixed,camel-core,Trivial,Claus Ibsen,2010/03/05 10:09:56 +0100,2010/04/02 13:13:18 +0100,Ashwin Karpe,2010/04/02 17:27:16 +0100,28.3037037,0.17636574100000002,SedaConsumer - Add check to limit the concurrentConsumer to < 1000 to prevent mistypes   ,If you enter concurrentConsumers=99999999 then Camel creates a lot of threads for concurrent consumers on the SEDA queue.We should validate the size is a reasonable value  at least &lt; 1000. Maybe limit to &lt; 500   ,2.0.0; 2.1.0; 2.2.0,2.3.0,0,0,35,1,7,2,0,1,0,0,1.0,0.0,2.0,2.0,camel-core/src/main/java/org/apache/camel/component/seda/SedaComponent.java;camel-core/src/main/java/org/apache/camel/component/seda/SedaComponent.java;
369,2528,Bug,Closed,Fixed,karaf,Major,Freeman Fang,2010/03/08 04:36:23 +0100,2010/03/08 04:40:50 +0100,Willem Jiang,2010/03/10 11:02:16 +0100,2.2679745369999997,2.264884259,should use servicemix jaxws 2.1 spec bundle but not the geronimo one   ,otherwise will see the exception like javax.xml.ws.spi.FactoryFinder$ConfigurationError: Provider org.apache.axis2.jaxws.spi.Provider not foundat javax.xml.ws.spi.FactoryFinder$2.run(FactoryFinder.java:135)at javax.xml.ws.spi.FactoryFinder.doPrivileged(FactoryFinder.java:264)at javax.xml.ws.spi.FactoryFinder.newInstance(FactoryFinder.java:122)at javax.xml.ws.spi.FactoryFinder.access$200(FactoryFinder.java:42)at javax.xml.ws.spi.FactoryFinder$3.run(FactoryFinder.java:255)at javax.xml.ws.spi.FactoryFinder.doPrivileged(FactoryFinder.java:264)at javax.xml.ws.spi.FactoryFinder.find(FactoryFinder.java:165)at javax.xml.ws.spi.Provider.provider(Provider.java:39)at javax.xml.ws.Service.&lt;init&gt;(Service.java:36)   ,2.2.0,2.3.0,0,1,20,1,3,3,0,0,0,0,0.0,0.0,1.0,2.0,platforms/karaf/features/pom.xml;platforms/karaf/features/src/main/resources/features.xml;
373,2554,Bug,Closed,Fixed,,Major,Willem Jiang,2010/03/16 16:58:51 +0100,2010/03/16 16:58:51 +0100,Willem Jiang,2010/03/19 04:11:01 +0100,2.4667824069999997,2.4667824069999997,IndexOutOfBoundsException occur in UnsafeUriCharactersEncoder.class   ,Here is the mail thread for the detail discussion.   ,1.3.0; 1.4.0; 1.5.0; 1.6.0; 2.0-M1; 1.6.1; 1.6.2; 2.0-M2; 2.0-M3; 2.0.0; 2.1.0; 2.2.0,1.6.3; 2.3.0,0,0,12,1,1,1,1,1,0,0,0.0,0.0,2.0,4.0,components/camel-web/src/main/java/org/apache/camel/web/util/UriCharactersEncoder.java;components/camel-web/src/test/java/org/apache/camel/web/util/UriCharachersEncoderTest.java;camel-core/src/main/java/org/apache/camel/util/UnsafeUriCharactersEncoder.java;camel-core/src/test/java/org/apache/camel/util/UnsafeCharactersEncoderTest.java;
375,2567,Improvement,Closed,Fixed,camel-core,Minor,Claus Ibsen,2010/03/22 11:17:16 +0100,2010/03/22 11:17:16 +0100,Claus Ibsen,2010/03/22 12:23:07 +0100,0.045729167,0.045729167,Allow recipientList to be used inside a CBR using Java DSL   ,RecipientList is now offering fluent builders for parallel support.We should allow it to work in CBR with having end() being able to return the Type it came from  eg ChoiceDefinition.See nabblehttp://old.nabble.com/RecipientList-%2B-Choice-no-longer-work-together-in-Camel-2.2.0--ts27983922.html   ,2.2.0,2.3.0,0,1,34,1,4,2,0,0,0,0,0.0,0.0,1.0,3.0,camel-core/src/main/java/org/apache/camel/model/ProcessorDefinition.java;camel-core/src/main/java/org/apache/camel/model/RecipientListDefinition.java;camel-core/src/test/java/org/apache/camel/processor/CBRWithRecipientListTest.java;
377,2587,Improvement,Closed,Fixed,camel-core,Major,Claus Ibsen,2010/03/28 09:10:29 +0100,2010/03/28 09:10:29 +0100,Claus Ibsen,2010/03/28 09:17:29 +0100,0.0048611109999999996,0.0048611109999999996,Graceful shutdown - Add option to shutdown routes in reverse order as they were started   ,As its more intuitive this way.And it should be the new default in 2.3 onwards. The old behavior can be enabled by turning off the shutdownRoutesInReverseOrder option.   ,2.2.0,2.3.0,0,0,27,1,2,1,0,0,0,0,0.0,0.0,1.0,4.0,camel-core/src/main/java/org/apache/camel/impl/DefaultShutdownStrategy.java;camel-core/src/main/java/org/apache/camel/spi/ShutdownStrategy.java;camel-core/src/test/java/org/apache/camel/processor/RouteShutdownNotReverseOrderTest.java;camel-core/src/test/java/org/apache/camel/processor/RouteShutdownReverseOrderTest.java;
378,2603,Improvement,Closed,Fixed,,Major,Anand,2010/03/30 14:35:23 +0100,2010/04/28 09:50:47 +0100,Claus Ibsen,2010/04/28 09:50:47 +0100,28.80236111,0.0,support get operation for cache   ,Please support get operation on cache component.here is the discussion.http://old.nabble.com/read-from-cache-component-ts28071593.html   ,2.2.0,2.3.0,0,0,13,1,6,2,0,0,0,0,0.0,0.0,1.0,13.0,components/camel-cache/src/main/java/org/apache/camel/component/cache/CacheComponent.java;components/camel-cache/src/main/java/org/apache/camel/component/cache/CacheConfiguration.java;components/camel-cache/src/main/java/org/apache/camel/component/cache/CacheConstants.java;components/camel-cache/src/main/java/org/apache/camel/component/cache/CacheConsumer.java;components/camel-cache/src/main/java/org/apache/camel/component/cache/CacheEndpoint.java;components/camel-cache/src/main/java/org/apache/camel/component/cache/CacheManagerFactory.java;components/camel-cache/src/main/java/org/apache/camel/component/cache/CacheProducer.java;components/camel-cache/src/main/java/org/apache/camel/component/cache/factory/CacheManagerFactory.java;components/camel-cache/src/main/java/org/apache/camel/processor/cache/CacheBasedMessageBodyReplacer.java;components/camel-cache/src/main/java/org/apache/camel/processor/cache/CacheBasedTokenReplacer.java;components/camel-cache/src/main/java/org/apache/camel/processor/cache/CacheBasedXPathReplacer.java;components/camel-cache/src/test/java/org/apache/camel/component/cache/CacheConsumerTest.java;components/camel-cache/src/test/java/org/apache/camel/component/cache/CacheProducerTest.java;
379,2606,Improvement,Closed,Fixed,camel-gae,Minor,Martin Krasser,2010/04/01 14:20:34 +0100,2010/04/01 14:20:34 +0100,Martin Krasser,2010/04/04 13:53:49 +0100,2.9814236110000003,2.9814236110000003,Make use of testing mocks of the the GAE SDK   ,Replace existing GAE service mocks with those coming with the GAE SDK.   ,2.2.0,2.3.0,0,0,12,1,1,1,0,0,0,0,0.0,0.0,1.0,24.0,components/camel-gae/src/main/java/org/apache/camel/component/gae/task/GTaskComponent.java;components/camel-gae/src/test/java/com/google/appengine/api/labs/taskqueue/TaskOptionsAccessor.java;components/camel-gae/src/test/java/org/apache/camel/component/gae/TestConfig.java;components/camel-gae/src/test/java/org/apache/camel/component/gae/auth/GAuthAuthorizeBindingTest.java;components/camel-gae/src/test/java/org/apache/camel/component/gae/auth/GAuthTestUtils.java;components/camel-gae/src/test/java/org/apache/camel/component/gae/auth/GAuthUpgradeBindingTest.java;components/camel-gae/src/test/java/org/apache/camel/component/gae/http/GHttpBindingTest.java;components/camel-gae/src/test/java/org/apache/camel/component/gae/http/GHttpCombinedRouteBuilder.java;components/camel-gae/src/test/java/org/apache/camel/component/gae/http/GHttpCombinedRouteBuilderTest.java;components/camel-gae/src/test/java/org/apache/camel/component/gae/http/GHttpOutboundRouteBuilder.java;components/camel-gae/src/test/java/org/apache/camel/component/gae/http/GHttpOutboundRouteBuilderTest.java;components/camel-gae/src/test/java/org/apache/camel/component/gae/http/GHttpTestUtils.java;components/camel-gae/src/test/java/org/apache/camel/component/gae/login/GLoginEndpointTest.java;components/camel-gae/src/test/java/org/apache/camel/component/gae/login/GLoginTestUtils.java;components/camel-gae/src/test/java/org/apache/camel/component/gae/mail/GMailBindingTest.java;components/camel-gae/src/test/java/org/apache/camel/component/gae/mail/GMailEndpointTest.java;components/camel-gae/src/test/java/org/apache/camel/component/gae/support/ServletTestSupport.java;components/camel-gae/src/test/java/org/apache/camel/component/gae/task/GTaskBindingTest.java;components/camel-gae/src/test/java/org/apache/camel/component/gae/task/GTaskCombinedRouteBuilder.java;components/camel-gae/src/test/java/org/apache/camel/component/gae/task/GTaskCombinedRouteBuilderTest.java;components/camel-gae/src/test/java/org/apache/camel/component/gae/task/GTaskEndpointTest.java;components/camel-gae/src/test/java/org/apache/camel/component/gae/task/GTaskTestUtils.java;components/camel-gae/src/test/java/org/apache/camel/component/gae/task/MockQueue.java;components/camel-gae/src/test/resources/org/apache/camel/component/gae/task/context-combined.xml;
383,2642,Bug,Closed,Fixed,camel-core,Minor,Christian M?ller,2010/04/14 10:26:59 +0100,2010/04/15 08:08:00 +0100,Claus Ibsen,2010/06/07 12:39:08 +0100,54.09177083,53.18828704,Inconsistency between IntrospectionSupport.getProperties() and IntrospectionSupport.getProperty()   ,IntrospectionSupport.getProperties() and IntrospectionSupport.getProperty() work in an inconsistency way:ExampleBean bean = new ExampleBean();Date date = new Date(0);bean.setDate(date);assertSame(date  IntrospectionSupport.getProperty(bean  'date')); // succeedMap&lt;String  Object&gt; map = new HashMap&lt;String  Object&gt;();IntrospectionSupport.getProperties(bean  map  null);assertSame(date  map.get('date')); // fails   ,2.3.0,2.4.0,0,0,50,1,5,2,0,0,0,0,0.0,0.0,3.0,6.0,camel-core/src/main/java/org/apache/camel/util/IntrospectionSupport.java;camel-core/src/test/java/org/apache/camel/util/AnotherExampleBean.java;camel-core/src/test/java/org/apache/camel/util/IntrospectionSupportTest.java;camel-core/src/main/java/org/apache/camel/component/bean/BeanInfo.java;camel-core/src/main/java/org/apache/camel/util/IntrospectionSupport.java;camel-core/src/main/java/org/apache/camel/util/IntrospectionSupport.java;
384,2656,Improvement,Closed,Fixed,camel-core,Minor,Claus Ibsen,2010/04/18 15:46:27 +0100,2010/04/19 09:52:04 +0100,Claus Ibsen,2010/04/21 07:41:59 +0100,2.663564815,1.9096643519999998,Aggregator - Add option to specify if completionInterval to have interval based completion   ,This allows for example the stock quote example to use 5 sec interval to trigger completions to spit out current quotes every 5th seconds.   ,2.3.0,2.3.0,0,0,24,1,3,1,0,0,0,0,0.0,0.0,3.0,15.0,platforms/karaf/features/pom.xml;platforms/karaf/features/src/main/resources/features.xml;camel-core/src/main/java/org/apache/camel/model/AggregateDefinition.java;camel-core/src/main/java/org/apache/camel/processor/aggregate/AggregateProcessor.java;camel-core/src/main/java/org/apache/camel/processor/aggregate/MemoryAggregationRepository.java;camel-core/src/main/java/org/apache/camel/spi/AggregationRepository.java;camel-core/src/test/java/org/apache/camel/processor/aggregator/AggregateCompletionIntervalTest.java;camel-core/src/test/java/org/apache/camel/processor/aggregator/AggregateProcessorTest.java;components/camel-spring/src/test/java/org/apache/camel/spring/processor/aggregator/SpringAggregateCompletionIntervalTest.java;components/camel-spring/src/test/resources/org/apache/camel/spring/processor/aggregator/SpringAggregateCompletionIntervalTest.xml;components/camel-hawtdb/src/main/java/org/apache/camel/component/hawtdb/HawtDBAggregationRepository.java;components/camel-hawtdb/src/main/java/org/apache/camel/component/hawtdb/HawtDBCamelMarshaller.java;components/camel-hawtdb/src/test/java/org/apache/camel/component/hawtdb/HawtDBAggregateCompletionIntervalTest.java;components/camel-hawtdb/src/test/java/org/apache/camel/component/hawtdb/HawtDBAggregateNotLostRemovedWhenConfirmedTest.java;components/camel-hawtdb/src/test/java/org/apache/camel/component/hawtdb/HawtDBAggregateNotLostTest.java;
386,2669,Improvement,Closed,Fixed,camel-core,Minor,Claus Ibsen,2010/04/22 11:10:01 +0100,2010/04/23 12:10:15 +0100,Claus Ibsen,2010/05/11 17:20:50 +0100,19.25751157,18.21568287,XPath - Add type converters from the pesky XPath types to String  InputStream etc.   ,See nabblehttp://old.nabble.com/XPath-Splitter-Problem-ts28325959.htmlThen its easier for Camel end users as they wont have as many problems with the bad XPath result types for NODESET and whatnot.   ,2.0.0; 2.1.0; 2.2.0,2.3.0,0,0,28,1,6,2,0,1,0,0,0.0,0.0,3.0,11.0,camel-core/src/test/java/org/apache/camel/builder/xml/XPathTest.java;components/camel-saxon/src/test/java/org/apache/camel/builder/saxon/XPathTest.java;camel-core/src/main/java/org/apache/camel/converter/jaxp/DomConverter.java;camel-core/src/test/java/org/apache/camel/component/file/XPathToFileTest.java;camel-core/src/test/java/org/apache/camel/converter/jaxp/DomConverterTest.java;camel-core/src/main/java/org/apache/camel/converter/jaxp/DomConverter.java;camel-core/src/test/java/org/apache/camel/builder/xml/XPathTest.java;camel-core/src/test/java/org/apache/camel/component/bean/BeanWithXPathInjectionUsingResultTypeTest.java;camel-core/src/test/java/org/apache/camel/component/file/XPathToFileTest.java;camel-core/src/test/java/org/apache/camel/converter/jaxp/DomConverterTest.java;components/camel-jms/src/test/java/org/apache/camel/component/jms/AggregratedJmsRouteTest.java;
387,2683,Improvement,Closed,Fixed,camel-smpp,Major,Cott Lang,2010/04/29 22:47:52 +0100,2010/04/30 01:32:38 +0100,Willem Jiang,2010/04/30 02:05:29 +0100,0.137233796,0.0228125,Smpp component schedule delivery time should default to null   ,In testing this component  I ran into a problem where the calculated SCHEDULE_DELIVERY_TIME in SmppBinding ends up off for my time zone  so all my SMS messages are delivered an hour later. I'm not quite sure why I'm seeing this problem  it almost appears that TimeZone is not properly adjusting the raw offset for DST.However  in reading the SMS v3.4 spec  there's no reason to attempt to define a default delivery time of 'now'  because transmitting null indicates the message is to be delivered immediately.Therefore  it seems like SmppBinding should be updated not to attempt to set a default date of 'now'. This solved my problem  and avoids any potential date miscalculations for the overwhelming majority of cases where people want the message delivered immediately.P.S. There is no camel-smpp Component defined in Jira.   ,2.2.0,2.3.0,0,0,141,1,2,2,0,0,0,0,0.0,0.0,1.0,1.0,components/camel-smpp/src/main/java/org/apache/camel/component/smpp/SmppBinding.java;
388,2694,Bug,Closed,Fixed,,Major,Willem Jiang,2010/05/05 14:06:43 +0100,2010/05/05 14:06:43 +0100,Willem Jiang,2010/05/07 08:15:35 +0100,1.756157407,1.756157407,HttpEntityConverter should not create a InputStreamEntity by using the GZIPHelper.toGZIPInputStream()   ,GZIPHelper.toGZIPInputStream() is used for uncompress the zip date and not for compress the data.   ,1.6.0; 2.0-M1; 1.6.1; 1.6.2; 2.0-M2; 2.0-M3; 2.0.0; 2.1.0; 2.2.0,1.6.3; 2.3.0,0,0,14,1,1,1,0,1,0,0,0.0,0.0,1.0,11.0,camel-core/src/main/java/org/apache/camel/Exchange.java;components/camel-http/src/main/java/org/apache/camel/component/http/CamelServlet.java;components/camel-http/src/main/java/org/apache/camel/component/http/DefaultHttpBinding.java;components/camel-http/src/main/java/org/apache/camel/component/http/HttpConverter.java;components/camel-http/src/main/java/org/apache/camel/component/http/HttpProducer.java;components/camel-http/src/main/java/org/apache/camel/component/http/RequestEntityConverter.java;components/camel-http/src/main/java/org/apache/camel/component/http/helper/GZIPHelper.java;components/camel-http/src/test/java/org/apache/camel/component/http/helper/GZIPHelperTest.java;components/camel-jetty/src/test/java/org/apache/camel/component/jetty/HttpConverterTest.java;components/camel-jetty/src/test/java/org/apache/camel/component/jetty/HttpGZipEncodingTest.java;components/camel-osgi/src/test/java/org/apache/camel/osgi/test/MyTypeConverter.java;
394,2731,Improvement,Closed,Fixed,camel-bindy,Major,Christian M?ller,2010/05/17 20:55:59 +0100,2010/05/27 16:19:34 +0100,Charles Moulliard,2010/06/18 12:22:25 +0100,31.64335648,21.8353125,Camel-bindy should be able to process fix length records   ,Camel-bindy should be able to process fix length records which has no separators:A sample line could looks like: 47111234567890654321098765432199999999999999994711 is the companyId1234567890 is the cardProgram6543210987654321 is the accountNumber9999999999999999 is the cardNumberCreated a POJO with the Camel bindy annotations:@CsvRecord(separator = '')public class CSVRecord implements Serializable { @DataField(pos = 1  length = 4) private String companyId; @DataField(pos = 2  length = 10) private String cardProgram; @DataField(pos = 3  length = 16) private String accountNumber; @DataField(pos = 4  length = 16) private String cardNumber; // getter and setter} See nabble for details.   ,2.3.0,2.4.0,0,0,117,1,9,3,0,0,0,0,0.0,0.0,3.0,22.0,components/camel-bindy/src/main/java/org/apache/camel/dataformat/bindy/BindyAbstractFactory.java;components/camel-bindy/src/main/java/org/apache/camel/dataformat/bindy/BindyFixedLengthFactory.java;components/camel-bindy/src/main/java/org/apache/camel/dataformat/bindy/annotation/DataField.java;components/camel-bindy/src/main/java/org/apache/camel/dataformat/bindy/annotation/FixedLengthRecord.java;components/camel-bindy/src/main/java/org/apache/camel/dataformat/bindy/fixed/BindyFixedLengthDataFormat.java;components/camel-bindy/src/main/java/org/apache/camel/dataformat/bindy/util/AnnotationModelLoader.java;components/camel-bindy/src/test/java/org/apache/camel/dataformat/bindy/fixed/BindySimpleFixedLengthUnmarshallTest.java;components/camel-bindy/src/test/resources/org/apache/camel/dataformat/bindy/fixed/BindySimpleFixedLengthUnmarshallTest-context.xml;components/camel-bindy/src/main/java/org/apache/camel/dataformat/bindy/BindyFixedLengthFactory.java;components/camel-bindy/src/main/java/org/apache/camel/dataformat/bindy/annotation/DataField.java;components/camel-bindy/src/test/java/org/apache/camel/dataformat/bindy/fixed/marshall/simple/BindySimpleFixedLengthMarshallTest.java;components/camel-bindy/src/test/java/org/apache/camel/dataformat/bindy/fixed/unmarshall/simple/BindySimpleFixedLengthUnmarshallTest.java;components/camel-bindy/src/main/java/org/apache/camel/dataformat/bindy/BindyAbstractFactory.java;components/camel-bindy/src/main/java/org/apache/camel/dataformat/bindy/BindyCsvFactory.java;components/camel-bindy/src/main/java/org/apache/camel/dataformat/bindy/BindyFixedLengthFactory.java;components/camel-bindy/src/main/java/org/apache/camel/dataformat/bindy/fixed/BindyFixedLengthDataFormat.java;components/camel-bindy/src/test/java/org/apache/camel/dataformat/bindy/fixed/BindySimpleFixedLengthUnmarshallTest.java;components/camel-bindy/src/test/java/org/apache/camel/dataformat/bindy/fixed/marshall/simple/BindySimpleFixedLengthMarshallTest.java;components/camel-bindy/src/test/java/org/apache/camel/dataformat/bindy/fixed/unmarshall/simple/BindySimpleFixedLengthUnmarshallTest.java;components/camel-bindy/src/test/resources/org/apache/camel/dataformat/bindy/fixed/BindySimpleFixedLengthUnmarshallTest-context.xml;components/camel-bindy/src/test/resources/org/apache/camel/dataformat/bindy/fixed/marshall/simple/BindySimpleFixedLengthMarshallTest-context.xml;components/camel-bindy/src/test/resources/org/apache/camel/dataformat/bindy/fixed/unmarshall/simple/BindySimpleFixedLengthUnmarshallTest-context.xml;
400,2763,Bug,Closed,Fixed,camel-mail,Major,Willem Jiang,2010/05/28 04:40:35 +0100,2010/05/28 04:40:35 +0100,Willem Jiang,2010/05/28 09:16:06 +0100,0.191331019,0.191331019,MailBinding can't handle the subject header with NO_ASCII code rightly.   ,Here is the mail thread which discusses about it.   ,1.4.0; 1.5.0; 1.6.0; 2.0-M1; 1.6.1; 1.6.2; 2.0-M2; 2.0-M3; 2.0.0; 2.1.0; 2.2.0; 2.3.0,1.6.3; 2.4.0,0,0,12,1,2,2,1,1,0,0,0.0,0.0,1.0,2.0,components/camel-mail/src/main/java/org/apache/camel/component/mail/MailBinding.java;components/camel-mail/src/test/java/org/apache/camel/component/mail/MailRouteTest.java;
401,2769,Improvement,Closed,Fixed,camel-core,Minor,Claus Ibsen,2010/05/31 13:26:17 +0100,2010/06/02 14:49:46 +0100,Claus Ibsen,2010/06/02 18:39:43 +0100,2.2176620369999998,0.1596875,OnCompletion - Let it be executed last so the internal on completions can be executed beforehand   ,See nabblehttp://old.nabble.com/Problems-shutting-down-route-onCompletion-ts28707903.htmlThis requires some sort of marker / API changes or whatever to let Camel knows that its a OnCompletion synchronization so it should be executed last.We may need to add a priority option or the likes.   ,2.3.0,2.4.0,0,0,40,1,2,1,1,0,0,0,0.0,0.0,1.0,9.0,camel-core/src/main/java/org/apache/camel/impl/DefaultUnitOfWork.java;camel-core/src/main/java/org/apache/camel/impl/SynchronizationAdapter.java;camel-core/src/main/java/org/apache/camel/processor/OnCompletionProcessor.java;camel-core/src/main/java/org/apache/camel/spi/SynchronizationVetoable.java;camel-core/src/main/java/org/apache/camel/util/ObjectHelper.java;camel-core/src/main/java/org/apache/camel/util/Ordered.java;camel-core/src/main/java/org/apache/camel/util/OrderedComparator.java;camel-core/src/test/java/org/apache/camel/processor/OnCompletionShouldBeLastTest.java;camel-core/src/test/java/org/apache/camel/util/OrderedComparatorTest.java;
402,2773,Bug,Closed,Fixed,camel-bindy,Minor,Claus Ibsen,2010/06/01 07:33:40 +0100,2010/06/01 07:54:17 +0100,Charles Moulliard,2010/06/11 16:02:16 +0100,10.35319444,10.33887731,Bindy - No @Section causes a null key being generated which causes a NumberFormatException   ,See nabblehttp://old.nabble.com/Bindy-CSV-not-Marshaling-ts28719942.html   ,2.3.0,2.4.0,0,0,5,1,2,2,1,0,0,0,0.0,0.0,1.0,9.0,components/camel-bindy/src/main/java/org/apache/camel/dataformat/bindy/BindyAbstractFactory.java;components/camel-bindy/src/main/java/org/apache/camel/dataformat/bindy/BindyKeyValuePairFactory.java;components/camel-bindy/src/test/data/fix_simple/fix_simple.txt;components/camel-bindy/src/test/java/org/apache/camel/dataformat/bindy/CommonBindyTest.java;components/camel-bindy/src/test/java/org/apache/camel/dataformat/bindy/csv/BindySimpleCsvUnmarshallBadIntegerTest.java;components/camel-bindy/src/test/java/org/apache/camel/dataformat/bindy/fix/BindySimpleKeyValuePairMarshallDslTest.java;components/camel-bindy/src/test/java/org/apache/camel/dataformat/bindy/fix/BindySimpleKeyValuePairWithoutSectionMarshallDslTest.java;components/camel-bindy/src/test/java/org/apache/camel/dataformat/bindy/model/fix/withoutsection/Order.java;components/camel-bindy/src/test/resources/org/apache/camel/dataformat/bindy/fix/BindySimpleKeyValuePairWithoutSectionMarshallDslTest-context.xml;
406,2800,Improvement,Closed,Fixed,camel-core,Major,Claus Ibsen,2010/06/08 14:45:49 +0100,2010/06/08 14:45:49 +0100,Claus Ibsen,2010/06/15 06:35:48 +0100,6.659710648,6.659710648,Graceful shutdown - Add option to shutdown manually added/started routes   ,If you for example add routes later at runtime  then those where not enlisted on startup and thus not part of the process to be stopped.Those routes added manually should be part of this so they are also shutdown. There should be an option to control this behavior so you can turn it off  in the odd cases you dont want that.   ,2.3.0,2.4.0,0,0,62,1,3,1,1,0,0,0,0.0,0.0,1.0,4.0,camel-core/src/main/java/org/apache/camel/impl/DefaultCamelContext.java;camel-core/src/test/java/org/apache/camel/impl/GracefulShutdownNoAutoStartOrderClashTest.java;camel-core/src/test/java/org/apache/camel/impl/ShutdownGracefulNoAutoStartedRoutesTest.java;camel-core/src/test/java/org/apache/camel/impl/SimpleShutdownGracefulNoAtuoStartedTest.java;
407,2805,Bug,Closed,Fixed,,Major,Roman Kalukiewicz,2010/06/10 15:19:42 +0100,2010/06/10 15:19:42 +0100,Roman Kalukiewicz,2010/06/16 09:45:24 +0100,5.767847222,5.767847222,It is impossible to put # sign in SQL statement in camel-sql   ,SqlProducer implementation turns all # characters into ? making it impossible to have # in the SQL statement.   ,2.3.0,2.4.0,0,0,18,1,1,1,1,0,0,0,0.0,0.0,1.0,2.0,components/camel-sql/src/main/java/org/apache/camel/component/sql/SqlComponent.java;components/camel-sql/src/test/java/org/apache/camel/component/sql/SqlRouteTest.java;
408,2815,Bug,Closed,Fixed,,Major,Darren Davison,2010/06/15 11:32:38 +0100,2010/06/15 11:51:34 +0100,Willem Jiang,2010/06/15 12:42:47 +0100,0.048715278,0.03556713,camel-castor relies on specific  out of date version of Castor   ,camel-castor specifies a non-flexible version dependency on Castor 1.2.0. Ideally should be changed to [1.2.0 2.0) to allow later versions of Castor to be deployed. Castor 1.2 was released in Feb 2008  1.3 was first released in Feb 2009   ,2.2.0,2.4.0,0,0,38,1,1,1,1,0,0,0,0.0,0.0,1.0,1.0,components/camel-castor/pom.xml;
409,2821,Bug,Closed,Fixed,camel-ftp,Minor,Claus Ibsen,2010/06/16 05:14:55 +0100,2010/06/16 05:14:55 +0100,Claus Ibsen,2010/06/16 05:17:05 +0100,0.00150463,0.00150463,camel-ftp - SFTP in fileExists should handle exception being thrown with id code stating no such file   ,See nabblehttp://camel.465427.n5.nabble.com/camel-ftp-cannot-create-directory-using-sftp-tp479092p479092.html   ,2.3.0,2.4.0,0,0,5,1,2,1,1,0,0,0,0.0,0.0,1.0,1.0,components/camel-ftp/src/main/java/org/apache/camel/component/file/remote/SftpOperations.java;
410,2824,Bug,Closed,Fixed,camel-core,Major,Tarjei Huse,2010/06/16 20:43:30 +0100,2010/06/18 06:36:52 +0100,Claus Ibsen,2010/06/18 06:36:52 +0100,1.412060185,0.0,Deadlock in org.apache.camel.util.DefaultTimeoutMap   ,After running a camel route with a camel Aggregator for a while  I get a deadlock in org.apache.camel.util.DefaultTimeoutMap. A full processdump is attached to this bug.I have also tried to recreate this as failing testcase  but without any luck so far.   ,2.3.0,2.4.0,0,0,42,1,8,2,1,0,0,0,1.0,0.0,3.0,13.0,camel-core/src/main/java/org/apache/camel/management/JmxNotificationEventNotifier.java;camel-core/src/main/java/org/apache/camel/processor/aggregate/AggregateProcessor.java;camel-core/src/main/java/org/apache/camel/util/DefaultTimeoutMap.java;camel-core/src/main/java/org/apache/camel/util/TimeoutMap.java;camel-core/src/test/java/org/apache/camel/processor/aggregator/AggregateFromWireTapTest.java;camel-core/src/test/java/org/apache/camel/processor/aggregator/AggregatorTest.java;camel-core/src/test/java/org/apache/camel/util/DefaultTimeoutMapTest.java;camel-core/src/main/java/org/apache/camel/processor/aggregate/AggregateProcessor.java;camel-core/src/main/java/org/apache/camel/util/DefaultTimeoutMap.java;camel-core/src/main/java/org/apache/camel/util/TimeoutMap.java;camel-core/src/test/java/org/apache/camel/processor/aggregator/AggregateTimeoutManualTest.java;camel-core/src/test/java/org/apache/camel/processor/aggregator/AggregateTimeoutOnlyTest.java;camel-core/src/main/java/org/apache/camel/processor/aggregate/AggregateProcessor.java;
415,2867,Bug,Closed,Fixed,camel-core,Major,Claus Ibsen,2010/06/28 08:03:17 +0100,2010/06/28 08:03:17 +0100,Claus Ibsen,2010/06/28 08:04:45 +0100,0.0010185189999999998,0.0010185189999999998,convertBodyTo should handle null bodies   ,If the body is null and you use convertBodyTo you will get a no type converter exception due body is null. Instead it should accept the null body and continue routing.   ,2.3.0,2.4.0,0,0,31,1,2,1,1,0,0,0,0.0,0.0,1.0,6.0,camel-core/src/main/java/org/apache/camel/processor/ChoiceProcessor.java;camel-core/src/main/java/org/apache/camel/processor/ConvertBodyProcessor.java;camel-core/src/main/java/org/apache/camel/processor/DelegateAsyncProcessor.java;camel-core/src/main/java/org/apache/camel/processor/DelegateProcessor.java;camel-core/src/test/java/org/apache/camel/processor/ConvertBodyTest.java;camel-core/src/test/java/org/apache/camel/processor/async/AsyncEndpointTransformTest.java;
417,2891,Improvement,Closed,Fixed,,Major,james strachan,2010/07/01 16:24:36 +0100,2010/07/01 16:24:36 +0100,james strachan,2010/07/01 16:47:21 +0100,0.015798611,0.015798611,URIs for viewing a route as a language clashes with any other possible sub resource for routes (such as status)   ,rather than: {id}/{lang}we should use something like {id}/lang/{lang}so that it doesn't gobble up: {id}/status or {id}/somethingElse   ,2.3.0,2.4.0,0,0,24,1,2,2,1,0,0,0,0.0,0.0,1.0,2.0,components/camel-web/src/main/java/org/apache/camel/web/resources/RoutesResource.java;components/camel-web/src/main/webapp/org/apache/camel/web/resources/RouteResource/index.jsp;
419,2903,Improvement,Closed,Fixed,camel-cxf; camel-http,Major,Paul Mietz Egli,2010/07/02 20:06:08 +0100,2010/07/03 09:17:42 +0100,Willem Jiang,2010/07/03 09:40:21 +0100,0.565428241,0.015729167,update camel-http and camel-cxf features to use Commons Codec 1.4   ,The latest version of Commons Codec is available as an OSGi bundle  so it would be nice to update the features file for Camel 2.3 to use that version:&lt;bundle&gt;mvn:commons-codec/commons-codec/1.4&lt;/bundle&gt;I've been installing 1.4 by hand and removing the org.apache.servicemix.bundles.commons-codec/1.3_2 without any ill effects on camel-http.   ,2.3.0,2.4.0,0,0,53,1,2,2,1,0,0,0,0.0,0.0,1.0,2.0,platforms/karaf/features/src/main/resources/features-spring3.xml;platforms/karaf/features/src/main/resources/features.xml;
425,2937,Bug,Closed,Fixed,,Major,Hadrian Zbarcea,2010/07/11 17:26:41 +0100,2010/07/11 17:26:41 +0100,Hadrian Zbarcea,2010/07/11 17:36:37 +0100,0.006898148000000001,0.006898148000000001,StreamProducer does not close stream in camel-stream   ,Since the stream could be System.out or System.err  the producer does not close the stream ever. It should close all streams with the noted exceptions.   ,2.3.0,2.4.0,0,0,25,1,2,2,0,0,0,0,1.0,0.0,0.0,0.0,
427,2958,Bug,Closed,Fixed,camel-core,Major,Christian Mouttet,2010/07/16 11:25:01 +0100,2010/07/17 10:57:03 +0100,Claus Ibsen,2010/07/17 13:16:29 +0100,1.077407407,0.096828704,java.util.ConcurrentModificationException in Method org.apache.camel.util.CaseInsensitiveMap.putAll()   ,Every now and then I'm facing the ConcurrentModificationException. It very hard to reproduce. This is my stack trace:Failed delivery for exchangeId: ba969718-9044-4261-bc57-ca10aafb0a03. Exhausted after delivery attempt: 1 caught: java.util.ConcurrentModificationExceptionjava.util.ConcurrentModificationException: null at java.util.HashMap$HashIterator.nextEntry(HashMap.java:793) &#91;na:1.6.0_20&#93; at java.util.HashMap$KeyIterator.next(HashMap.java:828) &#91;na:1.6.0_20&#93; at org.apache.camel.util.CaseInsensitiveMap.putAll(CaseInsensitiveMap.java:86) &#91;camel-core-2.3.0.jar:2.3.0&#93; at org.apache.camel.impl.MessageSupport.copyFrom(MessageSupport.java:142) &#91;camel-core-2.3.0.jar:2.3.0&#93; at org.apache.camel.impl.DefaultMessage.copyFrom(DefaultMessage.java:52) &#91;camel-core-2.3.0.jar:2.3.0&#93; at org.apache.camel.util.ExchangeHelper.copyResults(ExchangeHelper.java:199) &#91;camel-core-2.3.0.jar:2.3.0&#93; at org.apache.camel.processor.Pipeline.process(Pipeline.java:114) &#91;camel-core-2.3.0.jar:2.3.0&#93; at org.apache.camel.processor.DelegateProcessor.processNext(DelegateProcessor.java:53) &#91;camel-core-2.3.0.jar:2.3.0&#93; at org.apache.camel.processor.ChoiceProcessor.process(ChoiceProcessor.java:51) &#91;camel-core-2.3.0.jar:2.3.0&#93; at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:67) &#91;camel-core-2.3.0.jar:2.3.0&#93; at org.apache.camel.processor.DelegateProcessor.processNext(DelegateProcessor.java:53) &#91;camel-core-2.3.0.jar:2.3.0&#93; at org.apache.camel.processor.DelegateProcessor.proceed(DelegateProcessor.java:82) &#91;camel-core-2.3.0.jar:2.3.0&#93; at org.apache.camel.processor.interceptor.TraceInterceptor.process(TraceInterceptor.java:97) &#91;camel-core-2.3.0.jar:2.3.0&#93; at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:67) &#91;camel-core-2.3.0.jar:2.3.0&#93; at org.apache.camel.processor.RedeliveryErrorHandler.processExchange(RedeliveryErrorHandler.java:185) &#91;camel-core-2.3.0.jar:2.3.0&#93; at org.apache.camel.processor.RedeliveryErrorHandler.processErrorHandler(RedeliveryErrorHandler.java:151) &#91;camel-core-2.3.0.jar:2.3.0&#93; at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:89) &#91;camel-core-2.3.0.jar:2.3.0&#93; at org.apache.camel.processor.DefaultErrorHandler.process(DefaultErrorHandler.java:49) &#91;camel-core-2.3.0.jar:2.3.0&#93; at org.apache.camel.processor.DefaultChannel.process(DefaultChannel.java:228) &#91;camel-core-2.3.0.jar:2.3.0&#93; at org.apache.camel.processor.Pipeline.process(Pipeline.java:75) &#91;camel-core-2.3.0.jar:2.3.0&#93; at org.apache.camel.processor.UnitOfWorkProcessor.processNext(UnitOfWorkProcessor.java:70) &#91;camel-core-2.3.0.jar:2.3.0&#93; at org.apache.camel.processor.DelegateProcessor.process(DelegateProcessor.java:48) &#91;camel-core-2.3.0.jar:2.3.0&#93; at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:67) &#91;camel-core-2.3.0.jar:2.3.0&#93; at org.apache.camel.component.http.CamelServlet.service(CamelServlet.java:71) &#91;camel-http-2.3.0.jar:2.3.0&#93; at javax.servlet.http.HttpServlet.service(HttpServlet.java:831) &#91;javaee.jar:9.1&#93;...Looks like CaseInsensitiveMap isn't enough thread save. But I have no idea what other thread is modifies the map. Most of the time everything is ok.   ,2.3.0,2.5.0,0,0,155,1,7,2,1,0,0,0,0.0,0.0,1.0,2.0,camel-core/src/main/java/org/apache/camel/util/CaseInsensitiveMap.java;camel-core/src/test/java/org/apache/camel/util/CaseInsensitiveMapTest.java;
429,2964,Improvement,Closed,Fixed,,Minor,Claus Ibsen,2010/07/19 12:50:04 +0100,2010/07/19 12:50:04 +0100,Hiram Chirino,2010/07/19 20:47:46 +0100,0.331736111,0.331736111,Upgrade to HawtDB 1.2   ,   ,2.4.0,2.5.0,0,0,1,1,2,2,1,0,0,0,0.0,0.0,1.0,2.0,components/camel-hawtdb/src/main/java/org/apache/camel/component/hawtdb/HawtDBFile.java;parent/pom.xml;
430,2969,Improvement,Closed,Fixed,camel-core; camel-ftp,Minor,Claus Ibsen,2010/07/20 09:59:02 +0100,2010/07/20 09:59:02 +0100,Claus Ibsen,2010/07/20 10:20:53 +0100,0.015173611000000002,0.015173611000000002,When polling consumers is shutdown  do less verbose logging for rollback strategies   ,To avoid logs having stacktraces or the likes which was caused by shutting down the application.See nabblehttp://camel.465427.n5.nabble.com/Camel-2-4-Shutdown-Exception-tp1479154p1479154.html   ,2.4.0,2.5.0,0,0,20,1,2,1,1,0,0,0,0.0,0.0,2.0,3.0,components/camel-ftp/src/main/java/org/apache/camel/component/file/remote/RemoteFilePollingConsumerPollStrategy.java;camel-core/src/main/java/org/apache/camel/impl/DefaultPollingConsumerPollStrategy.java;components/camel-ftp/src/main/java/org/apache/camel/component/file/remote/RemoteFilePollingConsumerPollStrategy.java;
432,2972,Bug,Closed,Fixed,,Major,Andreas Asmuss,2010/07/20 12:46:40 +0100,2010/07/25 13:09:24 +0100,Claus Ibsen,2010/07/27 17:09:18 +0100,7.182384259,2.166597222,onException not working correctly when using routeContext   ,When using a routeContext  the last (in the xml-file) defined route-scoped &lt;onException&gt; configuration is shared by the other routes in the context.http://camel.465427.n5.nabble.com/possible-onException-bug-when-using-routeContext-td1616244.html#a1616244   ,2.3.0; 2.4.0,2.5.0,0,0,25,1,5,3,1,1,0,0,0.0,0.0,1.0,29.0,camel-core/src/main/java/org/apache/camel/FailedToCreateConsumerException.java;camel-core/src/main/java/org/apache/camel/impl/DefaultUnitOfWork.java;camel-core/src/main/java/org/apache/camel/processor/MulticastProcessor.java;camel-core/src/main/java/org/apache/camel/processor/RecipientListProcessor.java;camel-core/src/main/java/org/apache/camel/processor/Splitter.java;camel-core/src/main/java/org/apache/camel/processor/exceptionpolicy/DefaultExceptionPolicyStrategy.java;camel-core/src/test/java/org/apache/camel/processor/onexception/OnExceptionAndDLCErrorHandlerIssueReverseTest.java;camel-core/src/test/java/org/apache/camel/processor/onexception/OnExceptionAndDLCErrorHandlerIssueTest.java;camel-core/src/test/java/org/apache/camel/processor/onexception/OnExceptionGlobalAndDLCErrorHandlerIssueReverseTest.java;camel-core/src/test/java/org/apache/camel/processor/onexception/OnExceptionGlobalAndDLCErrorHandlerIssueTest.java;components/camel-core-xml/src/main/java/org/apache/camel/core/xml/AbstractCamelContextFactoryBean.java;components/camel-spring/src/test/java/org/apache/camel/spring/config/OneRouteRefOnExceptionAndDLCErrorHandlerTest.java;components/camel-spring/src/test/java/org/apache/camel/spring/config/OneRouteRefOnExceptionAndTwoDLCErrorHandlerTest.java;components/camel-spring/src/test/java/org/apache/camel/spring/config/OneRouteRefOnExceptionTest.java;components/camel-spring/src/test/java/org/apache/camel/spring/config/OneRouteRefReverseOnExceptionAndDLCErrorHandlerTest.java;components/camel-spring/src/test/java/org/apache/camel/spring/config/OneRouteRefReverseOnExceptionTest.java;components/camel-spring/src/test/java/org/apache/camel/spring/config/TwoRouteRefOnExceptionAndDLCErrorHandlerTest.java;components/camel-spring/src/test/java/org/apache/camel/spring/config/TwoRouteRefOnExceptionTest.java;components/camel-spring/src/test/java/org/apache/camel/spring/config/TwoRouteRefReverseOnExceptionAndDLCErrorHandlerTest.java;components/camel-spring/src/test/java/org/apache/camel/spring/config/TwoRouteRefReverseOnExceptionTest.java;components/camel-spring/src/test/resources/org/apache/camel/spring/config/OneRouteRefOnException.xml;components/camel-spring/src/test/resources/org/apache/camel/spring/config/OneRouteRefOnExceptionAndDLCErrorHandler.xml;components/camel-spring/src/test/resources/org/apache/camel/spring/config/OneRouteRefOnExceptionAndTwoDLCErrorHandler.xml;components/camel-spring/src/test/resources/org/apache/camel/spring/config/OneRouteRefReverseOnException.xml;components/camel-spring/src/test/resources/org/apache/camel/spring/config/OneRouteRefReverseOnExceptionAndDLCErrorHandler.xml;components/camel-spring/src/test/resources/org/apache/camel/spring/config/TwoRouteRefOnException.xml;components/camel-spring/src/test/resources/org/apache/camel/spring/config/TwoRouteRefOnExceptionAndDLCErrorHandler.xml;components/camel-spring/src/test/resources/org/apache/camel/spring/config/TwoRouteRefReverseOnException.xml;components/camel-spring/src/test/resources/org/apache/camel/spring/config/TwoRouteRefReverseOnExceptionAndDLCErrorHandler.xml;
434,2979,Bug,Closed,Fixed,camel-ftp,Minor,Andreas Asmuss,2010/07/21 10:07:59 +0100,2010/07/22 15:31:18 +0100,Claus Ibsen,2010/07/22 16:00:59 +0100,1.2451388890000001,0.020613426,FtpComponent: If login fails and disconnect=true another connection is opened.   ,In a route such as below a second connection to the ftp server is opened if the login fails.&lt;route&gt;  &lt;from uri='ftp:localhost/inbox/?username=usr&amp;password=pwd&amp;disconnect=true&amp;consumer.delay=60s&amp;maximumReconnectAttempts=0' /&gt;  &lt;to uri='file:test_data' /&gt; &lt;/route&gt; Further description: http://camel.465427.n5.nabble.com/FTP-Try-login-once-and-disconnect-if-failure-td1692660.html#a1692660   ,2.4.0,2.5.0,0,0,34,1,5,2,1,0,0,1,0.0,0.0,2.0,4.0,components/camel-ftp/src/main/java/org/apache/camel/component/file/remote/RemoteFileConsumer.java;components/camel-ftp/src/main/java/org/apache/camel/component/file/remote/RemoteFileEndpoint.java;components/camel-ftp/src/test/java/org/apache/camel/component/file/remote/FtpNoReconnectAttemptUnknownHostTest.java;camel-core/src/main/java/org/apache/camel/component/file/GenericFileConsumer.java;
435,2980,Bug,Closed,Fixed,camel-jpa,Major,Christian M?ller,2010/07/21 15:55:03 +0100,2010/07/21 15:55:03 +0100,Christian M?ller,2010/08/05 13:35:59 +0100,14.90342593,14.90342593,camel-jpa doesn't use EntityManager.merge(entity) in the right way   ,The EntityManager.merge(entity) method returns the merged entity. The exchange in message body should be updated with the merged entity (what camel-jpa currently not do).I running into this problem  because after saving an entity in the database  the id field was still null. So  we don't know  which entity in the database is the corresponding to this entity... Have a look in the process method of JpaProducer and the Java doc from the EntityManager.Christian   ,2.4.0,2.5.0,0,0,86,1,7,2,1,0,0,0,0.0,0.0,1.0,4.0,components/camel-jpa/src/main/java/org/apache/camel/component/jpa/JpaProducer.java;components/camel-jpa/src/test/java/org/apache/camel/component/jpa/AbstractJpaMethodTest.java;components/camel-jpa/src/test/java/org/apache/camel/component/jpa/JpaUseMergeTest.java;components/camel-jpa/src/test/java/org/apache/camel/component/jpa/JpaUsePersistTest.java;
440,3024,Improvement,Closed,Fixed,camel-core,Major,Claus Ibsen,2010/08/04 13:13:13 +0100,2010/08/04 13:13:13 +0100,Claus Ibsen,2010/08/05 11:46:46 +0100,0.939965278,0.939965278,Adding routes straight from XML should have Camel prepare the RouteDefintion as its done like in camel-spring   ,camel-spring does some preparation on the XML routes before they are added to CamelContext.When end users loads the XML routes themself using JAXB and add it straight to CamelContext  we should let camel-core prepare the routes as well.   ,2.4.0,2.5.0,0,0,38,1,3,1,1,0,0,0,0.0,0.0,1.0,7.0,camel-core/src/main/java/org/apache/camel/builder/RouteBuilder.java;camel-core/src/main/java/org/apache/camel/impl/DefaultCamelContext.java;camel-core/src/main/java/org/apache/camel/model/RouteDefinition.java;camel-core/src/main/java/org/apache/camel/model/RouteDefinitionHelper.java;camel-core/src/test/java/org/apache/camel/impl/CamelContextAddRouteDefinitionsFromXmlTest.java;camel-core/src/test/resources/org/apache/camel/impl/route3.xml;components/camel-core-xml/src/main/java/org/apache/camel/core/xml/AbstractCamelContextFactoryBean.java;
441,3030,Improvement,Closed,Fixed,camel-velocity,Minor,Claus Ibsen,2010/08/06 06:09:09 +0100,2010/08/06 08:09:24 +0100,Willem Jiang,2010/08/09 07:47:26 +0100,3.068252315,2.98474537,Velocity - Let it be able to load resources from both classpath and file system out of the box   ,See this blog entryhttp://www.thedwick.com/blog/2010/08/how-to-include-other-velocity-templates-from-apache-camel/We should pre configure Velocity to use both type of resource loaders.   ,2.4.0,2.5.0,0,0,18,1,1,1,1,0,0,0,0.0,0.0,2.0,5.0,tests/camel-itest-osgi/src/test/java/org/apache/camel/itest/osgi/VelocityTest.java;tests/camel-itest-osgi/src/test/resources/org/apache/camel/itest/osgi/example.vm;tests/camel-itest-osgi/src/test/resources/org/apache/camel/itest/osgi/header.vm;components/camel-velocity/src/main/java/org/apache/camel/component/velocity/VelocityEndpoint.java;components/camel-velocity/src/test/resources/org/apache/camel/component/velocity/letter.vm;
444,3047,Bug,Closed,Fixed,camel-jetty,Major,Paul Mietz Egli,2010/08/11 23:33:45 +0100,2010/08/13 09:00:39 +0100,Willem Jiang,2010/08/19 10:43:32 +0100,7.465127315,6.071446759,JettyHttpComponent.doStop() shuts down all servers in the VM  not just those associated with the component   ,We are running several bundles in Karaf with separate Camel contexts  each of which uses the camel-jetty component to expose services over HTTP. Each bundle has an assigned port and may listen on multiple URIs. We noticed that when we updated or shut down one of these bundles  all of the Jetty servers in the other bundles would stop listening on their respective ports.The problem is that the map of ConnectorRef objects in JettyHttpComponent is static  and therefore shared across the entire VM. Changing this from static to an instance variable fixed the issue for us.   ,2.4.0,2.5.0,0,0,97,1,11,4,1,0,0,1,0.0,0.0,1.0,10.0,components/camel-jetty/src/main/java/org/apache/camel/component/jetty/JettyHttpComponent.java;components/camel-jetty/src/test/java/org/apache/camel/component/jetty/SpringJettyNoConnectionRedeliveryTest.java;components/camel-jetty/src/test/java/org/apache/camel/component/jetty/SpringJettyNoConnectionTest.java;components/camel-jetty/src/test/resources/org/apache/camel/component/jetty/jetty-noconnection-redelivery.xml;components/camel-jetty/src/test/resources/org/apache/camel/component/jetty/jetty-noconnection.xml;tests/camel-itest-osgi/src/test/java/org/apache/camel/itest/osgi/OSGiIntegrationTestSupport.java;tests/camel-itest-osgi/src/test/java/org/apache/camel/itest/osgi/jetty/JettyProcessor.java;tests/camel-itest-osgi/src/test/java/org/apache/camel/itest/osgi/jetty/OSGiMulitJettyCamelContextsTest.java;tests/camel-itest-osgi/src/test/resources/org/apache/camel/itest/osgi/jetty/CamelContext1.xml;tests/camel-itest-osgi/src/test/resources/org/apache/camel/itest/osgi/jetty/CamelContext2.xml;
447,3060,Bug,Closed,Fixed,camel-core,Minor,Vid Cheruvu,2010/08/18 14:52:41 +0100,2010/08/19 04:47:20 +0100,Claus Ibsen,2010/08/19 04:47:20 +0100,0.579618056,0.0,Out of Heap memory issues with Camel-File processing large files   ,Camel-File component throws heap memory issue when processing csv file which is about 45MB with 218k Lines. http://camel.465427.n5.nabble.com/Java-heap-space-issue-with-reading-large-CSV-file-tt2638903.html#a2638903   ,2.3.0,2.5.0,0,0,21,1,2,1,0,0,0,1,0.0,0.0,1.0,1.0,camel-core/src/main/java/org/apache/camel/component/file/GenericFileMessage.java;
448,3075,Improvement,Closed,Fixed,camel-core,Major,Claus Ibsen,2010/08/24 11:50:21 +0100,2010/08/24 11:50:21 +0100,Claus Ibsen,2010/08/24 19:20:16 +0100,0.31244213,0.31244213,Simple language - Allow unlimited usage of and or operators in expression   ,The simple language currently only allows using and or or operators once in the expression. We should allow unlimited usages of those.   ,2.0.0; 2.1.0; 2.2.0; 2.3.0; 2.4.0,2.5.0,0,0,22,1,2,1,0,1,0,0,0.0,0.0,1.0,4.0,camel-core/src/main/java/org/apache/camel/language/simple/SimpleLanguageSupport.java;camel-core/src/test/java/org/apache/camel/component/file/FileConsumerPollStrategyTest.java;camel-core/src/test/java/org/apache/camel/language/SimpleOperatorTest.java;camel-core/src/test/resources/log4j.properties;
451,3082,Bug,Closed,Fixed,camel-core,Major,Willem Jiang,2010/08/26 08:00:15 +0100,2010/08/26 08:00:15 +0100,Willem Jiang,2010/08/26 13:10:01 +0100,0.21511574100000003,0.21511574100000003,BeanConveter didn't try to covert the bean invocation argument rightly   ,Here is the mail thread about it.http://camel.465427.n5.nabble.com/Bug-in-the-BeanConverter-class-td2653552.html#a2653552   ,2.0.0; 2.1.0; 2.2.0; 2.3.0; 2.4.0,2.5.0,0,0,10,1,1,1,0,1,0,0,0.0,0.0,1.0,5.0,camel-core/src/main/java/org/apache/camel/component/bean/BeanConverter.java;components/camel-spring/src/test/java/org/apache/camel/spring/remoting/Bean.java;components/camel-spring/src/test/java/org/apache/camel/spring/remoting/Invoker.java;components/camel-spring/src/test/java/org/apache/camel/spring/remoting/SpringRemotingBeanConverterTest.java;components/camel-spring/src/test/resources/org/apache/camel/spring/remoting/beanConverter.xml;
455,3121,Bug,Closed,Fixed,camel-core,Minor,Claus Ibsen,2010/09/14 12:39:12 +0100,2010/09/14 12:39:12 +0100,Claus Ibsen,2010/09/14 13:00:54 +0100,0.015069444,0.015069444,Splitter EIP - The sub exchanges should not contains on completions from original Exchange   ,See nabblehttp://camel.465427.n5.nabble.com/Camel-calling-commit-too-early-when-using-split-seda-file-endpoint-tp2830894p2830894.html   ,2.4.0,2.5.0,0,0,5,1,6,2,0,0,0,0,0.0,0.0,3.0,5.0,camel-core/src/test/java/org/apache/camel/processor/SplitterStreamingUoWIssueTest.java;camel-core/src/main/java/org/apache/camel/processor/Splitter.java;camel-core/src/test/java/org/apache/camel/processor/SplitterStreamingUoWIssueTest.java;camel-core/src/test/java/org/apache/camel/processor/SplitterUoWIssueTest.java;parent/pom.xml;
458,3128,Bug,Closed,Fixed,camel-core,Minor,Claus Ibsen,2010/09/16 14:41:23 +0100,2010/09/16 14:41:23 +0100,Claus Ibsen,2010/09/16 15:13:16 +0100,0.022141203999999998,0.022141203999999998,Using $ in endpoint uri causes thread name parser to fail   ,See nabblehttp://camel.465427.n5.nabble.com/How-to-specify-route-to-folder-with-in-actual-name-tp2839895p2839895.html   ,2.4.0,2.5.0,0,0,5,1,2,1,0,0,0,0,0.0,0.0,1.0,3.0,camel-core/src/main/java/org/apache/camel/util/concurrent/ExecutorServiceHelper.java;camel-core/src/test/java/org/apache/camel/component/file/FileConsumeWithDollarInPathTest.java;camel-core/src/test/java/org/apache/camel/impl/DefaultExecutorServiceStrategyTest.java;
461,3139,Improvement,Closed,Fixed,camel-core,Minor,Claus Ibsen,2010/09/21 07:32:37 +0100,2010/09/21 07:32:37 +0100,Claus Ibsen,2010/09/21 10:13:33 +0100,0.111759259,0.111759259,Use ActiveMQUuidGenerator as the default uuid generator as its faster than the JDK UUID generator   ,The Java UUID is too slow. Switching back to AMQ based will improve performance.We should just have to switch to use the JDK UUID for the camel-gae component as it cannot use the AMQ based.   ,2.1.0; 2.2.0; 2.3.0; 2.4.0,2.5.0,0,0,35,1,3,1,0,1,1,0,1.0,1.0,1.0,12.0,camel-core/src/main/java/org/apache/camel/impl/ActiveMQUuidGenerator.java;camel-core/src/main/java/org/apache/camel/impl/DefaultCamelContext.java;camel-core/src/main/java/org/apache/camel/impl/MessageSupport.java;camel-core/src/test/java/org/apache/camel/impl/ActiveMQUuidGeneratorTest.java;camel-core/src/test/java/org/apache/camel/impl/DefaultCamelContextTest.java;camel-core/src/test/java/org/apache/camel/impl/JavaUuidGeneratorTest.java;camel-core/src/test/java/org/apache/camel/impl/SimpleUuidGeneratorTest.java;components/camel-gae/src/main/java/org/apache/camel/component/gae/context/GaeDefaultCamelContext.java;components/camel-gae/src/main/java/org/apache/camel/component/gae/context/GaeSpringCamelContext.java;components/camel-jetty/src/main/java/org/apache/camel/component/jetty/DefaultJettyHttpBinding.java;components/camel-jetty/src/main/java/org/apache/camel/component/jetty/JettyContentExchange.java;components/camel-spring/src/test/java/org/apache/camel/spring/CamelContextFactoryBeanTest.java;
462,3140,Improvement,Closed,Fixed,camel-core,Minor,Martin Krasser,2010/09/21 08:15:18 +0100,2010/09/21 08:15:18 +0100,Martin Krasser,2010/09/23 19:24:02 +0100,2.464398148,2.464398148,Context-sensitive setting of default UuidGenerator   ,Use JavaUuidGenerator in GAE environment  otherwise use ActiveMQUuidGenerator as default UuidGenerator.   ,2.4.0,2.5.0,0,0,12,1,7,2,0,0,0,0,0.0,0.0,0.0,0.0,
463,3141,Bug,Closed,Fixed,camel-core; camel-spring,Minor,Achim Nierbeck,2010/09/21 13:31:10 +0100,2010/09/21 13:47:31 +0100,Claus Ibsen,2010/09/21 15:17:44 +0100,0.07400463,0.062650463,Route autoStartup configurable through Property   ,Using Camel 2.4 I want to make the usage of a certain route configurable through properties. &lt;camelContext id='camel' trace='true' xmlns='http://camel.apache.org/schema/spring'&gt; &lt;route id='configurable_1' autoStartup='{{startup_1}}'&gt; &lt;from uri='direct:start_1'/&gt; &lt;to uri='mock:end_1'/&gt; &lt;/route&gt; &lt;route id='configurable_2' autoStartup='{{startup_2}}'&gt; &lt;from uri='direct:start_2'/&gt; &lt;to uri='mock:end_2'/&gt; &lt;/route&gt;&lt;/camelContext&gt;But if I do use the PropertyPlaceholder on the CamelContext like below it works. &lt;camelContext id='camel' trace='true' autoStartup='{{startup_context}}'So is this a bug or should this work this way?   ,2.4.0,2.5.0,0,0,94,1,5,2,0,0,0,0,0.0,0.0,1.0,12.0,camel-core/src/main/java/org/apache/camel/impl/DefaultCamelContext.java;camel-core/src/main/java/org/apache/camel/model/RouteDefinition.java;camel-core/src/main/java/org/apache/camel/model/RouteDefinitionHelper.java;camel-core/src/main/java/org/apache/camel/util/CamelContextHelper.java;camel-core/src/test/java/org/apache/camel/impl/ActiveMQUuidGeneratorTest.java;components/camel-core-xml/src/main/java/org/apache/camel/core/xml/AbstractCamelContextFactoryBean.java;components/camel-jpa/src/main/java/org/apache/camel/component/jpa/JpaConsumer.java;components/camel-spring/src/test/java/org/apache/camel/spring/config/RouteAutoStartupPropertiesTest.java;components/camel-spring/src/test/java/org/apache/camel/spring/scan/DefaultPackageScanClassResolverTest.java;components/camel-spring/src/test/resources/org/apache/camel/spring/config/RouteAutoStartupFalseTest.xml;components/camel-spring/src/test/resources/org/apache/camel/spring/config/RouteAutoStartupTrueTest.xml;components/camel-spring/src/test/resources/org/apache/camel/spring/config/route.properties;
470,3188,Bug,Closed,Fixed,camel-core,Major,Brian Feaver,2010/10/01 21:21:02 +0100,2010/10/02 09:00:01 +0100,Claus Ibsen,2010/10/02 16:16:43 +0100,0.7886689809999999,0.303263889,Concurrent consumers on seda endpoint can cause content routing to mismatch   ,When consuming concurrently from a seda endpoint  when the route contains a content router based on the header  it will randomly route through the wrong choice.In my specific case  I was consuming from an activemq queue  which would receive messages with a header that would then determine which route it would follow. It would randomly send messages down the wrong path. When I turned on tracing  it would behave itself. It also behaved itself when I limited it to only a single consumer. I was  however  able to duplicate it with the unit test below. Due to the concurrency issue  the test can occasionally pass  but run it a couple times and it should fail. It'll either receive 2 messages when it should have only gotten 1  or it will get no messages when it should have gotten 1.ConcurrencyTest.javaimport org.apache.camel.EndpointInject;import org.apache.camel.Produce;import org.apache.camel.ProducerTemplate;import org.apache.camel.builder.RouteBuilder;import org.apache.camel.component.mock.MockEndpoint;import org.apache.camel.test.CamelTestSupport;public class ConcurrencyTest extends CamelTestSupport { @EndpointInject(uri = 'mock:result') protected MockEndpoint resultEndpoint; @EndpointInject(uri = 'mock:otherResult') protected MockEndpoint otherResultEndpoint; @Produce(uri = 'seda:start') protected ProducerTemplate template; public void testSendMatchingMessage() throws Exception { String expectedBody = '&lt;matched/&gt;'; resultEndpoint.expectedBodiesReceived(expectedBody); otherResultEndpoint.expectedBodiesReceived(expectedBody); template.sendBodyAndHeader(expectedBody  'myDirection'  'send'); template.sendBodyAndHeader(expectedBody  'myDirection'  'received'); resultEndpoint.assertIsSatisfied(); } @Override protected RouteBuilder createRouteBuilder() { return new RouteBuilder() { public void configure() { from('seda:start?concurrentConsumers=10')// from('seda:start?concurrentConsumers=1') .choice() .when(header('myDirection').isEqualTo('send')).to('mock:result') .when(header('myDirection').isEqualTo('received')).to('mock:otherResult'); } }; }}   ,2.3.0; 2.4.0,2.5.0,0,0,257,1,4,1,0,1,0,1,0.0,1.0,1.0,7.0,camel-core/src/main/java/org/apache/camel/BinaryPredicate.java;camel-core/src/main/java/org/apache/camel/builder/BinaryPredicateSupport.java;camel-core/src/main/java/org/apache/camel/processor/ChoiceProcessor.java;camel-core/src/main/java/org/apache/camel/util/ObjectHelper.java;camel-core/src/test/java/org/apache/camel/builder/PredicateBuilderConcurrentTest.java;camel-core/src/test/java/org/apache/camel/builder/PredicateBuilderTest.java;camel-core/src/test/java/org/apache/camel/issues/CBRConcurrencyIssueTest.java;
472,3201,Bug,Closed,Fixed,camel-cxf,Major,S. Ali Tokmen,2010/10/06 13:59:02 +0100,2010/10/06 14:38:56 +0100,Hadrian Zbarcea,2010/10/07 07:07:02 +0100,0.713888889,0.6861805559999999,The CxfConsumer's getContinuation method might throw NPE   ,HelloWhen trying the latest CAMEL 2.5.0 SNAPSHOT  I got a NPE:java.lang.NullPointerException at org.apache.camel.component.cxf.CxfConsumer$1.getContinuation(CxfConsumer.java:129) at org.apache.camel.component.cxf.CxfConsumer$1.invoke(CxfConsumer.java:65) at org.apache.cxf.interceptor.ServiceInvokerInterceptor$1.run(ServiceInvokerInterceptor.java:58) at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441) at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)...   ,2.5.0,2.5.0,0,0,27,1,10,4,0,0,0,0,0.0,0.0,0.0,0.0,
473,3202,Improvement,Closed,Fixed,camel-core,Minor,Norman Maurer,2010/10/06 15:09:03 +0100,2010/11/27 16:33:10 +0100,Claus Ibsen,2010/11/27 16:33:10 +0100,52.05841435,0.0,Add Exchange creation time to the exchange as property   ,Sometimes it would be really nice to access the exchange creation time from a processor. This can be of use for many tasks  like statistics etc.   ,2.4.0,2.6.0,0,0,26,1,5,2,0,0,0,0,0.0,0.0,1.0,4.0,camel-core/src/main/java/org/apache/camel/Exchange.java;camel-core/src/main/java/org/apache/camel/impl/DefaultUnitOfWork.java;camel-core/src/test/java/org/apache/camel/processor/ExchangeCreatedTimestampTest.java;camel-core/src/test/java/org/apache/camel/processor/interceptor/DefaultTraceEventMessageTest.java;
474,3220,Bug,Closed,Fixed,camel-core,Minor,Claus Ibsen,2010/10/12 07:43:10 +0100,2010/10/12 07:43:10 +0100,Claus Ibsen,2010/10/12 08:14:35 +0100,0.02181713,0.02181713,Threads - Should allow using 0 in core pool size   ,See nabblehttp://camel.465427.n5.nabble.com/ThreadPoolExecutor-configuration-tp3207845p3207845.html   ,2.4.0,2.5.0,0,0,5,1,2,1,0,0,0,0,0.0,0.0,3.0,5.0,camel-core/src/main/java/org/apache/camel/model/ThreadsDefinition.java;camel-core/src/test/java/org/apache/camel/processor/ThreadsZeroInCoreAndMaxPoolTest.java;camel-core/src/main/java/org/apache/camel/impl/DefaultExecutorServiceStrategy.java;camel-core/src/test/java/org/apache/camel/processor/ThreadsZeroInCoreAndMaxPoolTest.java;camel-core/src/main/java/org/apache/camel/impl/DefaultExecutorServiceStrategy.java;
475,3222,Improvement,Closed,Fixed,camel-core,Minor,Claus Ibsen,2010/10/12 12:19:16 +0100,2010/10/12 12:42:09 +0100,Claus Ibsen,2010/10/12 19:04:28 +0100,0.281388889,0.265497685,Route definitions should use boxed types and lazy evaluate defaults in the getter   ,When you output a route definition as XML then all the boolean types and whatnot get outputted using their default values.For example inheritErrorHandler=true.This reduces the XML and keeps it much smaller.   ,2.4.0,2.5.0,0,0,31,1,4,1,0,0,0,0,0.0,0.0,1.0,18.0,camel-core/src/main/java/org/apache/camel/converter/jaxp/XmlConverter.java;camel-core/src/main/java/org/apache/camel/model/DelayDefinition.java;camel-core/src/main/java/org/apache/camel/model/DynamicRouterDefinition.java;camel-core/src/main/java/org/apache/camel/model/IdempotentConsumerDefinition.java;camel-core/src/main/java/org/apache/camel/model/InterceptSendToEndpointDefinition.java;camel-core/src/main/java/org/apache/camel/model/LogDefinition.java;camel-core/src/main/java/org/apache/camel/model/OnCompletionDefinition.java;camel-core/src/main/java/org/apache/camel/model/OnExceptionDefinition.java;camel-core/src/main/java/org/apache/camel/model/ProcessorDefinition.java;camel-core/src/main/java/org/apache/camel/model/RouteDefinition.java;camel-core/src/main/java/org/apache/camel/model/RoutingSlipDefinition.java;camel-core/src/main/java/org/apache/camel/model/SamplingDefinition.java;camel-core/src/main/java/org/apache/camel/model/ThreadPoolProfileDefinition.java;camel-core/src/main/java/org/apache/camel/model/ThreadsDefinition.java;camel-core/src/main/java/org/apache/camel/model/ThrottleDefinition.java;camel-core/src/main/java/org/apache/camel/model/WireTapDefinition.java;camel-core/src/main/java/org/apache/camel/processor/RedeliveryErrorHandler.java;components/camel-scala/src/main/scala/org/apache/camel/scala/dsl/SThrottleDefinition.scala;
477,3231,Bug,Closed,Fixed,,Major,Beat Glattfelder,2010/10/13 15:34:23 +0100,2010/10/14 20:39:36 +0100,Claus Ibsen,2010/10/14 20:39:36 +0100,1.211956019,0.0,JMX MBeans not registered for initiators   ,registering the Initiator before it has been started will not register the sessions mbeans with JMX. So the acceptors are ther  but no initiators.   ,2.5.0,2.5.0,0,0,24,1,8,3,0,0,0,0,0.0,0.0,1.0,2.0,components/camel-quickfix/src/main/java/org/apache/camel/component/quickfixj/QuickfixjEngine.java;components/camel-quickfix/src/test/java/org/apache/camel/component/quickfixj/QuickfixjEngineTest.java;
479,3242,Improvement,Closed,Fixed,,Minor,Claus Ibsen,2010/10/16 13:28:41 +0100,2010/10/16 13:28:41 +0100,Claus Ibsen,2010/10/19 08:03:56 +0100,2.774479167,2.774479167,RetryWhile is missing on the errorHandler DSL   ,You can only use retryWhile on the onException. It should be possible from errorHandler as well.   ,2.4.0,2.5.0,0,0,16,1,3,1,0,0,0,0,0.0,0.0,1.0,14.0,camel-core/src/main/java/org/apache/camel/builder/DeadLetterChannelBuilder.java;camel-core/src/main/java/org/apache/camel/builder/DefaultErrorHandlerBuilder.java;camel-core/src/main/java/org/apache/camel/processor/DeadLetterChannel.java;camel-core/src/main/java/org/apache/camel/processor/DefaultErrorHandler.java;camel-core/src/main/java/org/apache/camel/processor/LoggingErrorHandler.java;camel-core/src/main/java/org/apache/camel/processor/RedeliveryErrorHandler.java;camel-core/src/test/java/org/apache/camel/processor/onexception/DefaultErrorHandlerRetryWhileTest.java;components/camel-blueprint/src/main/java/org/apache/camel/blueprint/ErrorHandlerDefinition.java;components/camel-spring/src/main/java/org/apache/camel/spring/ErrorHandlerDefinition.java;components/camel-spring/src/main/java/org/apache/camel/spring/handler/ErrorHandlerDefinitionParser.java;components/camel-spring/src/main/java/org/apache/camel/spring/spi/TransactionErrorHandler.java;components/camel-spring/src/main/java/org/apache/camel/spring/spi/TransactionErrorHandlerBuilder.java;components/camel-spring/src/test/java/org/apache/camel/spring/processor/SpringDefaultErrorHandlerRetryWhileTest.java;components/camel-spring/src/test/resources/org/apache/camel/spring/processor/DefaultErrorHandlerRetryWhileTest.xml;
480,3260,Improvement,Resolved,Fixed,camel-core,Minor,Claus Ibsen,2010/10/20 15:00:15 +0100,2011/05/07 09:53:34 +0100,Claus Ibsen,2011/05/07 11:44:52 +0100,198.8643171,0.07729166700000001,Let LazyLoadingTypeConverter load the converters from camel-core on startup   ,When using lazy loading type converter and Spring XML you will trigger the type converters to be loaded on startup due XML configuration needs to convert from String -&gt; other types etc.So we should let Camel always load the type converters from camel-core as they are essential. Then the package scanning converters can be loaded on demand later.   ,2.5.0,2.8.0,0,0,58,1,0,0,0,0,0,0,0.0,0.0,1.0,78.0,camel-core/src/main/java/org/apache/camel/converter/ObjectConverter.java;camel-core/src/main/java/org/apache/camel/impl/converter/AnnotationTypeConverterLoader.java;camel-core/src/main/java/org/apache/camel/impl/converter/BaseTypeConverterRegistry.java;camel-core/src/main/java/org/apache/camel/impl/converter/CorePackageScanClassResolver.java;camel-core/src/main/java/org/apache/camel/impl/converter/CoreTypeConverterLoader.java;camel-core/src/main/java/org/apache/camel/impl/converter/DefaultTypeConverter.java;camel-core/src/main/java/org/apache/camel/impl/converter/EnumTypeConverter.java;camel-core/src/main/java/org/apache/camel/impl/converter/LazyLoadingTypeConverter.java;camel-core/src/main/java/org/apache/camel/impl/osgi/Activator.java;camel-core/src/main/resources/META-INF/services/org/apache/camel/TypeConverter;camel-core/src/test/java/org/apache/camel/ContextTestSupport.java;camel-core/src/test/java/org/apache/camel/builder/PredicateBinaryCoerceRouteTest.java;camel-core/src/test/java/org/apache/camel/converter/InstanceDummyFallbackConverter.java;camel-core/src/test/java/org/apache/camel/converter/InstanceMethodWithExchangeTestConverter.java;camel-core/src/test/java/org/apache/camel/converter/MyFallbackPromoteConverter.java;camel-core/src/test/java/org/apache/camel/converter/PurchaseOrderConverter.java;camel-core/src/test/java/org/apache/camel/converter/StaticDummyFallbackConverter.java;camel-core/src/test/java/org/apache/camel/converter/StaticMethodWithExchangeTestConverter.java;camel-core/src/test/java/org/apache/camel/converter/myconverter/InstanceDummyFallbackConverter.java;camel-core/src/test/java/org/apache/camel/converter/myconverter/InstanceMethodWithExchangeTestConverter.java;camel-core/src/test/java/org/apache/camel/converter/myconverter/MyFallbackPromoteConverter.java;camel-core/src/test/java/org/apache/camel/converter/myconverter/PurchaseOrderConverter.java;camel-core/src/test/java/org/apache/camel/converter/myconverter/StaticDummyFallbackConverter.java;camel-core/src/test/java/org/apache/camel/converter/myconverter/StaticMethodWithExchangeTestConverter.java;camel-core/src/test/java/org/apache/camel/processor/SimpleMockNoLazyTypeConverterTest.java;camel-core/src/test/resources/META-INF/services/org/apache/camel/TypeConverter;camel-core/src/test/resources/log4j.properties;components/camel-blueprint/pom.xml;components/camel-blueprint/src/main/java/org/apache/camel/blueprint/BlueprintCamelContext.java;components/camel-core-osgi/src/main/java/org/apache/camel/core/osgi/OsgiComponentResolver.java;components/camel-core-osgi/src/main/java/org/apache/camel/core/osgi/OsgiDefaultCamelContext.java;components/camel-core-osgi/src/main/java/org/apache/camel/core/osgi/OsgiTypeConverter.java;components/camel-core-osgi/src/test/resources/META-INF/services/org/apache/camel/TypeConverter;components/camel-ftp/src/test/java/org/apache/camel/component/file/remote/FtpConsumerDirectoriesNotMatchedTest.java;components/camel-groovy/pom.xml;components/camel-groovy/src/test/java/org/apache/camel/language/groovy/GroovyInvokeMethodTest.java;components/camel-groovy/src/test/java/org/apache/camel/language/groovy/GroovyLanguageTest.java;components/camel-groovy/src/test/java/org/apache/camel/language/groovy/GroovySetFixedHeaderTest.java;components/camel-groovy/src/test/java/org/apache/camel/language/groovy/GroovySetHeaderTest.java;components/camel-groovy/src/test/java/org/apache/camel/processor/groovy/GroovyFilterTest.java;components/camel-groovy/src/test/resources/org/apache/camel/processor/groovy/groovyFilter.xml;components/camel-jetty/src/test/java/org/apache/camel/component/jetty/JettyMinMaxThreadPoolTest.java;components/camel-juel/pom.xml;components/camel-juel/src/test/java/org/apache/camel/language/juel/JuelLanguageTest.java;components/camel-juel/src/test/java/org/apache/camel/language/juel/JuelTest.java;components/camel-juel/src/test/java/org/apache/camel/language/juel/NullBodyTest.java;components/camel-juel/src/test/java/org/apache/camel/language/juel/issues/XsltLosesHeaderTest.java;components/camel-juel/src/test/java/org/apache/camel/processor/juel/SimulatorTest.java;components/camel-msv/pom.xml;components/camel-msv/src/test/java/org/apache/camel/component/validator/msv/RelaxNGRouteTest.java;components/camel-mvel/pom.xml;components/camel-mvel/src/test/java/org/apache/camel/language/mvel/MvelTest.java;components/camel-ognl/pom.xml;components/camel-ognl/src/test/java/org/apache/camel/language/ognl/OgnlInvokeMethodTest.java;components/camel-ognl/src/test/java/org/apache/camel/language/ognl/OgnlTest.java;components/camel-ognl/src/test/java/org/apache/camel/language/ognl/patterns/FilterTest.java;components/camel-script/pom.xml;components/camel-script/src/test/java/org/apache/camel/builder/script/example/AnyLanguageFilterTest.java;components/camel-script/src/test/java/org/apache/camel/builder/script/example/BeanShellFilterTest.java;components/camel-script/src/test/java/org/apache/camel/builder/script/example/GroovyFilterTest.java;components/camel-script/src/test/java/org/apache/camel/builder/script/example/JavaScriptFilterTest.java;components/camel-script/src/test/java/org/apache/camel/builder/script/example/PythonFilterTest.java;components/camel-script/src/test/java/org/apache/camel/builder/script/example/RubyFilterTest.java;components/camel-script/src/test/java/org/apache/camel/builder/script/example/XPathFilterTest.java;components/camel-script/src/test/java/org/apache/camel/language/script/JavaScriptLanguageTest.java;components/camel-script/src/test/java/org/apache/camel/language/script/PythonLanguageTest.java;components/camel-spring/src/main/java/org/apache/camel/osgi/OsgiSpringCamelContext.java;components/camel-spring/src/test/java/org/apache/camel/spring/SpringTestSupport.java;components/camel-test/src/main/java/org/apache/camel/test/CamelTestSupport.java;components/camel-test/src/main/java/org/apache/camel/test/LanguageTestSupport.java;components/camel-test/src/main/java/org/apache/camel/test/junit4/CamelTestSupport.java;components/camel-test/src/main/java/org/apache/camel/test/junit4/LanguageTestSupport.java;components/camel-test/src/test/java/org/apache/camel/test/patterns/DebugNoLazyTypeConverterTest.java;components/camel-testng/src/main/java/org/apache/camel/testng/CamelTestSupport.java;components/camel-testng/src/main/java/org/apache/camel/testng/LanguageTestSupport.java;components/camel-testng/src/test/java/org/apache/camel/testng/patterns/DebugNoLazyTypeConverterTest.java;components/camel-testng/src/test/java/org/apache/camel/testng/patterns/DebugTest.java;components/camel-testng/src/test/java/org/apache/camel/testng/patterns/FilterTest.java;
483,3276,Bug,Closed,Fixed,camel-core,Minor,Claus Ibsen,2010/10/25 16:05:42 +0100,2010/10/25 16:05:42 +0100,Claus Ibsen,2010/10/26 07:35:05 +0100,0.6454050929999999,0.6454050929999999,Multicast with pipeline may cause wrong aggregated exchange   ,This is a problem when using 2 set of nested pipeline and doing a transform as the first processor in that pipeline from('direct:start').multicast(new SumAggregateBean()) .pipeline().transform(bean(IncreaseOne.class)).bean(new IncreaseTwo()).to('log:foo').end() .pipeline().transform(bean(IncreaseOne.class)).bean(new IncreaseTwo()).to('log:bar').end() .end() .to('mock:result');   ,2.4.0,2.6.0,0,0,44,1,2,1,0,0,0,0,0.0,0.0,1.0,10.0,camel-core/src/main/java/org/apache/camel/util/ExchangeHelper.java;camel-core/src/test/java/org/apache/camel/component/seda/SedaWaitForTaskCompleteTest.java;camel-core/src/test/java/org/apache/camel/component/vm/VmWaitForTaskCompleteTest.java;camel-core/src/test/java/org/apache/camel/impl/DefaultProducerTemplateAsyncTest.java;camel-core/src/test/java/org/apache/camel/issues/MulticastPipelineAggregateIssueTest.java;components/camel-amqp/src/test/java/org/apache/camel/component/amqp/AMQPRouteTest.java;components/camel-crypto/src/test/java/org/apache/camel/component/crypto/SignatureTests.java;components/camel-crypto/src/test/java/org/apache/camel/converter/crypto/CryptoDataFormatTest.java;components/camel-crypto/src/test/java/org/apache/camel/converter/crypto/HMACAccumulatorTest.java;components/camel-jdbc/src/test/java/org/apache/camel/component/jdbc/JdbcPreserveHeadersTest.java;
486,3293,Improvement,Closed,Fixed,camel-core,Minor,Claus Ibsen,2010/10/29 10:31:04 +0100,,Unassigned,2010/10/29 10:48:23 +0100,0.012025463,,Add exception.stacktrace to Simple language   ,So you can output the stracktrace. It should grab the stacktrace and print it to a String as output.   ,2.4.0,2.6.0,0,0,19,0,2,1,1,0,0,0,0.0,0.0,1.0,4.0,camel-core/src/main/java/org/apache/camel/builder/Builder.java;camel-core/src/main/java/org/apache/camel/builder/ExpressionBuilder.java;camel-core/src/main/java/org/apache/camel/language/simple/SimpleLanguage.java;camel-core/src/test/java/org/apache/camel/language/SimpleTest.java;
488,3319,Bug,Closed,Fixed,,Major,Willem Jiang,2010/11/07 05:23:55 +0100,2010/11/07 05:23:55 +0100,Willem Jiang,2010/11/08 01:24:35 +0100,0.8337962959999999,0.8337962959999999,cxfEndpoint of camel-cxf doesn't support  the shcemaLocation element   ,Here is the mail thread&#91;1&#93; which discusses about it.&#91;1&#93;http://camel.465427.n5.nabble.com/camel-cxf-exception-when-parsing-cxf-schemaLocation-element-td3253254.html#a3253254   ,2.0.0; 2.1.0; 2.2.0; 2.3.0; 2.4.0; 2.5.0,2.6.0,0,0,11,1,2,2,1,1,0,0,0.0,0.0,3.0,16.0,components/camel-cxf/src/main/java/org/apache/camel/component/cxf/spring/CxfEndpointBean.java;components/camel-cxf/src/main/java/org/apache/camel/component/cxf/spring/NamespaceHandler.java;components/camel-cxf/src/test/java/org/apache/camel/component/cxf/CxfSpringRouterTest.java;components/camel-cxf/src/test/java/org/apache/camel/component/cxf/spring/CxfEndpointBeanTest.java;components/camel-cxf/src/test/java/org/apache/camel/component/cxf/spring/CxfEndpointBeanWithBusTest.java;components/camel-cxf/src/test/java/org/apache/camel/component/cxf/spring/CxfEndpointBeansRouterTest.java;components/camel-cxf/src/test/resources/org/apache/camel/component/cxf/CxfEndpointBeans.xml;components/camel-cxf/src/test/resources/org/apache/camel/component/cxf/spring/CxfEndpointBeans.xml;components/camel-cxf/src/test/java/org/apache/camel/component/cxf/jaxrs/CxfRsSpringEndpointTest.java;components/camel-cxf/src/test/resources/org/apache/camel/component/cxf/jaxrs/CxfRsSpringEndpointBeans.xml;components/camel-cxf/src/main/java/org/apache/camel/component/cxf/spring/CxfRsClientFactoryBeanDefinitionParser.java;components/camel-cxf/src/main/java/org/apache/camel/component/cxf/spring/CxfRsServerFactoryBeanDefinitionParser.java;components/camel-cxf/src/test/java/org/apache/camel/component/cxf/spring/CxfRsClientFactoryBeanTest.java;components/camel-cxf/src/test/java/org/apache/camel/component/cxf/spring/CxfRsServerFactoryBeanTest.java;components/camel-cxf/src/test/resources/org/apache/camel/component/cxf/spring/CxfRsClientFactoryBeans.xml;components/camel-cxf/src/test/resources/org/apache/camel/component/cxf/spring/CxfRsServerFactoryBeans.xml;
493,3356,Bug,Closed,Fixed,camel-bindy,Minor,Richard Kettelerij,2010/11/23 21:39:12 +0100,2010/11/24 05:54:52 +0100,Hadrian Zbarcea,2010/11/24 06:16:02 +0100,0.358912037,0.014699074,Hard coded locale in Bindy DatePatternFormat   ,As reported by a user from the community (http://camel.465427.n5.nabble.com/Bindy-Dateformat-Parsing-exception-td3276981.html)  the locale of SimpeDateFormat in bindy's DatePatternFormat class is hard coded to FRANCE.   ,2.6.0,2.6.0,0,0,25,1,4,3,0,0,0,0,0.0,0.0,1.0,1.0,components/camel-bindy/src/main/java/org/apache/camel/dataformat/bindy/FormatFactory.java;
495,3377,Bug,Closed,Fixed,camel-spring-integration,Minor,Claus Ibsen,2010/11/29 10:40:03 +0100,2010/11/29 10:40:03 +0100,Claus Ibsen,2010/11/29 11:29:58 +0100,0.034664352,0.034664352,spring-integration - Should have better configuration validation   ,See nabblehttp://camel.465427.n5.nabble.com/Integration-camel-and-spring-integration-tp3284105p3284105.html   ,2.5.0,2.6.0,0,0,5,1,2,1,0,0,0,0,0.0,0.0,1.0,26.0,components/camel-spring-integration/src/main/java/org/apache/camel/component/spring/integration/SpringIntegrationBinding.java;components/camel-spring-integration/src/main/java/org/apache/camel/component/spring/integration/SpringIntegrationComponent.java;components/camel-spring-integration/src/main/java/org/apache/camel/component/spring/integration/SpringIntegrationConsumer.java;components/camel-spring-integration/src/main/java/org/apache/camel/component/spring/integration/SpringIntegrationEndpoint.java;components/camel-spring-integration/src/main/java/org/apache/camel/component/spring/integration/SpringIntegrationHelper.java;components/camel-spring-integration/src/main/java/org/apache/camel/component/spring/integration/SpringIntegrationMessage.java;components/camel-spring-integration/src/main/java/org/apache/camel/component/spring/integration/SpringIntegrationProducer.java;components/camel-spring-integration/src/main/java/org/apache/camel/component/spring/integration/adapter/AbstractCamelAdapter.java;components/camel-spring-integration/src/main/java/org/apache/camel/component/spring/integration/adapter/CamelSourceAdapter.java;components/camel-spring-integration/src/main/java/org/apache/camel/component/spring/integration/adapter/CamelTargetAdapter.java;components/camel-spring-integration/src/main/java/org/apache/camel/component/spring/integration/adapter/config/AbstractCamelContextBeanDefinitionParaser.java;components/camel-spring-integration/src/main/java/org/apache/camel/component/spring/integration/adapter/config/CamelSourceAdapterParser.java;components/camel-spring-integration/src/main/java/org/apache/camel/component/spring/integration/adapter/config/CamelSourceAdpaterParser.java;components/camel-spring-integration/src/main/java/org/apache/camel/component/spring/integration/adapter/config/CamelTargetAdapterParser.java;components/camel-spring-integration/src/main/java/org/apache/camel/component/spring/integration/adapter/config/NamespaceHandler.java;components/camel-spring-integration/src/main/java/org/apache/camel/component/spring/integration/converter/SpringIntegrationConverter.java;components/camel-spring-integration/src/test/java/org/apache/camel/component/spring/integration/HelloWorldService.java;components/camel-spring-integration/src/test/java/org/apache/camel/component/spring/integration/SpringIntegrationChannelConverterTest.java;components/camel-spring-integration/src/test/java/org/apache/camel/component/spring/integration/SpringIntegrationOneWayConsumerTest.java;components/camel-spring-integration/src/test/java/org/apache/camel/component/spring/integration/SpringIntegrationTwoWayConsumerTest.java;components/camel-spring-integration/src/test/resources/org/apache/camel/component/spring/integration/adapter/CamelSource.xml;components/camel-spring-integration/src/test/resources/org/apache/camel/component/spring/integration/adapter/CamelTarget.xml;components/camel-spring-integration/src/test/resources/org/apache/camel/component/spring/integration/oneWayConsumer.xml;components/camel-spring-integration/src/test/resources/org/apache/camel/component/spring/integration/producer.xml;components/camel-spring-integration/src/test/resources/org/apache/camel/component/spring/integration/springChannelConverter.xml;components/camel-spring-integration/src/test/resources/org/apache/camel/component/spring/integration/twoWayConsumer.xml;
497,3399,Improvement,Closed,Fixed,camel-core; jmx,Minor,Claus Ibsen,2010/12/07 08:34:52 +0100,2010/12/07 08:34:52 +0100,Claus Ibsen,2010/12/07 10:49:21 +0100,0.093391204,0.093391204,Tidying up strategy for managing resources in JMX   ,The management strategy should be1) use ManagementAware if implemented on bean2) use @ManagedResource if provided on bean3) otherwise use defaultConsider using fallback from 1-&gt;2 which is the current behavior. If we change this we will break backwards compatibility.But in essence we should had Camel fail if (1) cannot be registered  and not just fallback to use (2) as it does today.   ,2.5.0,2.6.0,0,0,61,1,2,1,0,0,0,0,0.0,0.0,1.0,30.0,camel-core/src/main/java/org/apache/camel/component/timer/TimerEndpoint.java;camel-core/src/main/java/org/apache/camel/management/DefaultManagementLifecycleStrategy.java;camel-core/src/main/java/org/apache/camel/management/JmxMBeanAssembler.java;camel-core/src/main/java/org/apache/camel/management/mbean/ManagedCamelContext.java;camel-core/src/main/java/org/apache/camel/management/mbean/ManagedComponent.java;camel-core/src/main/java/org/apache/camel/management/mbean/ManagedConsumer.java;camel-core/src/main/java/org/apache/camel/management/mbean/ManagedCounter.java;camel-core/src/main/java/org/apache/camel/management/mbean/ManagedCustomProcessor.java;camel-core/src/main/java/org/apache/camel/management/mbean/ManagedDelayer.java;camel-core/src/main/java/org/apache/camel/management/mbean/ManagedEndpoint.java;camel-core/src/main/java/org/apache/camel/management/mbean/ManagedErrorHandler.java;camel-core/src/main/java/org/apache/camel/management/mbean/ManagedEventNotifier.java;camel-core/src/main/java/org/apache/camel/management/mbean/ManagedInstance.java;camel-core/src/main/java/org/apache/camel/management/mbean/ManagedPerformanceCounter.java;camel-core/src/main/java/org/apache/camel/management/mbean/ManagedProcessor.java;camel-core/src/main/java/org/apache/camel/management/mbean/ManagedProducer.java;camel-core/src/main/java/org/apache/camel/management/mbean/ManagedProducerCache.java;camel-core/src/main/java/org/apache/camel/management/mbean/ManagedRoute.java;camel-core/src/main/java/org/apache/camel/management/mbean/ManagedScheduledPollConsumer.java;camel-core/src/main/java/org/apache/camel/management/mbean/ManagedSendProcessor.java;camel-core/src/main/java/org/apache/camel/management/mbean/ManagedService.java;camel-core/src/main/java/org/apache/camel/management/mbean/ManagedThrottler.java;camel-core/src/main/java/org/apache/camel/management/mbean/ManagedThrottlingInflightRoutePolicy.java;camel-core/src/main/java/org/apache/camel/management/mbean/ManagedTracer.java;camel-core/src/main/java/org/apache/camel/spi/ManagementAware.java;camel-core/src/main/java/org/apache/camel/util/ObjectHelper.java;camel-core/src/test/java/org/apache/camel/management/ManagedCustomProcessorTest.java;components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsEndpoint.java;components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsTemporaryQueueEndpoint.java;components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsTemporaryTopicEndpoint.java;
498,3402,Improvement,Closed,Fixed,camel-guice,Major,Jean-Baptiste Onofr?,2010/12/08 08:05:10 +0100,2010/12/08 09:13:58 +0100,Willem Jiang,2010/12/08 14:42:43 +0100,0.276076389,0.228298611,Use ServiceMix guice bundle   ,In order to avoid to go on the googlecode maven repository  I provided a ServiceMix OSGi bundle for guice.This bundle could be used by Camel in the Karaf features descriptor.   ,2.5.0,2.6.0,0,0,30,1,2,2,0,0,0,0,0.0,0.0,1.0,5.0,components/camel-guice/pom.xml;parent/pom.xml;platforms/karaf/features/pom.xml;platforms/karaf/features/src/main/resources/features-spring2.xml;platforms/karaf/features/src/main/resources/features.xml;
499,3403,Bug,Closed,Fixed,camel-core,Minor,Claus Ibsen,2010/12/08 08:44:26 +0100,2010/12/08 08:44:26 +0100,Claus Ibsen,2010/12/08 09:16:10 +0100,0.022037037000000002,0.022037037000000002,InterceptSendToEndpoint should check for if stop DSL has been used   ,See nabblehttp://camel.465427.n5.nabble.com/InterceptSendToEndpoint-Http-Component-tp3296620p3296620.html   ,2.5.0,2.6.0,0,0,5,1,2,1,0,0,0,1,0.0,0.0,1.0,4.0,camel-core/src/main/java/org/apache/camel/component/mock/MockEndpoint.java;camel-core/src/main/java/org/apache/camel/processor/PipelineHelper.java;camel-core/src/main/java/org/apache/camel/spi/ManagementAware.java;camel-core/src/test/java/org/apache/camel/processor/intercept/InterceptSendToEndpointWithStopTest.java;
